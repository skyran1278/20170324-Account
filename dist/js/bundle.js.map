{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/chart.js/src/chart.js","node_modules/chart.js/src/charts/Chart.Bar.js","node_modules/chart.js/src/charts/Chart.Bubble.js","node_modules/chart.js/src/charts/Chart.Doughnut.js","node_modules/chart.js/src/charts/Chart.Line.js","node_modules/chart.js/src/charts/Chart.PolarArea.js","node_modules/chart.js/src/charts/Chart.Radar.js","node_modules/chart.js/src/charts/Chart.Scatter.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.canvasHelpers.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/core/core.element.js","node_modules/chart.js/src/core/core.helpers.js","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.js","node_modules/chart.js/src/core/core.layoutService.js","node_modules/chart.js/src/core/core.legend.js","node_modules/chart.js/src/core/core.plugin.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.scaleService.js","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.title.js","node_modules/chart.js/src/core/core.tooltip.js","node_modules/chart.js/src/elements/element.arc.js","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.js","node_modules/chart.js/src/elements/element.rectangle.js","node_modules/chart.js/src/platforms/platform.dom.js","node_modules/chart.js/src/platforms/platform.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chartjs-color-string/color-string.js","node_modules/chartjs-color/index.js","node_modules/color-convert/conversions.js","node_modules/color-convert/index.js","node_modules/color-name/index.js","node_modules/moment/moment.js","node_modules/uuid/index.js","node_modules/uuid/lib/bytesToUuid.js","node_modules/uuid/lib/rng-browser.js","node_modules/uuid/v1.js","node_modules/uuid/v4.js","src/scripts/main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Chart","window","Bar","context","config","type","Bubble","Doughnut","Line","PolarArea","Radar","defaultConfig","hover","mode","scales","xAxes","position","id","yAxes","tooltips","callbacks","title","label","tooltipItem","xLabel","yLabel","defaults","scatter","controllers","line","Scatter","helpers","bar","categoryPercentage","barPercentage","gridLines","offsetGridLines","DatasetController","extend","dataElementType","elements","Rectangle","initialize","chart","datasetIndex","prototype","this","me","meta","getMeta","dataset","getDataset","stack","getStackCount","yScale","getScaleForId","yAxisID","stacks","each","data","datasets","dsMeta","getDatasetMeta","isDatasetVisible","options","stacked","indexOf","undefined","push","update","reset","rectangle","index","updateElement","xScale","xAxisID","scaleBase","getBasePixel","rectangleElementOptions","custom","_xScale","_yScale","_datasetIndex","_index","ruler","getRuler","_model","x","calculateBarX","y","calculateBarY","labels","datasetLabel","horizontal","base","calculateBarBase","width","calculateBarWidth","backgroundColor","getValueAtIndexOrDefault","borderSkipped","borderColor","borderWidth","pivot","getBaseValue","original","value","Number","currentDs","currentDsMeta","currentVal","Math","min","max","getPixelForValue","stackCount","tickWidth","ticks","categoryWidth","categorySpacing","fullBarWidth","barWidth","barSpacing","barThickness","getStackIndex","j","stackIndex","leftTick","isCombo","sumPos","sumNeg","ds","stackedVal","draw","ease","len","easingDecimal","metaData","canvasHelpers","clipArea","ctx","chartArea","d","isNaN","transition","unclipArea","setHoverStyle","model","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","horizontalBar","tooltipItems","height","calculateBarHeight","originalBase","tickHeight","categoryHeight","fullBarHeight","barHeight","topTick","bubble","dataPoint","Point","points","point","pointElementOptions","dsIndex","getPixelForDecimal","NaN","radius","getRadius","hitRadius","skip","hoverRadius","dataVal","doughnut","animation","animateRotate","animateScale","aspectRatio","legendCallback","text","join","legend","generateLabels","map","arc","arcOpts","fillStyle","strokeStyle","lineWidth","hidden","onClick","legendItem","ilen","cutoutPercentage","rotation","PI","circumference","dataLabel","isArray","slice","pie","clone","Arc","linkScales","noop","getRingIndex","ringIndex","opts","availableWidth","right","left","availableHeight","bottom","top","minSize","offset","startAngle","endAngle","start","cos","sin","end","contains0","contains90","contains180","contains270","cutout","size","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","valueAtIndexOrDefault","element","abs","hoverWidth","_chart","lineEnabled","getValueOrDefault","showLine","showLines","spanGaps","datasetElementType","lineElementOptions","scale","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","scaleTop","scaleBottom","scaleZero","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","includeOffset","pointRadius","pointHitRadius","calculatePointY","pointStyle","stackedRightValue","getRightValue","rightValue","capControlPoint","pt","controlPoints","area","filter","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","capBezierPoints","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","polarArea","lineArc","beginAtZero","count","countVisibleElements","xCenter","yCenter","visibleCount","datasetStartAngle","distance","getDistanceFromCenterForValue","resetRadius","radar","_loop","getBasePosition","pointPosition","getPointPositionForValue","global","duration","easing","onProgress","onComplete","Animation","Element","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","chartInstance","animationObject","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","animationWrapper","splice","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","floor","endTime","drawPoint","edgeLength","xOffset","yOffset","toString","drawImage","beginPath","closePath","sqrt","moveTo","lineTo","SQRT2","fillRect","strokeRect","leftX","topY","sideSize","drawRoundedRectangle","stroke","save","rect","clip","restore","initConfig","configMerge","updateConfig","newOptions","concat","forEach","scaleOptions","tooltip","_options","plugins","platform","types","instances","Controller","item","instance","acquireContext","canvas","uid","_bufferedRender","Object","defineProperty","get","console","error","notify","retinaScale","bindEvents","responsive","resize","ensureScalesHaveIDs","buildScales","initToolTip","clear","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","style","newSize","onResize","responsiveAnimationDuration","scalesOptions","xAxisOptions","yAxisOptions","items","dtype","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","addScalesToLayout","buildOrUpdateControllers","newControllers","controller","updateIndex","resetElements","animationDuration","_data","buildOrUpdateElements","updateLayout","updateDatasets","_bufferedRequest","layoutService","animationOptions","callback","easingFunction","easingEffects","stepDecimal","easeDecimal","easingValue","boxes","box","drawDatasets","getElementAtEvent","Interaction","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","method","getDatasetAtEvent","_meta","generateLegend","destroy","unbindEvents","releaseContext","toBase64Image","toDataURL","apply","arguments","Tooltip","_chartInstance","listeners","_listeners","listener","eventHandler","events","addEventListener","removeEventListener","updateHoverStyle","enabled","changed","handleEvent","bufferedRequest","hoverOptions","lastActive","active","onHover","native","arrayEquals","listenArrayEvents","array","_chartjs","configurable","enumerable","arrayEvents","key","charAt","toUpperCase","args","Array","res","object","unlistenArrayEvents","stub","addElements","scaleID","createMetaDataset","createMetaData","addElementAndReset","resyncElements","elementOpts","valueOrDefault","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","configuration","_view","_start","hasOwnProperty","color","mix","rgbString","err","startVal","tooltipPosition","hasValue","isNumber","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","view","document","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","loopable","self","reverse","keys","obj","objClone","setFn","_base","extension","baseHasProperty","baseVal","scaleMerge","getScaleDefaults","valueObj","axisType","axisDefaults","defaultValue","where","collection","filterCallback","filtered","scope","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","extensions","ChartElement","constructor","Surrogate","__super__","parseFloat","isFinite","almostEquals","epsilon","almostWhole","rounded","round","reduce","NEGATIVE_INFINITY","sign","log10","log","LN10","toRadians","degrees","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distanceBetweenPoints","pt1","pt2","pow","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","deltaX","loop","niceNum","range","exponent","fraction","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","p","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getRelativePosition","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","addEvent","eventType","attachEvent","removeEvent","handler","detachEvent","getConstraintWidth","getConstraintHeight","container","w","clientWidth","cw","h","clientHeight","ch","el","property","currentStyle","getPropertyValue","pixelRatio","devicePixelRatio","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","string","textWidth","numberOfLabelLines","numberOfLines","quadraticCurveTo","c","CanvasGradient","defaultColor","a0","a1","v0","v1","callCallback","fn","_tArg","colorValue","CanvasPattern","saturate","darken","parseVisibleItems","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","center","getCenterPoint","indexMode","x-axis","nearest","sort","b","sizeA","getArea","sizeB","ret","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","addBox","removeBox","getMinimumBoxSize","isHorizontal","fullWidth","chartWidth","maxChartAreaWidth","horizontalBoxHeight","maxChartAreaHeight","verticalBoxWidth","chartAreaHeight","minBoxSizes","fitBox","minBoxSize","minBox","scaleMargin","totalLeftBoxesWidth","maxHorizontalLeftPadding","totalRightBoxesWidth","maxHorizontalRightPadding","chartHeight","finalFitVerticalBox","totalTopBoxesHeight","totalBottomBoxesHeight","placeBox","leftPadding","rightPadding","layoutOptions","layout","padding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaWidth","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","getBoxWidth","labelOpts","fontSize","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","Legend","display","ci","lineCap","lineDash","lineDashOffset","lineJoin","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","legendItems","globalDefault","itemOrDefault","labelFont","hitboxes","lineWidths","totalHeight","textAlign","textBaseline","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","fontColor","drawLegendBox","isLineWidthZero","setLineDash","offSet","fillText","lh","hitBox","register","beforeInit","afterEvent","_plugins","_cacheId","plugin","unregister","idx","getAll","hook","descriptor","params","descriptors","pluginService","PluginBase","computeTextSize","tick","parseFontOptions","globalDefaults","family","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","Ticks","formatters","values","Scale","longestTextCache","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","getPixelForTick","angleRadians","scaleLabelOpts","gridLineOpts","scaleLabelFontSize","isFullWidth","largestTextWidth","tallestLabelHeightInLines","lineSpace","longestLabelWidth","sinRotation","labelHeight","firstTick","firstLabelWidth","lastTick","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","skipRatio","maxTicks","optionTicks","isRotated","useAutoskipper","maxTicksLimit","tickFontColor","tl","scaleLabelFontColor","scaleLabelFont","labelRotationRadians","longestRotatedLabel","itemsToDraw","xTickStart","xTickEnd","yTickStart","yTickEnd","isLastTick","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","xLineValue","labelXOffset","isLeft","tickPadding","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","rotate","scaleLabelX","scaleLabelY","constructors","registerScaleType","scaleConstructor","updateScaleDefaults","additions","generators","generationOptions","dataRange","spacing","stepSize","niceRange","niceMin","niceMax","ceil","numSpaces","logarithmic","exp","significand","tickVal","endExp","endSignificand","minNotZero","tickValue","delta","logDelta","tickString","numDecimal","toFixed","remain","toExponential","createNewTitleBlockAndAttach","titleOpts","Title","titleBlock","pos","titleX","titleY","titleFont","mergeOpacity","colorString","opacity","alpha","rgbaString","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xPadding","yPadding","xAlign","yAlign","bodyFontColor","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyAlign","bodyFontSize","bodySpacing","titleFontColor","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontStyle","titleFontSize","_titleAlign","titleAlign","titleSpacing","titleMarginBottom","footerFontColor","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontStyle","footerFontSize","_footerAlign","footerAlign","footerSpacing","footerMarginTop","caretSize","cornerRadius","legendColorBackground","multiKeyBackground","displayColors","getTooltipSize","body","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleLineCount","footerLineCount","footer","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","vm","alignment","caretPadding","paddingAndSize","radiusAndPadding","beforeTitle","labelCount","afterTitle","beforeLabel","labelColor","activeElement","afterLabel","beforeFooter","afterFooter","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","positioners","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","x3","y3","ptX","ptY","drawTitle","drawBody","textColor","xLinePadding","fillLineOfText","drawColorBoxes","drawFooter","drawBackground","_lastActive","average","eventPosition","nearestElement","tp","globalOpts","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineToPoint","previousPoint","pointVM","bezierCurveTo","fillPoint","lastDrawnIndex","currentVM","globalOptionLineElements","xRange","yRange","ratio","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","borders","corner","bounds","readUsedSize","matches","match","initCanvas","renderHeight","getAttribute","renderWidth","initial","displayWidth","displayHeight","createEvent","fromNativeEvent","event","eventTypeMap","createResizer","iframe","createElement","className","cssText","tabIndex","contentWindow","addResizeListener","ticking","resizer","insertBefore","firstChild","removeResizeListener","removeChild","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","getElementById","HTMLCanvasElement","getContext","CanvasRenderingContext2D","prop","removeAttribute","setAttribute","proxies","proxy","implementation","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","suggestedMin","suggestedMax","numericGeneratorOptions","fixedStepSize","LogarithmicScale","tickValues","newVal","getValueCount","getPointLabelFontOptions","pointLabelOptions","pointLabels","measureLabelSize","determineLimits","fitWithPointLabels","textSize","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","angleLines","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","yHeight","moment","time","units","name","steps","maxStep","parser","format","unit","displayFormat","isoWeekday","minUnit","displayFormats","millisecond","second","minute","hour","day","week","month","quarter","year","TimeScale","getLabelMoment","labelMoments","getLabelDiff","labelDiffs","buildLabelDiffs","getMomentStartOf","startOf","tickUnit","scaleLabelMoments","labelMoment","parseTime","isValid","momentsForDataset","datasetVisible","scaleLabelDiffs","diff","diffsForDataset","unitScale","scaleSizeInUnits","unitStepSize","tempFirstLabel","tickFormatFunction","tickLabelWidth","labelCapacity","unitDefinitionIndex","unitDefinition","leadingUnitBuffer","trailingUnitBuffer","add","roundedStart","roundedEnd","newTick","tooltipFormat","formattedTick","tickMoments","asSeconds","getMonth","warn","getRgba","rgb","colorNames","getHsla","getHwb","getRgb","rgba","getHsl","hsla","getAlpha","vals","hexString","hexDouble","percentString","percentaString","hslString","hslaString","hwbString","hwb","keyword","reverseNames","num","str","convert","Color","valid","hsl","hsv","cmyk","setValues","red","lightness","v","whiteness","cyan","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","desaturate","whiten","blacken","greyscale","clearer","opaquer","mixinColor","weight","color1","w1","w2","toJSON","result","source","target","spaces","maxes","getValues","space","chans","capped","sname","svalues","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","m","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hi","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","hr","lab2rgb","lch2lab","lch","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","conversions","Converter","func","arg","pair","exec","from","to","convs","routeSpace","fspace","factory","define","amd","hooks","hookCallback","input","isObject","isObjectEmpty","isUndefined","isDate","arr","hasOwnProp","valueOf","createUTC","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","_isValid","flags","parsedParts","some$1","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","updateInProgress","updateOffset","isMoment","absFloor","number","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecateSimple","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","output","_calendar","longDateFormat","_longDateFormat","formatUpper","replace","invalidDate","_invalidDate","ordinal","_ordinal","relativeTime","withoutSuffix","isFuture","_relativeTime","pastFuture","addUnitAlias","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","makeGetSet","keepTime","set$1","stringGet","stringSet","prioritized","zeroFill","targetLength","forceSign","absNumber","zerosToFill","substr","addFormatToken","token","padded","formatTokenFunctions","localeData","removeFormattingTokens","makeFormatFunction","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","test","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","UTC","getUTCDate","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf$1","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","date","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","isLeapYear","getIsLeapYear","createDate","M","ms","getFullYear","setFullYear","createUTCDate","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","parseIsoWeekday","localeWeekdays","_weekdays","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","split","loadLocale","oldLocale","locales","globalLocale","_abbr","getSetGlobalLocale","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","updateLocale","listLocales","keys$1","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","configFromRFC2822","dayFormat","timezone","timezoneIndex","timezones"," GMT"," EDT"," EST"," CDT"," CST"," MDT"," MST"," PDT"," PST","military","basicRfcRegex","momentDate","momentDay","configFromString","aspNetJsonRegex","createFromInputFallback","currentDateArray","nowValue","_useUTC","getUTCMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","ISO_8601","RFC_2822","parsedInput","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","isValid$1","createInvalid$1","createDuration","Duration","years","quarters","weeks","days","seconds","milliseconds","_milliseconds","_days","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","matcher","chunk","parts","chunkOffset","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","formats","sod","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","toDate","inspect","zone","prefix","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","unix","toObject","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","some","fun","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match6","matchWord","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","kInput","_isPm","pos1","pos2","getSetHour","dayOfMonthOrdinalParse","meridiemParse","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","v4","uuid","bytesToUuid","buf","bth","byteToHex","rng","crypto","msCrypto","getRandomValues","rnds8","Uint8Array","rnds","random","clockseq","_clockseq","msecs","nsecs","_lastNSecs","dt","_lastMSecs","tmh","_nodeId","_seedBytes","writeAccountData","accountRef","database","ref","on","snapshot","location","updateData","deleteData","remove","submitListener","submitType","addFormRef","querySelector","preventDefault","_uuid2","default","search","updateBtnListener","updateBtns","querySelectorAll","deleteBtnListener","deleteBtns","loadChart","rawData","Meal","Life","Entertainment","edu","Traffic","Others","ctxRef","_chart2","_uuid","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","firebase","initializeApp","pathname","decodeURI","infoRef","dataTableRef","once","then","innerHTML"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCGA,GAAAK,GAAAX,EAAA,mBAEAA,GAAA,uBAAAW,GACAX,EAAA,2BAAAW,GACAX,EAAA,6BAAAW,GACAX,EAAA,yBAAAW,GACAX,EAAA,uBAAAW,GACAX,EAAA,yBAAAW,GACAX,EAAA,0BAAAW,GACAX,EAAA,iCAAAW,GACAX,EAAA,6BAAAW,GACAX,EAAA,4BAAAW,GACAX,EAAA,wBAAAW,GACAX,EAAA,qBAAAW,GACAX,EAAA,qBAAAW,GACAX,EAAA,sBAAAW,GACAX,EAAA,2BAAAW,GACAX,EAAA,uBAAAW,GAEAX,EAAA,0BAAAW,GACAX,EAAA,2BAAAW,GACAX,EAAA,4BAAAW,GACAX,EAAA,gCAAAW,GAEAX,EAAA,gCAAAW,GACAX,EAAA,2BAAAW,GACAX,EAAA,yBAAAW,GACAX,EAAA,8BAAAW,GACAX,EAAA,+BAAAW,GACAX,EAAA,uBAAAW,GAIAX,EAAA,gCAAAW,GACAX,EAAA,mCAAAW,GACAX,EAAA,qCAAAW,GACAX,EAAA,iCAAAW,GACAX,EAAA,sCAAAW,GACAX,EAAA,kCAAAW,GAEAX,EAAA,sBAAAW,GACAX,EAAA,yBAAAW,GACAX,EAAA,2BAAAW,GACAX,EAAA,uBAAAW,GACAX,EAAA,4BAAAW,GACAX,EAAA,wBAAAW,GACAX,EAAA,0BAAAW,GAEAC,OAAAD,MAAAD,EAAAJ,QAAAK,kqCCnDA,YAEAD,GAAAJ,QAAA,SAAAK,GAEAA,EAAAE,IAAA,SAAAC,EAAAC,GAGA,MAFAA,GAAAC,KAAA,MAEA,GAAAL,GAAAG,EAAAC,6BCPA,YAEAL,GAAAJ,QAAA,SAAAK,GAEAA,EAAAM,OAAA,SAAAH,EAAAC,GAEA,MADAA,GAAAC,KAAA,SACA,GAAAL,GAAAG,EAAAC,6BCNA,YAEAL,GAAAJ,QAAA,SAAAK,GAEAA,EAAAO,SAAA,SAAAJ,EAAAC,GAGA,MAFAA,GAAAC,KAAA,WAEA,GAAAL,GAAAG,EAAAC,6BCPA,YAEAL,GAAAJ,QAAA,SAAAK,GAEAA,EAAAQ,KAAA,SAAAL,EAAAC,GAGA,MAFAA,GAAAC,KAAA,OAEA,GAAAL,GAAAG,EAAAC,6BCPA,YAEAL,GAAAJ,QAAA,SAAAK,GAEAA,EAAAS,UAAA,SAAAN,EAAAC,GAGA,MAFAA,GAAAC,KAAA,YAEA,GAAAL,GAAAG,EAAAC,6BCPA,YAEAL,GAAAJ,QAAA,SAAAK,GAEAA,EAAAU,MAAA,SAAAP,EAAAC,GAGA,MAFAA,GAAAC,KAAA,QAEA,GAAAL,GAAAG,EAAAC,6BCPA,YAEAL,GAAAJ,QAAA,SAAAK,GAEA,GAAAW,IACAC,OACAC,KAAA,UAGAC,QACAC,QACAV,KAAA,SACAW,SAAA,SACAC,GAAA,aAEAC,QACAb,KAAA,SACAW,SAAA,OACAC,GAAA,cAIAE,UACAC,WACAC,MAAA,WAEA,MAAA,IAEAC,MAAA,SAAAC,GACA,MAAA,IAAAA,EAAAC,OAAA,KAAAD,EAAAE,OAAA,OAOAzB,GAAA0B,SAAAC,QAAAhB,EAGAX,EAAA4B,YAAAD,QAAA3B,EAAA4B,YAAAC,KAEA7B,EAAA8B,QAAA,SAAA3B,EAAAC,GAEA,MADAA,GAAAC,KAAA,UACA,GAAAL,GAAAG,EAAAC,6BC3CA,YAEAL,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,OAEA/B,GAAA0B,SAAAM,KACApB,OACAC,KAAA,SAGAC,QACAC,QACAV,KAAA,WAGA4B,mBAAA,GACAC,cAAA,GAGAC,WACAC,iBAAA,KAGAlB,QACAb,KAAA,aAKAL,EAAA4B,YAAAI,IAAAhC,EAAAqC,kBAAAC,QAEAC,gBAAAvC,EAAAwC,SAAAC,UAEAC,WAAA,SAAAC,EAAAC,GACA5C,EAAAqC,kBAAAQ,UAAAH,WAAA9C,KAAAkD,KAAAH,EAAAC,EAEA,IAAAG,GAAAD,KACAE,EAAAD,EAAAE,UACAC,EAAAH,EAAAI,YAEAH,GAAAI,MAAAF,EAAAE,MAEAJ,EAAAhB,KAAA,GAIAqB,cAAA,WACA,GAAAN,GAAAD,KACAE,EAAAD,EAAAE,UACAK,EAAAP,EAAAQ,cAAAP,EAAAQ,SAEAC,IAWA,OAVA1B,GAAA2B,KAAAX,EAAAJ,MAAAgB,KAAAC,SAAA,SAAAV,EAAAN,GACA,GAAAiB,GAAAd,EAAAJ,MAAAmB,eAAAlB,EACAiB,GAAA7B,KAAAe,EAAAJ,MAAAoB,iBAAAnB,KACAU,EAAAU,QAAAC,WAAA,GACAX,EAAAU,QAAAC,WAAA,GAAAR,EAAAS,QAAAL,EAAAT,UAAA,GACAe,SAAAb,EAAAU,QAAAC,UAAAE,SAAAN,EAAAT,OAAAK,EAAAS,QAAAL,EAAAT,UAAA,KACAK,EAAAW,KAAAP,EAAAT,QAEAL,GAEAU,EAAA5D,QAGAwE,OAAA,SAAAC,GACA,GAAAvB,GAAAD,IACAf,GAAA2B,KAAAX,EAAAE,UAAAU,KAAA,SAAAY,EAAAC,GACAzB,EAAA0B,cAAAF,EAAAC,EAAAF,IACAvB,IAGA0B,cAAA,SAAAF,EAAAC,EAAAF,GACA,GAAAvB,GAAAD,KACAE,EAAAD,EAAAE,UACAyB,EAAA3B,EAAAQ,cAAAP,EAAA2B,SACArB,EAAAP,EAAAQ,cAAAP,EAAAQ,SACAoB,EAAAtB,EAAAuB,eACAC,EAAA/B,EAAAJ,MAAAqB,QAAAxB,SAAA+B,UACAQ,EAAAR,EAAAQ,WACA7B,EAAAH,EAAAI,YAEAoB,GAAAS,QAAAN,EACAH,EAAAU,QAAA3B,EACAiB,EAAAW,cAAAnC,EAAAyB,MACAD,EAAAY,OAAAX,CAEA,IAAAY,GAAArC,EAAAsC,SAAAb,EACAD,GAAAe,QACAC,EAAAxC,EAAAyC,cAAAhB,EAAAzB,EAAAyB,MAAAY,GACAK,EAAAnB,EAAAM,EAAA7B,EAAA2C,cAAAlB,EAAAzB,EAAAyB,OAGAlD,MAAAyB,EAAAJ,MAAAgB,KAAAgC,OAAAnB,GACAoB,aAAA1C,EAAA5B,MAGAuE,YAAA,EACAC,KAAAxB,EAAAM,EAAA7B,EAAAgD,iBAAAhD,EAAAyB,MAAAA,GACAwB,MAAAjD,EAAAkD,kBAAAb,GACAc,gBAAAnB,EAAAmB,gBAAAnB,EAAAmB,gBAAAnE,EAAAoE,yBAAAjD,EAAAgD,gBAAA1B,EAAAM,EAAAoB,iBACAE,cAAArB,EAAAqB,cAAArB,EAAAqB,cAAAtB,EAAAsB,cACAC,YAAAtB,EAAAsB,YAAAtB,EAAAsB,YAAAtE,EAAAoE,yBAAAjD,EAAAmD,YAAA7B,EAAAM,EAAAuB,aACAC,YAAAvB,EAAAuB,YAAAvB,EAAAuB,YAAAvE,EAAAoE,yBAAAjD,EAAAoD,YAAA9B,EAAAM,EAAAwB,cAGA/B,EAAAgC,SAGAR,iBAAA,SAAAnD,EAAA4B,GACA,GAAAzB,GAAAD,KACAE,EAAAD,EAAAE,UACAK,EAAAP,EAAAQ,cAAAP,EAAAQ,SACAsC,EAAAxC,EAAAkD,eACAC,EAAAX,CAEA,IAAAxC,EAAAU,QAAAC,WAAA,GACAE,SAAAb,EAAAU,QAAAC,SAAAE,SAAAnB,EAAAI,MAAA,CAKA,IAAA,GAJAT,GAAAI,EAAAJ,MACAiB,EAAAjB,EAAAgB,KAAAC,SACA8C,EAAAC,OAAA/C,EAAAhB,GAAAe,KAAAa,IAEAlF,EAAA,EAAAA,EAAAsD,EAAAtD,IAAA,CACA,GAAAsH,GAAAhD,EAAAtE,GACAuH,EAAAlE,EAAAmB,eAAAxE,EACA,IAAAuH,EAAA7E,KAAA6E,EAAArD,UAAAF,EAAArC,IAAA0B,EAAAoB,iBAAAzE,IACA0D,EAAAI,QAAAyD,EAAAzD,MAAA,CACA,GAAA0D,GAAAH,OAAAC,EAAAjD,KAAAa,GACAsB,IAAAY,EAAA,EAAAK,KAAAC,IAAAF,EAAAL,GAAAM,KAAAE,IAAAH,EAAAL,IAIA,MAAAnD,GAAA4D,iBAAApB,GAGA,MAAAxC,GAAAuB,gBAGAQ,SAAA,WACA,GAAAtC,GAAAD,KACAE,EAAAD,EAAAE,UACAyB,EAAA3B,EAAAQ,cAAAP,EAAA2B,SACAwC,EAAApE,EAAAM,gBAEA+D,EAAA1C,EAAAsB,MAAAtB,EAAA2C,MAAAxH,OACAyH,EAAAF,EAAA1C,EAAAV,QAAA/B,mBACAsF,GAAAH,EAAAA,EAAA1C,EAAAV,QAAA/B,oBAAA,EACAuF,EAAAF,EAAAH,CAKA,QACAA,WAAAA,EACAC,UAAAA,EACAE,cAAAA,EACAC,gBAAAA,EACAC,aAAAA,EACAC,SATAD,EAAA9C,EAAAV,QAAA9B,cAUAwF,WATAF,EAAAA,EAAA9C,EAAAV,QAAA9B,gBAaA+D,kBAAA,SAAAb,GACA,GAAArC,GAAAD,KACAE,EAAAD,EAAAE,UACAyB,EAAA3B,EAAAQ,cAAAP,EAAA2B,QACA,OAAAD,GAAAV,QAAA2D,aACAjD,EAAAV,QAAA2D,aAEAvC,EAAAqC,UAIAG,cAAA,SAAAhF,GACA,GAGAiB,GAAAgE,EAHA9E,EAAAD,KACAE,EAAAD,EAAAJ,MAAAmB,eAAAlB,GACAU,EAAAP,EAAAQ,cAAAP,EAAAQ,SAEAC,GAAAT,EAAAI,MAEA,KAAAyE,EAAA,EAAAA,EAAAjF,IAAAiF,EACAhE,EAAAf,KAAAH,MAAAmB,eAAA+D,GACAhE,EAAA7B,KAAAc,KAAAH,MAAAoB,iBAAA8D,KACAvE,EAAAU,QAAAC,WAAA,GACAX,EAAAU,QAAAC,WAAA,GAAAR,EAAAS,QAAAL,EAAAT,UAAA,GACAe,SAAAb,EAAAU,QAAAC,UAAAE,SAAAN,EAAAT,OAAAK,EAAAS,QAAAL,EAAAT,UAAA,KACAK,EAAAW,KAAAP,EAAAT,MAIA,OAAAK,GAAA5D,OAAA,GAGA2F,cAAA,SAAAhB,EAAA5B,EAAAwC,GACA,GAAArC,GAAAD,KACAE,EAAAD,EAAAE,UACAyB,EAAA3B,EAAAQ,cAAAP,EAAA2B,SACAmD,EAAA/E,EAAA6E,cAAAhF,GACAmF,EAAArD,EAAAwC,iBAAA,KAAA1C,EAAA5B,EAAAG,EAAAJ,MAAAqF,QAGA,QAFAD,GAAAhF,EAAAJ,MAAAqF,QAAA5C,EAAAgC,UAAA,EAAA,GAGAhC,EAAAqC,SAAA,EACArC,EAAAmC,gBACAnC,EAAAqC,SAAAK,EACA1C,EAAAsC,WAAA,EACAtC,EAAAsC,WAAAI,GAGApC,cAAA,SAAAlB,EAAA5B,GACA,GAAAG,GAAAD,KACAE,EAAAD,EAAAE,UACAK,EAAAP,EAAAQ,cAAAP,EAAAQ,SACAkD,EAAAC,OAAA5D,EAAAI,aAAAQ,KAAAa,GAEA,IAAAlB,EAAAU,QAAAC,SACAE,SAAAb,EAAAU,QAAAC,SAAAE,SAAAnB,EAAAI,MAAA,CAKA,IAAA,GAJA0C,GAAAxC,EAAAkD,eACAyB,EAAAnC,EACAoC,EAAApC,EAEAxG,EAAA,EAAAA,EAAAsD,EAAAtD,IAAA,CACA,GAAA6I,GAAApF,EAAAJ,MAAAgB,KAAAC,SAAAtE,GACAuE,EAAAd,EAAAJ,MAAAmB,eAAAxE,EACA,IAAAuE,EAAA7B,KAAA6B,EAAAL,UAAAF,EAAArC,IAAA8B,EAAAJ,MAAAoB,iBAAAzE,IACA0D,EAAAI,QAAAS,EAAAT,MAAA,CACA,GAAAgF,GAAAzB,OAAAwB,EAAAxE,KAAAa,GACA4D,GAAA,EACAF,GAAAE,GAAA,EAEAH,GAAAG,GAAA,GAKA,MAAA1B,GAAA,EACApD,EAAA4D,iBAAAgB,EAAAxB,GAEApD,EAAA4D,iBAAAe,EAAAvB,GAGA,MAAApD,GAAA4D,iBAAAR,IAGA2B,KAAA,SAAAC,GACA,GAIAhJ,GAAAiJ,EAJAxF,EAAAD,KACA0F,EAAAF,GAAA,EACAG,EAAA1F,EAAAE,UAAAU,KACAT,EAAAH,EAAAI,YAIA,KADAnD,EAAA0I,cAAAC,SAAA5F,EAAAJ,MAAAA,MAAAiG,IAAA7F,EAAAJ,MAAAkG,WACAvJ,EAAA,EAAAiJ,EAAAE,EAAA5I,OAAAP,EAAAiJ,IAAAjJ,EAAA,CACA,GAAAwJ,GAAA5F,EAAAS,KAAArE,EACA,QAAAwJ,GAAA3E,SAAA2E,GAAAC,MAAAD,IACAL,EAAAnJ,GAAA0J,WAAAR,GAAAH,OAGArI,EAAA0I,cAAAO,WAAAlG,EAAAJ,MAAAA,MAAAiG,MAGAM,cAAA,SAAA3E,GACA,GAAArB,GAAAJ,KAAAH,MAAAgB,KAAAC,SAAAW,EAAAW,eACAV,EAAAD,EAAAY,OAEAJ,EAAAR,EAAAQ,WACAoE,EAAA5E,EAAAe,MACA6D,GAAAjD,gBAAAnB,EAAAqE,qBAAArE,EAAAqE,qBAAArH,EAAAoE,yBAAAjD,EAAAkG,qBAAA5E,EAAAzC,EAAAsH,cAAAF,EAAAjD,kBACAiD,EAAA9C,YAAAtB,EAAAuE,iBAAAvE,EAAAuE,iBAAAvH,EAAAoE,yBAAAjD,EAAAoG,iBAAA9E,EAAAzC,EAAAsH,cAAAF,EAAA9C,cACA8C,EAAA7C,YAAAvB,EAAAwE,iBAAAxE,EAAAwE,iBAAAxH,EAAAoE,yBAAAjD,EAAAqG,iBAAA/E,EAAA2E,EAAA7C,cAGAkD,iBAAA,SAAAjF,GACA,GAAArB,GAAAJ,KAAAH,MAAAgB,KAAAC,SAAAW,EAAAW,eACAV,EAAAD,EAAAY,OACAJ,EAAAR,EAAAQ,WACAoE,EAAA5E,EAAAe,OACAR,EAAAhC,KAAAH,MAAAqB,QAAAxB,SAAA+B,SAEA4E,GAAAjD,gBAAAnB,EAAAmB,gBAAAnB,EAAAmB,gBAAAnE,EAAAoE,yBAAAjD,EAAAgD,gBAAA1B,EAAAM,EAAAoB,iBACAiD,EAAA9C,YAAAtB,EAAAsB,YAAAtB,EAAAsB,YAAAtE,EAAAoE,yBAAAjD,EAAAmD,YAAA7B,EAAAM,EAAAuB,aACA8C,EAAA7C,YAAAvB,EAAAuB,YAAAvB,EAAAuB,YAAAvE,EAAAoE,yBAAAjD,EAAAoD,YAAA9B,EAAAM,EAAAwB,gBAQAtG,EAAA0B,SAAA+H,eACA7I,OACAC,KAAA,SAGAC,QACAC,QACAV,KAAA,SACAW,SAAA,WAEAE,QACAF,SAAA,OACAX,KAAA,WAGA4B,mBAAA,GACAC,cAAA,GAGAC,WACAC,iBAAA,MAIAI,UACA+B,WACA6B,cAAA,SAGAjF,UACAC,WACAC,MAAA,SAAAqI,EAAA/F,GAEA,GAAAtC,GAAA,EAUA,OARAqI,GAAA7J,OAAA,IACA6J,EAAA,GAAAjI,OACAJ,EAAAqI,EAAA,GAAAjI,OACAkC,EAAAgC,OAAA9F,OAAA,GAAA6J,EAAA,GAAAlF,MAAAb,EAAAgC,OAAA9F,SACAwB,EAAAsC,EAAAgC,OAAA+D,EAAA,GAAAlF,SAIAnD,GAEAC,MAAA,SAAAC,EAAAoC,GAEA,OADAA,EAAAC,SAAArC,EAAAqB,cAAAtB,OAAA,IACA,KAAAC,EAAAC,WAMAxB,EAAA4B,YAAA6H,cAAAzJ,EAAA4B,YAAAI,IAAAM,QAGAe,cAAA,WACA,GAAAN,GAAAD,KACAE,EAAAD,EAAAE,UACAyB,EAAA3B,EAAAQ,cAAAP,EAAA2B,SAEAlB,IAWA,OAVA1B,GAAA2B,KAAAX,EAAAJ,MAAAgB,KAAAC,SAAA,SAAAV,EAAAN,GACA,GAAAiB,GAAAd,EAAAJ,MAAAmB,eAAAlB,EACAiB,GAAA7B,KAAAe,EAAAJ,MAAAoB,iBAAAnB,KACA8B,EAAAV,QAAAC,WAAA,GACAS,EAAAV,QAAAC,WAAA,GAAAR,EAAAS,QAAAL,EAAAT,UAAA,GACAe,SAAAO,EAAAV,QAAAC,UAAAE,SAAAN,EAAAT,OAAAK,EAAAS,QAAAL,EAAAT,UAAA,KACAK,EAAAW,KAAAP,EAAAT,QAEAL,GAEAU,EAAA5D,QAGA4E,cAAA,SAAAF,EAAAC,EAAAF,GACA,GAAAvB,GAAAD,KACAE,EAAAD,EAAAE,UACAyB,EAAA3B,EAAAQ,cAAAP,EAAA2B,SACArB,EAAAP,EAAAQ,cAAAP,EAAAQ,SACAoB,EAAAF,EAAAG,eACAE,EAAAR,EAAAQ,WACA7B,EAAAH,EAAAI,aACA2B,EAAA/B,EAAAJ,MAAAqB,QAAAxB,SAAA+B,SAEAA,GAAAS,QAAAN,EACAH,EAAAU,QAAA3B,EACAiB,EAAAW,cAAAnC,EAAAyB,MACAD,EAAAY,OAAAX,CAEA,IAAAY,GAAArC,EAAAsC,SAAAb,EACAD,GAAAe,QACAC,EAAAjB,EAAAM,EAAA7B,EAAAyC,cAAAhB,EAAAzB,EAAAyB,OACAiB,EAAA1C,EAAA2C,cAAAlB,EAAAzB,EAAAyB,MAAAY,GAGA9D,MAAAyB,EAAAJ,MAAAgB,KAAAgC,OAAAnB,GACAoB,aAAA1C,EAAA5B,MAGAuE,YAAA,EACAC,KAAAxB,EAAAM,EAAA7B,EAAAgD,iBAAAhD,EAAAyB,MAAAA,GACAmF,OAAA5G,EAAA6G,mBAAAxE,GACAc,gBAAAnB,EAAAmB,gBAAAnB,EAAAmB,gBAAAnE,EAAAoE,yBAAAjD,EAAAgD,gBAAA1B,EAAAM,EAAAoB,iBACAE,cAAArB,EAAAqB,cAAArB,EAAAqB,cAAAtB,EAAAsB,cACAC,YAAAtB,EAAAsB,YAAAtB,EAAAsB,YAAAtE,EAAAoE,yBAAAjD,EAAAmD,YAAA7B,EAAAM,EAAAuB,aACAC,YAAAvB,EAAAuB,YAAAvB,EAAAuB,YAAAvE,EAAAoE,yBAAAjD,EAAAoD,YAAA9B,EAAAM,EAAAwB,cAGA/B,EAAAgC,SAGAR,iBAAA,SAAAnD,EAAA4B,GACA,GAAAzB,GAAAD,KACAE,EAAAD,EAAAE,UACAyB,EAAA3B,EAAAQ,cAAAP,EAAA2B,SACAmB,EAAApB,EAAA8B,eACAqD,EAAA/D,CAEA,IAAApB,EAAAV,QAAAC,SACAE,SAAAO,EAAAV,QAAAC,SAAAE,SAAAnB,EAAAI,MAAA,CAKA,IAAA,GAJAT,GAAAI,EAAAJ,MACAiB,EAAAjB,EAAAgB,KAAAC,SACA8C,EAAAC,OAAA/C,EAAAhB,GAAAe,KAAAa,IAEAlF,EAAA,EAAAA,EAAAsD,EAAAtD,IAAA,CACA,GAAAsH,GAAAhD,EAAAtE,GACAuH,EAAAlE,EAAAmB,eAAAxE,EACA,IAAAuH,EAAA7E,KAAA6E,EAAAlC,UAAAD,EAAAzD,IAAA0B,EAAAoB,iBAAAzE,IACA0D,EAAAI,QAAAyD,EAAAzD,MAAA,CACA,GAAA0D,GAAAH,OAAAC,EAAAjD,KAAAa,GACAsB,IAAAY,EAAA,EAAAK,KAAAC,IAAAF,EAAA+C,GAAA9C,KAAAE,IAAAH,EAAA+C,IAIA,MAAAnF,GAAAwC,iBAAApB,GAGA,MAAApB,GAAAG,gBAGAQ,SAAA,WACA,GAAAtC,GAAAD,KACAE,EAAAD,EAAAE,UACAK,EAAAP,EAAAQ,cAAAP,EAAAQ,SACA2D,EAAApE,EAAAM,gBAEAyG,EAAAxG,EAAAqG,OAAArG,EAAA+D,MAAAxH,OACAkK,EAAAD,EAAAxG,EAAAU,QAAA/B,mBACAsF,GAAAuC,EAAAA,EAAAxG,EAAAU,QAAA/B,oBAAA,EACA+H,EAAAD,EAAA5C,CAKA,QACAA,WAAAA,EACA2C,WAAAA,EACAC,eAAAA,EACAxC,gBAAAA,EACAyC,cAAAA,EACAC,UATAD,EAAA1G,EAAAU,QAAA9B,cAUAwF,WATAsC,EAAAA,EAAA1G,EAAAU,QAAA9B,gBAaA0H,mBAAA,SAAAxE,GACA,GAAArC,GAAAD,KACAE,EAAAD,EAAAE,UACAK,EAAAP,EAAAQ,cAAAP,EAAAQ,QACA,OAAAF,GAAAU,QAAA2D,aACArE,EAAAU,QAAA2D,aAEAvC,EAAA6E,WAIArC,cAAA,SAAAhF,GACA,GAGAiB,GAAAgE,EAHA9E,EAAAD,KACAE,EAAAD,EAAAJ,MAAAmB,eAAAlB,GACA8B,EAAA3B,EAAAQ,cAAAP,EAAA2B,SAEAlB,GAAAT,EAAAI,MAEA,KAAAyE,EAAA,EAAAA,EAAAjF,IAAAiF,EACAhE,EAAAf,KAAAH,MAAAmB,eAAA+D,GACAhE,EAAA7B,KAAAc,KAAAH,MAAAoB,iBAAA8D,KACAnD,EAAAV,QAAAC,WAAA,GACAS,EAAAV,QAAAC,WAAA,GAAAR,EAAAS,QAAAL,EAAAT,UAAA,GACAe,SAAAO,EAAAV,QAAAC,UAAAE,SAAAN,EAAAT,OAAAK,EAAAS,QAAAL,EAAAT,UAAA,KACAK,EAAAW,KAAAP,EAAAT,MAIA,OAAAK,GAAA5D,OAAA,GAGA2F,cAAA,SAAAhB,EAAA5B,GACA,GAAAG,GAAAD,KACAE,EAAAD,EAAAE,UACAyB,EAAA3B,EAAAQ,cAAAP,EAAA2B,SACA+B,EAAAC,OAAA5D,EAAAI,aAAAQ,KAAAa,GAEA,IAAAE,EAAAV,QAAAC,SACAE,SAAAO,EAAAV,QAAAC,SAAAE,SAAAnB,EAAAI,MAAA,CAKA,IAAA,GAJA0C,GAAApB,EAAA8B,eACAyB,EAAAnC,EACAoC,EAAApC,EAEAxG,EAAA,EAAAA,EAAAsD,EAAAtD,IAAA,CACA,GAAA6I,GAAApF,EAAAJ,MAAAgB,KAAAC,SAAAtE,GACAuE,EAAAd,EAAAJ,MAAAmB,eAAAxE,EACA,IAAAuE,EAAA7B,KAAA6B,EAAAc,UAAAD,EAAAzD,IAAA8B,EAAAJ,MAAAoB,iBAAAzE,IACA0D,EAAAI,QAAAS,EAAAT,MAAA,CACA,GAAAgF,GAAAzB,OAAAwB,EAAAxE,KAAAa,GACA4D,GAAA,EACAF,GAAAE,GAAA,EAEAH,GAAAG,GAAA,GAKA,MAAA1B,GAAA,EACAhC,EAAAwC,iBAAAgB,EAAAxB,GAEAhC,EAAAwC,iBAAAe,EAAAvB,GAGA,MAAAhC,GAAAwC,iBAAAR,IAGAhB,cAAA,SAAAlB,EAAA5B,EAAAwC,GACA,GAAArC,GAAAD,KACAE,EAAAD,EAAAE,UACAK,EAAAP,EAAAQ,cAAAP,EAAAQ,SACAsE,EAAA/E,EAAA6E,cAAAhF,GACAsH,EAAA5G,EAAA4D,iBAAA,KAAA1C,EAAA5B,EAAAG,EAAAJ,MAAAqF,QAGA,QAFAkC,GAAAnH,EAAAJ,MAAAqF,QAAA5C,EAAA0E,WAAA,EAAA,GAGA1E,EAAA6E,UAAA,EACA7E,EAAAmC,gBACAnC,EAAA6E,UAAAnC,EACA1C,EAAAsC,WAAA,EACAtC,EAAAsC,WAAAI,+BCxhBA,YAEA/H,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,OAEA/B,GAAA0B,SAAAyI,QACAvJ,OACAC,KAAA,UAGAC,QACAC,QACAV,KAAA,SACAW,SAAA,SACAC,GAAA,aAEAC,QACAb,KAAA,SACAW,SAAA,OACAC,GAAA,cAIAE,UACAC,WACAC,MAAA,WAEA,MAAA,IAEAC,MAAA,SAAAC,EAAAoC,GACA,GAAAiC,GAAAjC,EAAAC,SAAArC,EAAAqB,cAAAtB,OAAA,GACA8I,EAAAzG,EAAAC,SAAArC,EAAAqB,cAAAe,KAAApC,EAAAiD,MACA,OAAAoB,GAAA,MAAArE,EAAAC,OAAA,KAAAD,EAAAE,OAAA,KAAA2I,EAAApL,EAAA,QAMAgB,EAAA4B,YAAAuI,OAAAnK,EAAAqC,kBAAAC,QAEAC,gBAAAvC,EAAAwC,SAAA6H,MAEAhG,OAAA,SAAAC,GACA,GAAAvB,GAAAD,KACAE,EAAAD,EAAAE,UACAqH,EAAAtH,EAAAW,IAGA5B,GAAA2B,KAAA4G,EAAA,SAAAC,EAAA/F,GACAzB,EAAA0B,cAAA8F,EAAA/F,EAAAF,MAIAG,cAAA,SAAA8F,EAAA/F,EAAAF,GACA,GAAAvB,GAAAD,KACAE,EAAAD,EAAAE,UACAyB,EAAA3B,EAAAQ,cAAAP,EAAA2B,SACArB,EAAAP,EAAAQ,cAAAP,EAAAQ,SAEAuB,EAAAwF,EAAAxF,WACA7B,EAAAH,EAAAI,aACAQ,EAAAT,EAAAS,KAAAa,GACAgG,EAAAzH,EAAAJ,MAAAqB,QAAAxB,SAAA+H,MACAE,EAAA1H,EAAAyB,KAEAzC,GAAAO,OAAAiI,GAEAvF,QAAAN,EACAO,QAAA3B,EACA4B,cAAAuF,EACAtF,OAAAX,EAGAc,QACAC,EAAAjB,EAAAI,EAAAgG,mBAAA,IAAAhG,EAAAwC,iBAAA,gBAAAvD,GAAAA,EAAAgH,IAAAnG,EAAAiG,EAAA1H,EAAAJ,MAAAqF,SACAvC,EAAAnB,EAAAhB,EAAAuB,eAAAvB,EAAA4D,iBAAAvD,EAAAa,EAAAiG,GAEAG,OAAAtG,EAAA,EAAAS,EAAA6F,OAAA7F,EAAA6F,OAAA7H,EAAA8H,UAAAlH,GAGAmH,UAAA/F,EAAA+F,UAAA/F,EAAA+F,UAAA/I,EAAAoE,yBAAAjD,EAAA4H,UAAAtG,EAAAgG,EAAAM,cAKA9K,EAAAqC,kBAAAQ,UAAA2G,iBAAA5J,KAAAmD,EAAAwH,EAAAC,EAEA,IAAArB,GAAAoB,EAAAjF,MACA6D,GAAA4B,KAAAhG,EAAAgG,KAAAhG,EAAAgG,KAAAhC,MAAAI,EAAA5D,IAAAwD,MAAAI,EAAA1D,GAEA8E,EAAAhE,SAGAsE,UAAA,SAAAnE,GACA,MAAAA,GAAA1H,GAAA8D,KAAAH,MAAAqB,QAAAxB,SAAA+H,MAAAK,QAGA1B,cAAA,SAAAqB,GACA,GAAAxH,GAAAD,IACA9C,GAAAqC,kBAAAQ,UAAAqG,cAAAtJ,KAAAmD,EAAAwH,EAGA,IAAArH,GAAAH,EAAAJ,MAAAgB,KAAAC,SAAA2G,EAAArF,eACAV,EAAA+F,EAAApF,OACAJ,EAAAwF,EAAAxF,UACAwF,GAAAjF,OACAsF,OAAA7F,EAAAiG,YAAAjG,EAAAiG,YAAAjJ,EAAAoE,yBAAAjD,EAAA8H,YAAAxG,EAAAzB,EAAAJ,MAAAqB,QAAAxB,SAAA+H,MAAAS,aAAAjI,EAAA8H,UAAA3H,EAAAS,KAAAa,KAGAgF,iBAAA,SAAAe,GACA,GAAAxH,GAAAD,IACA9C,GAAAqC,kBAAAQ,UAAA2G,iBAAA5J,KAAAmD,EAAAwH,EAAAxH,EAAAJ,MAAAqB,QAAAxB,SAAA+H,MAEA,IAAAU,GAAAlI,EAAAJ,MAAAgB,KAAAC,SAAA2G,EAAArF,eAAAvB,KAAA4G,EAAApF,QACAJ,EAAAwF,EAAAxF,UACAwF,GAAAjF,OAEAsF,OAAA7F,EAAA6F,OAAA7F,EAAA6F,OAAA7H,EAAA8H,UAAAI,gCCtHA,YAEAlL,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,QACAL,EAAA1B,EAAA0B,QAEAA,GAAAwJ,UACAC,WAEAC,eAAA,EAEAC,cAAA,GAEAC,YAAA,EACA1K,OACAC,KAAA,UAEA0K,eAAA,SAAA5I,GACA,GAAA6I,KACAA,GAAApH,KAAA,cAAAzB,EAAA1B,GAAA,YAEA,IAAA0C,GAAAhB,EAAAgB,KACAC,EAAAD,EAAAC,SACA+B,EAAAhC,EAAAgC,MAEA,IAAA/B,EAAA/D,OACA,IAAA,GAAAP,GAAA,EAAAA,EAAAsE,EAAA,GAAAD,KAAA9D,SAAAP,EACAkM,EAAApH,KAAA,qCAAAR,EAAA,GAAAsC,gBAAA5G,GAAA,aACAqG,EAAArG,IACAkM,EAAApH,KAAAuB,EAAArG,IAEAkM,EAAApH,KAAA,QAKA,OADAoH,GAAApH,KAAA,SACAoH,EAAAC,KAAA,KAEAC,QACA/F,QACAgG,eAAA,SAAAhJ,GACA,GAAAgB,GAAAhB,EAAAgB,IACA,OAAAA,GAAAgC,OAAA9F,QAAA8D,EAAAC,SAAA/D,OACA8D,EAAAgC,OAAAiG,IAAA,SAAAtK,EAAAhC,GACA,GAAA0D,GAAAL,EAAAmB,eAAA,GACAqE,EAAAxE,EAAAC,SAAA,GACAiI,EAAA7I,EAAAW,KAAArE,GACAyF,EAAA8G,GAAAA,EAAA9G,WACAoB,EAAApE,EAAAoE,yBACA2F,EAAAnJ,EAAAqB,QAAAxB,SAAAqJ,GAKA,QACAL,KAAAlK,EACAyK,UANAhH,EAAAmB,gBAAAnB,EAAAmB,gBAAAC,EAAAgC,EAAAjC,gBAAA5G,EAAAwM,EAAA5F,iBAOA8F,YANAjH,EAAAsB,YAAAtB,EAAAsB,YAAAF,EAAAgC,EAAA9B,YAAA/G,EAAAwM,EAAAzF,aAOA4F,UANAlH,EAAAuB,YAAAvB,EAAAuB,YAAAH,EAAAgC,EAAA7B,YAAAhH,EAAAwM,EAAAxF,aAOA4F,OAAAnD,MAAAZ,EAAAxE,KAAArE,KAAA0D,EAAAW,KAAArE,GAAA4M,OAGA1H,MAAAlF,UAQA6M,QAAA,SAAAtN,EAAAuN,GACA,GAEA9M,GAAA+M,EAAArJ,EAFAwB,EAAA4H,EAAA5H,MACA7B,EAAAG,KAAAH,KAGA,KAAArD,EAAA,EAAA+M,GAAA1J,EAAAgB,KAAAC,cAAA/D,OAAAP,EAAA+M,IAAA/M,EACA0D,EAAAL,EAAAmB,eAAAxE,GAEA0D,EAAAW,KAAAa,KACAxB,EAAAW,KAAAa,GAAA0H,QAAAlJ,EAAAW,KAAAa,GAAA0H,OAIAvJ,GAAA0B,WAKAiI,iBAAA,GAGAC,SAAAxF,KAAAyF,IAAA,GAGAC,cAAA,EAAA1F,KAAAyF,GAGArL,UACAC,WACAC,MAAA,WACA,MAAA,IAEAC,MAAA,SAAAC,EAAAoC,GACA,GAAA+I,GAAA/I,EAAAgC,OAAApE,EAAAiD,OACAkC,EAAA,KAAA/C,EAAAC,SAAArC,EAAAqB,cAAAe,KAAApC,EAAAiD,MAWA,OATAzC,GAAA4K,QAAAD,IAGAA,EAAAA,EAAAE,QACAF,EAAA,IAAAhG,GAEAgG,GAAAhG,EAGAgG,MAMAhL,EAAAmL,IAAA9K,EAAA+K,MAAApL,EAAAwJ,UACAnJ,EAAAO,OAAAZ,EAAAmL,KACAP,iBAAA,IAIAtM,EAAA4B,YAAAsJ,SAAAlL,EAAA4B,YAAAiL,IAAA7M,EAAAqC,kBAAAC,QAEAC,gBAAAvC,EAAAwC,SAAAuK,IAEAC,WAAAjL,EAAAkL,KAGAC,aAAA,SAAAtK,GAGA,IAAA,GAFAuK,GAAA,EAEAtF,EAAA,EAAAA,EAAAjF,IAAAiF,EACA/E,KAAAH,MAAAoB,iBAAA8D,MACAsF,CAIA,OAAAA,IAGA9I,OAAA,SAAAC,GACA,GAAAvB,GAAAD,KACAH,EAAAI,EAAAJ,MACAkG,EAAAlG,EAAAkG,UACAuE,EAAAzK,EAAAqB,QACA8H,EAAAsB,EAAA5K,SAAAqJ,IACAwB,EAAAxE,EAAAyE,MAAAzE,EAAA0E,KAAAzB,EAAAxF,YACAkH,EAAA3E,EAAA4E,OAAA5E,EAAA6E,IAAA5B,EAAAxF,YACAqH,EAAA5G,KAAAC,IAAAqG,EAAAG,GACAI,GACArI,EAAA,EACAE,EAAA,GAEAzC,EAAAD,EAAAE,UACAqJ,EAAAc,EAAAd,iBACAG,EAAAW,EAAAX,aAGA,IAAAA,EAAA,EAAA1F,KAAAyF,GAAA,CACA,GAAAqB,GAAAT,EAAAb,UAAA,EAAAxF,KAAAyF,GACAqB,IAAA,EAAA9G,KAAAyF,IAAAqB,GAAA9G,KAAAyF,IAAA,EAAAqB,GAAA9G,KAAAyF,GAAA,EAAA,EACA,IAAAsB,GAAAD,EAAApB,EACAsB,GAAAxI,EAAAwB,KAAAiH,IAAAH,GAAApI,EAAAsB,KAAAkH,IAAAJ,IACAK,GAAA3I,EAAAwB,KAAAiH,IAAAF,GAAArI,EAAAsB,KAAAkH,IAAAH,IACAK,EAAAN,GAAA,GAAA,GAAAC,GAAAD,GAAA,EAAA9G,KAAAyF,IAAA,EAAAzF,KAAAyF,IAAAsB,EACAM,EAAAP,GAAA,GAAA9G,KAAAyF,IAAA,GAAAzF,KAAAyF,IAAAsB,GAAAD,GAAA,IAAA9G,KAAAyF,IAAA,IAAAzF,KAAAyF,IAAAsB,EACAO,EAAAR,IAAA9G,KAAAyF,KAAAzF,KAAAyF,IAAAsB,GAAAD,GAAA9G,KAAAyF,IAAAzF,KAAAyF,IAAAsB,EACAQ,EAAAT,GAAA,IAAA9G,KAAAyF,IAAA,IAAAzF,KAAAyF,IAAAsB,GAAAD,GAAA,IAAA9G,KAAAyF,IAAA,IAAAzF,KAAAyF,IAAAsB,EACAS,EAAAjC,EAAA,IACAtF,GAAAzB,EAAA8I,GAAA,EAAAtH,KAAAC,IAAA+G,EAAAxI,GAAAwI,EAAAxI,EAAA,EAAA,EAAAgJ,GAAAL,EAAA3I,GAAA2I,EAAA3I,EAAA,EAAA,EAAAgJ,IAAA9I,EAAA6I,GAAA,EAAAvH,KAAAC,IAAA+G,EAAAtI,GAAAsI,EAAAtI,EAAA,EAAA,EAAA8I,GAAAL,EAAAzI,GAAAyI,EAAAzI,EAAA,EAAA,EAAA8I,KACAtH,GAAA1B,EAAA4I,EAAA,EAAApH,KAAAE,IAAA8G,EAAAxI,GAAAwI,EAAAxI,EAAA,EAAA,EAAAgJ,GAAAL,EAAA3I,GAAA2I,EAAA3I,EAAA,EAAA,EAAAgJ,IAAA9I,EAAA2I,EAAA,EAAArH,KAAAE,IAAA8G,EAAAtI,GAAAsI,EAAAtI,EAAA,EAAA,EAAA8I,GAAAL,EAAAzI,GAAAyI,EAAAzI,EAAA,EAAA,EAAA8I,KACAC,GAAAxI,MAAA,IAAAiB,EAAA1B,EAAAyB,EAAAzB,GAAAoE,OAAA,IAAA1C,EAAAxB,EAAAuB,EAAAvB,GACAkI,GAAA5G,KAAAC,IAAAqG,EAAAmB,EAAAxI,MAAAwH,EAAAgB,EAAA7E,QACAiE,GAAArI,GAAA0B,EAAA1B,EAAAyB,EAAAzB,IAAA,GAAAE,GAAAwB,EAAAxB,EAAAuB,EAAAvB,IAAA,IAGA9C,EAAA2D,YAAAvD,EAAA0L,kBAAAzL,EAAAW,MACAhB,EAAA+L,YAAA3H,KAAAE,KAAA0G,EAAAhL,EAAA2D,aAAA,EAAA,GACA3D,EAAAgM,YAAA5H,KAAAE,IAAAqF,EAAA3J,EAAA+L,YAAA,IAAA,EAAA,EAAA,GACA/L,EAAAiM,cAAAjM,EAAA+L,YAAA/L,EAAAgM,aAAAhM,EAAAkM,yBACAlM,EAAAmM,QAAAlB,EAAArI,EAAA5C,EAAA+L,YACA/L,EAAAoM,QAAAnB,EAAAnI,EAAA9C,EAAA+L,YAEA1L,EAAAgM,MAAAjM,EAAAkM,iBAEAlM,EAAA2L,YAAA/L,EAAA+L,YAAA/L,EAAAiM,aAAA7L,EAAAmK,aAAAnK,EAAAyB,OACAzB,EAAA4L,YAAA5H,KAAAE,IAAAlE,EAAA2L,YAAA/L,EAAAiM,aAAA,GAEA7M,EAAA2B,KAAAV,EAAAW,KAAA,SAAAkI,EAAArH,GACAzB,EAAA0B,cAAAoH,EAAArH,EAAAF,MAIAG,cAAA,SAAAoH,EAAArH,EAAAF,GACA,GAAAvB,GAAAD,KACAH,EAAAI,EAAAJ,MACAkG,EAAAlG,EAAAkG,UACAuE,EAAAzK,EAAAqB,QACAkL,EAAA9B,EAAAjC,UACAgE,GAAAtG,EAAA0E,KAAA1E,EAAAyE,OAAA,EACA8B,GAAAvG,EAAA6E,IAAA7E,EAAA4E,QAAA,EACAI,EAAAT,EAAAb,SACAuB,EAAAV,EAAAb,SACArJ,EAAAH,EAAAI,aACAsJ,EAAAnI,GAAA4K,EAAA9D,cAAA,EAAAS,EAAAK,OAAA,EAAAnJ,EAAAsM,uBAAAnM,EAAAS,KAAAa,KAAA4I,EAAAX,eAAA,EAAA1F,KAAAyF,KACAmC,EAAArK,GAAA4K,EAAA7D,aAAA,EAAAtI,EAAA4L,YACAD,EAAApK,GAAA4K,EAAA7D,aAAA,EAAAtI,EAAA2L,YACAY,EAAAvN,EAAAoE,wBAEApE,GAAAO,OAAAuJ,GAEA3G,cAAAnC,EAAAyB,MACAW,OAAAX,EAGAc,QACAC,EAAA4J,EAAAxM,EAAAmM,QACArJ,EAAA2J,EAAAzM,EAAAoM,QACAlB,WAAAA,EACAC,SAAAA,EACArB,cAAAA,EACAiC,YAAAA,EACAC,YAAAA,EACArN,MAAAgO,EAAApM,EAAA5B,MAAAkD,EAAA7B,EAAAgB,KAAAgC,OAAAnB,MAIA,IAAA2E,GAAA0C,EAAAvG,MAEAxC,MAAA0G,iBAAAqC,GAGAvH,GAAA4K,EAAA9D,gBAEAjC,EAAA0E,WADA,IAAArJ,EACA4I,EAAAb,SAEAxJ,EAAAE,UAAAU,KAAAa,EAAA,GAAAc,OAAAwI,SAGA3E,EAAA2E,SAAA3E,EAAA0E,WAAA1E,EAAAsD,eAGAZ,EAAAtF,SAGAiD,iBAAA,SAAAqC,GACA7L,EAAAqC,kBAAAQ,UAAA2G,iBAAA5J,KAAAkD,KAAA+I,EAAA/I,KAAAH,MAAAqB,QAAAxB,SAAAqJ,MAGAoD,eAAA,WACA,GAGAvI,GAHAxD,EAAAJ,KAAAK,aACAH,EAAAF,KAAAG,UACA+L,EAAA,CAcA,OAXAjN,GAAA2B,KAAAV,EAAAW,KAAA,SAAA4L,EAAA/K,GACAkC,EAAAxD,EAAAS,KAAAa,GACAuE,MAAArC,IAAA6I,EAAArD,SACA8C,GAAAjI,KAAAyI,IAAA9I,MAQAsI,GAGAK,uBAAA,SAAA3I,GACA,GAAAsI,GAAAlM,KAAAG,UAAA+L,KACA,OAAAA,GAAA,IAAAjG,MAAArC,GACA,EAAAK,KAAAyF,IAAA9F,EAAAsI,GAEA,GAIAP,kBAAA,SAAAjM,GAOA,IAAA,GAHA8D,GACAmJ,EAJAxI,EAAA,EACAzC,EAAA1B,KAAA0B,MACA3E,EAAA2C,EAAA3C,OAIAP,EAAA,EAAAA,EAAAO,EAAAP,IACAgH,EAAA9D,EAAAlD,GAAAgG,OAAA9C,EAAAlD,GAAAgG,OAAAgB,YAAA,EACAmJ,EAAAjN,EAAAlD,GAAAoQ,OAAAlN,EAAAlD,GAAAoQ,OAAAtP,OAAAuD,KAAAC,SAAAY,GAAA+E,iBAAA,EAEAtC,EAAAX,EAAAW,EAAAX,EAAAW,EACAA,EAAAwI,EAAAxI,EAAAwI,EAAAxI,CAEA,OAAAA,gCC3SA,YAEAlH,GAAAJ,QAAA,SAAAK,GAwBA,QAAA2P,GAAAzM,EAAAc,GACA,MAAAjC,GAAA6N,kBAAA1M,EAAA2M,SAAA7L,EAAA8L,WAvBA,GAAA/N,GAAA/B,EAAA+B,OAEA/B,GAAA0B,SAAAG,MACAiO,WAAA,EACAC,UAAA,EAEAnP,OACAC,KAAA,SAGAC,QACAC,QACAV,KAAA,WACAY,GAAA,aAEAC,QACAb,KAAA,SACAY,GAAA,eASAjB,EAAA4B,YAAAC,KAAA7B,EAAAqC,kBAAAC,QAEA0N,mBAAAhQ,EAAAwC,SAAAhC,KAEA+B,gBAAAvC,EAAAwC,SAAA6H,MAEAhG,OAAA,SAAAC,GACA,GAOAhF,GAAA+M,EAAAtH,EAPAhC,EAAAD,KACAE,EAAAD,EAAAE,UACApB,EAAAmB,EAAAE,QACAoH,EAAAtH,EAAAW,SACAK,EAAAjB,EAAAJ,MAAAqB,QACAiM,EAAAjM,EAAAxB,SAAAX,KACAqO,EAAAnN,EAAAQ,cAAAP,EAAAQ,SAEAN,EAAAH,EAAAI,aACA0M,EAAAF,EAAAzM,EAAAc,EA4CA,KAzCA6L,IACA9K,EAAAlD,EAAAkD,WAGAZ,SAAAjB,EAAAiN,SAAAhM,SAAAjB,EAAAkN,cACAlN,EAAAkN,YAAAlN,EAAAiN,SAIAtO,EAAAwO,OAAAH,EACArO,EAAAqD,cAAAnC,EAAAyB,MAEA3C,EAAAyO,UAAAhG,EAEAzI,EAAAyD,QAKAyK,SAAA7M,EAAA6M,SAAA7M,EAAA6M,SAAA/L,EAAA+L,SACAI,QAAApL,EAAAoL,QAAApL,EAAAoL,QAAApO,EAAA6N,kBAAA1M,EAAAkN,YAAAH,EAAAE,SACAjK,gBAAAnB,EAAAmB,gBAAAnB,EAAAmB,gBAAAhD,EAAAgD,iBAAA+J,EAAA/J,gBACAI,YAAAvB,EAAAuB,YAAAvB,EAAAuB,YAAApD,EAAAoD,aAAA2J,EAAA3J,YACAD,YAAAtB,EAAAsB,YAAAtB,EAAAsB,YAAAnD,EAAAmD,aAAA4J,EAAA5J,YACAkK,eAAAxL,EAAAwL,eAAAxL,EAAAwL,eAAArN,EAAAqN,gBAAAN,EAAAM,eACAC,WAAAzL,EAAAyL,WAAAzL,EAAAyL,WAAAtN,EAAAsN,YAAAP,EAAAO,WACAC,iBAAA1L,EAAA0L,iBAAA1L,EAAA0L,iBAAAvN,EAAAuN,kBAAAR,EAAAQ,iBACAC,gBAAA3L,EAAA2L,gBAAA3L,EAAA2L,gBAAAxN,EAAAwN,iBAAAT,EAAAS,gBACAC,KAAA5L,EAAA4L,KAAA5L,EAAA4L,KAAAxM,SAAAjB,EAAAyN,KAAAzN,EAAAyN,KAAAV,EAAAU,KACAC,YAAA7L,EAAA6L,YAAA7L,EAAA6L,YAAA7O,EAAA6N,kBAAA1M,EAAA0N,YAAAX,EAAAY,SACAC,uBAAA/L,EAAA+L,uBAAA/L,EAAA+L,uBAAA/O,EAAA6N,kBAAA1M,EAAA4N,uBAAAb,EAAAa,wBAEAC,SAAAb,EAAAxC,IACAsD,YAAAd,EAAAzC,OACAwD,UAAAf,EAAArL,gBAGAhD,EAAA0E,SAIAjH,EAAA,EAAA+M,EAAA/B,EAAAzK,OAAAP,EAAA+M,IAAA/M,EACAyD,EAAA0B,cAAA6F,EAAAhL,GAAAA,EAAAgF,EAQA,KALAuL,GAAA,IAAAhO,EAAAyD,OAAA6K,SACApN,EAAAmO,4BAIA5R,EAAA,EAAA+M,EAAA/B,EAAAzK,OAAAP,EAAA+M,IAAA/M,EACAgL,EAAAhL,GAAAiH,SAIA4K,wBAAA,SAAA5G,EAAA/F,GACA,GAAA0B,GAAApD,KAAAH,MAAAqB,QAAAxB,SAAA+H,MAAArE,gBACAhD,EAAAJ,KAAAK,aACA4B,EAAAwF,EAAAxF,UAUA,OARAA,GAAAmB,gBACAA,EAAAnB,EAAAmB,gBACAhD,EAAAkO,qBACAlL,EAAAnE,EAAAoE,yBAAAjD,EAAAkO,qBAAA5M,EAAA0B,GACAhD,EAAAgD,kBACAA,EAAAhD,EAAAgD,iBAGAA,GAGAmL,oBAAA,SAAA9G,EAAA/F,GACA,GAAA6B,GAAAvD,KAAAH,MAAAqB,QAAAxB,SAAA+H,MAAAlE,YACAnD,EAAAJ,KAAAK,aACA4B,EAAAwF,EAAAxF,UAUA,OARAA,GAAAsB,YACAA,EAAAtB,EAAAsB,YACAnD,EAAAoO,iBACAjL,EAAAtE,EAAAoE,yBAAAjD,EAAAoO,iBAAA9M,EAAA6B,GACAnD,EAAAmD,cACAA,EAAAnD,EAAAmD,aAGAA,GAGAkL,oBAAA,SAAAhH,EAAA/F,GACA,GAAA8B,GAAAxD,KAAAH,MAAAqB,QAAAxB,SAAA+H,MAAAjE,YACApD,EAAAJ,KAAAK,aACA4B,EAAAwF,EAAAxF,UAUA,OARAgE,OAAAhE,EAAAuB,aAEAyC,MAAA7F,EAAAsO,kBAEAzI,MAAA7F,EAAAoD,eACAA,EAAApD,EAAAoD,aAFAA,EAAAvE,EAAAoE,yBAAAjD,EAAAsO,iBAAAhN,EAAA8B,GAFAA,EAAAvB,EAAAuB,YAOAA,GAGA7B,cAAA,SAAA8F,EAAA/F,EAAAF,GACA,GASAiB,GAAAE,EATA1C,EAAAD,KACAE,EAAAD,EAAAE,UACA8B,EAAAwF,EAAAxF,WACA7B,EAAAH,EAAAI,aACAP,EAAAG,EAAAyB,MACAkC,EAAAxD,EAAAS,KAAAa,GACAlB,EAAAP,EAAAQ,cAAAP,EAAAQ,SACAkB,EAAA3B,EAAAQ,cAAAP,EAAA2B,SACA8M,EAAA1O,EAAAJ,MAAAqB,QAAAxB,SAAA+H,MAEA5E,EAAA5C,EAAAJ,MAAAgB,KAAAgC,WACA+L,EAAA,IAAA/L,EAAA9F,QAAA,IAAAqD,EAAAS,KAAA9D,QAAAkD,EAAAJ,MAAAqF,OAGA7D,UAAAjB,EAAA0H,QAAAzG,SAAAjB,EAAAyO,cACAzO,EAAAyO,YAAAzO,EAAA0H,QAEAzG,SAAAjB,EAAA4H,WAAA3G,SAAAjB,EAAA0O,iBACA1O,EAAA0O,eAAA1O,EAAA4H,WAGAvF,EAAAb,EAAAwC,iBAAA,gBAAAR,GAAAA,EAAAiE,IAAAnG,EAAA5B,EAAA8O,GACAjM,EAAAnB,EAAAhB,EAAAuB,eAAA9B,EAAA8O,gBAAAnL,EAAAlC,EAAA5B,GAGA2H,EAAAvF,QAAAN,EACA6F,EAAAtF,QAAA3B,EACAiH,EAAArF,cAAAtC,EACA2H,EAAApF,OAAAX,EAGA+F,EAAAjF,QACAC,EAAAA,EACAE,EAAAA,EACAsF,KAAAhG,EAAAgG,MAAAhC,MAAAxD,IAAAwD,MAAAtD,GAEAmF,OAAA7F,EAAA6F,QAAA7I,EAAAoE,yBAAAjD,EAAAyO,YAAAnN,EAAAiN,EAAA7G,QACAkH,WAAA/M,EAAA+M,YAAA/P,EAAAoE,yBAAAjD,EAAA4O,WAAAtN,EAAAiN,EAAAK,YACA5L,gBAAAnD,EAAAoO,wBAAA5G,EAAA/F,GACA6B,YAAAtD,EAAAsO,oBAAA9G,EAAA/F,GACA8B,YAAAvD,EAAAwO,oBAAAhH,EAAA/F,GACA2L,QAAAnN,EAAAE,QAAAoC,OAAAtC,EAAAE,QAAAoC,OAAA6K,QAAA,EACAS,cAAA5N,EAAAE,QAAAoC,QAAAtC,EAAAE,QAAAoC,OAAAsL,YAEA9F,UAAA/F,EAAA+F,WAAA/I,EAAAoE,yBAAAjD,EAAA0O,eAAApN,EAAAiN,EAAA3G,aAIA+G,gBAAA,SAAAnL,EAAAlC,EAAA5B,GACA,GAMAtD,GAAA6I,EAAAtE,EANAd,EAAAD,KACAH,EAAAI,EAAAJ,MACAK,EAAAD,EAAAE,UACAK,EAAAP,EAAAQ,cAAAP,EAAAQ,SACAyE,EAAA,EACAC,EAAA,CAGA,IAAA5E,EAAAU,QAAAC,QAAA,CACA,IAAA3E,EAAA,EAAAA,EAAAsD,EAAAtD,IAGA,GAFA6I,EAAAxF,EAAAgB,KAAAC,SAAAtE,GACAuE,EAAAlB,EAAAmB,eAAAxE,GACA,SAAAuE,EAAAxD,MAAAwD,EAAAL,UAAAF,EAAArC,IAAA0B,EAAAoB,iBAAAzE,GAAA,CACA,GAAAyS,GAAApL,OAAArD,EAAA0O,cAAA7J,EAAAxE,KAAAa,IACAuN,GAAA,EACA7J,GAAA6J,GAAA,EAEA9J,GAAA8J,GAAA,EAKA,GAAAE,GAAAtL,OAAArD,EAAA0O,cAAAtL,GACA,OAAAuL,GAAA,EACA3O,EAAA4D,iBAAAgB,EAAA+J,GAEA3O,EAAA4D,iBAAAe,EAAAgK,GAGA,MAAA3O,GAAA4D,iBAAAR,IAGAwK,0BAAA,WAcA,QAAAgB,GAAAC,EAAAnL,EAAAC,GACA,MAAAF,MAAAE,IAAAF,KAAAC,IAAAmL,EAAAlL,GAAAD,GAdA,GAIA1H,GAAA+M,EAAA9B,EAAApB,EAAAiJ,EAJArP,EAAAD,KACAE,EAAAD,EAAAE,UACAoP,EAAAtP,EAAAJ,MAAAkG,UACAyB,EAAAtH,EAAAW,QAcA,IAVAX,EAAAE,QAAAoC,OAAAyK,WACAzF,EAAAA,EAAAgI,OAAA,SAAAH,GACA,OAAAA,EAAA7M,OAAAyF,QAQA,aAAA/H,EAAAE,QAAAoC,OAAAwL,uBACA/O,EAAAwQ,oBAAAjI,OAEA,KAAAhL,EAAA,EAAA+M,EAAA/B,EAAAzK,OAAAP,EAAA+M,IAAA/M,EACAiL,EAAAD,EAAAhL,GACA6J,EAAAoB,EAAAjF,OACA8M,EAAArQ,EAAAyQ,YACAzQ,EAAA0Q,aAAAnI,EAAAhL,GAAAgG,OACA6D,EACApH,EAAA2Q,SAAApI,EAAAhL,GAAAgG,OACAtC,EAAAE,QAAAoC,OAAA6K,SAEAhH,EAAAwJ,sBAAAP,EAAAQ,SAAArN,EACA4D,EAAA0J,sBAAAT,EAAAQ,SAAAnN,EACA0D,EAAA2J,kBAAAV,EAAAW,KAAAxN,EACA4D,EAAA6J,kBAAAZ,EAAAW,KAAAtN,CAIA,IAAA1C,EAAAJ,MAAAqB,QAAAxB,SAAAX,KAAAoR,gBACA,IAAA3T,EAAA,EAAA+M,EAAA/B,EAAAzK,OAAAP,EAAA+M,IAAA/M,EACA6J,EAAAmB,EAAAhL,GAAAgG,OACA6D,EAAAwJ,sBAAAT,EAAA/I,EAAAwJ,sBAAAN,EAAA9E,KAAA8E,EAAA/E,OACAnE,EAAA0J,sBAAAX,EAAA/I,EAAA0J,sBAAAR,EAAA3E,IAAA2E,EAAA5E,QACAtE,EAAA2J,kBAAAZ,EAAA/I,EAAA2J,kBAAAT,EAAA9E,KAAA8E,EAAA/E,OACAnE,EAAA6J,kBAAAd,EAAA/I,EAAA6J,kBAAAX,EAAA3E,IAAA2E,EAAA5E,SAKApF,KAAA,SAAAC,GACA,GAIAhJ,GAAA+M,EAJAtJ,EAAAD,KACAE,EAAAD,EAAAE,UACAqH,EAAAtH,EAAAW,SACA6E,EAAAF,GAAA,CAIA,KAAAhJ,EAAA,EAAA+M,EAAA/B,EAAAzK,OAAAP,EAAA+M,IAAA/M,EACAgL,EAAAhL,GAAA0J,WAAAR,EAWA,KARAxI,EAAA0I,cAAAC,SAAA5F,EAAAJ,MAAAA,MAAAiG,IAAA7F,EAAAJ,MAAAkG,WAEA8G,EAAA5M,EAAAI,aAAAJ,EAAAJ,MAAAqB,UACAhB,EAAAE,QAAA8F,WAAAR,GAAAH,OAEArI,EAAA0I,cAAAO,WAAAlG,EAAAJ,MAAAA,MAAAiG,KAGAtJ,EAAA,EAAA+M,EAAA/B,EAAAzK,OAAAP,EAAA+M,IAAA/M,EACAgL,EAAAhL,GAAA+I,KAAAtF,EAAAJ,MAAAkG,YAIAK,cAAA,SAAAqB,GAEA,GAAArH,GAAAJ,KAAAH,MAAAgB,KAAAC,SAAA2G,EAAArF,eACAV,EAAA+F,EAAApF,OACAJ,EAAAwF,EAAAxF,WACAoE,EAAAoB,EAAAjF,MAEA6D,GAAAyB,OAAA7F,EAAAiG,aAAAjJ,EAAAoE,yBAAAjD,EAAAgQ,iBAAA1O,EAAA1B,KAAAH,MAAAqB,QAAAxB,SAAA+H,MAAAS,aACA7B,EAAAjD,gBAAAnB,EAAAqE,sBAAArH,EAAAoE,yBAAAjD,EAAAiQ,0BAAA3O,EAAAzC,EAAAsH,cAAAF,EAAAjD,kBACAiD,EAAA9C,YAAAtB,EAAAuE,kBAAAvH,EAAAoE,yBAAAjD,EAAAkQ,sBAAA5O,EAAAzC,EAAAsH,cAAAF,EAAA9C,cACA8C,EAAA7C,YAAAvB,EAAAwE,kBAAAxH,EAAAoE,yBAAAjD,EAAAmQ,sBAAA7O,EAAA2E,EAAA7C,cAGAkD,iBAAA,SAAAe,GACA,GAAAxH,GAAAD,KACAI,EAAAH,EAAAJ,MAAAgB,KAAAC,SAAA2G,EAAArF,eACAV,EAAA+F,EAAApF,OACAJ,EAAAwF,EAAAxF,WACAoE,EAAAoB,EAAAjF,MAGAnB,UAAAjB,EAAA0H,QAAAzG,SAAAjB,EAAAyO,cACAzO,EAAAyO,YAAAzO,EAAA0H,QAGAzB,EAAAyB,OAAA7F,EAAA6F,QAAA7I,EAAAoE,yBAAAjD,EAAAyO,YAAAnN,EAAAzB,EAAAJ,MAAAqB,QAAAxB,SAAA+H,MAAAK,QACAzB,EAAAjD,gBAAAnD,EAAAoO,wBAAA5G,EAAA/F,GACA2E,EAAA9C,YAAAtD,EAAAsO,oBAAA9G,EAAA/F,GACA2E,EAAA7C,YAAAvD,EAAAwO,oBAAAhH,EAAA/F,gCC/UA,YAEAzE,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,OAEA/B,GAAA0B,SAAA4R,WAEApD,OACA7P,KAAA,eACAkT,SAAA,EACAlM,OACAmM,aAAA,IAKArI,WACAC,eAAA,EACAC,cAAA,GAGAwC,YAAA,GAAA9G,KAAAyF,GACAlB,YAAA,EACAC,eAAA,SAAA5I,GACA,GAAA6I,KACAA,GAAApH,KAAA,cAAAzB,EAAA1B,GAAA,YAEA,IAAA0C,GAAAhB,EAAAgB,KACAC,EAAAD,EAAAC,SACA+B,EAAAhC,EAAAgC,MAEA,IAAA/B,EAAA/D,OACA,IAAA,GAAAP,GAAA,EAAAA,EAAAsE,EAAA,GAAAD,KAAA9D,SAAAP,EACAkM,EAAApH,KAAA,qCAAAR,EAAA,GAAAsC,gBAAA5G,GAAA,aACAqG,EAAArG,IACAkM,EAAApH,KAAAuB,EAAArG,IAEAkM,EAAApH,KAAA,QAKA,OADAoH,GAAApH,KAAA,SACAoH,EAAAC,KAAA,KAEAC,QACA/F,QACAgG,eAAA,SAAAhJ,GACA,GAAAgB,GAAAhB,EAAAgB,IACA,OAAAA,GAAAgC,OAAA9F,QAAA8D,EAAAC,SAAA/D,OACA8D,EAAAgC,OAAAiG,IAAA,SAAAtK,EAAAhC,GACA,GAAA0D,GAAAL,EAAAmB,eAAA,GACAqE,EAAAxE,EAAAC,SAAA,GACAiI,EAAA7I,EAAAW,KAAArE,GACAyF,EAAA8G,EAAA9G,WACAoB,EAAApE,EAAAoE,yBACA2F,EAAAnJ,EAAAqB,QAAAxB,SAAAqJ,GAKA,QACAL,KAAAlK,EACAyK,UANAhH,EAAAmB,gBAAAnB,EAAAmB,gBAAAC,EAAAgC,EAAAjC,gBAAA5G,EAAAwM,EAAA5F,iBAOA8F,YANAjH,EAAAsB,YAAAtB,EAAAsB,YAAAF,EAAAgC,EAAA9B,YAAA/G,EAAAwM,EAAAzF,aAOA4F,UANAlH,EAAAuB,YAAAvB,EAAAuB,YAAAH,EAAAgC,EAAA7B,YAAAhH,EAAAwM,EAAAxF,aAOA4F,OAAAnD,MAAAZ,EAAAxE,KAAArE,KAAA0D,EAAAW,KAAArE,GAAA4M,OAGA1H,MAAAlF,UAQA6M,QAAA,SAAAtN,EAAAuN,GACA,GAEA9M,GAAA+M,EAAArJ,EAFAwB,EAAA4H,EAAA5H,MACA7B,EAAAG,KAAAH,KAGA,KAAArD,EAAA,EAAA+M,GAAA1J,EAAAgB,KAAAC,cAAA/D,OAAAP,EAAA+M,IAAA/M,EACA0D,EAAAL,EAAAmB,eAAAxE,GACA0D,EAAAW,KAAAa,GAAA0H,QAAAlJ,EAAAW,KAAAa,GAAA0H,MAGAvJ,GAAA0B,WAKAlD,UACAC,WACAC,MAAA,WACA,MAAA,IAEAC,MAAA,SAAAC,EAAAoC,GACA,MAAAA,GAAAgC,OAAApE,EAAAiD,OAAA,KAAAjD,EAAAE,WAMAzB,EAAA4B,YAAA0R,UAAAtT,EAAAqC,kBAAAC,QAEAC,gBAAAvC,EAAAwC,SAAAuK,IAEAC,WAAAjL,EAAAkL,KAEA5I,OAAA,SAAAC,GACA,GAAAvB,GAAAD,KACAH,EAAAI,EAAAJ,MACAkG,EAAAlG,EAAAkG,UACA7F,EAAAD,EAAAE,UACAmK,EAAAzK,EAAAqB,QACA8H,EAAAsB,EAAA5K,SAAAqJ,IACA8B,EAAA5G,KAAAC,IAAA6B,EAAAyE,MAAAzE,EAAA0E,KAAA1E,EAAA4E,OAAA5E,EAAA6E,IACA/K,GAAA+L,YAAA3H,KAAAE,KAAA0G,EAAA7B,EAAAxF,YAAA,GAAA,EAAA,GACA3D,EAAAgM,YAAA5H,KAAAE,IAAAmG,EAAAd,iBAAA3J,EAAA+L,YAAA,IAAAtB,EAAA,iBAAA,EAAA,GACAzK,EAAAiM,cAAAjM,EAAA+L,YAAA/L,EAAAgM,aAAAhM,EAAAkM,yBAEA9L,EAAA2L,YAAA/L,EAAA+L,YAAA/L,EAAAiM,aAAA7L,EAAAyB,MACAzB,EAAA4L,YAAA5L,EAAA2L,YAAA/L,EAAAiM,aAEA5L,EAAAyQ,MAAA1Q,EAAA2Q,uBAEA3R,EAAA2B,KAAAV,EAAAW,KAAA,SAAAkI,EAAArH,GACAzB,EAAA0B,cAAAoH,EAAArH,EAAAF,MAIAG,cAAA,SAAAoH,EAAArH,EAAAF,GAkBA,IAAA,GAjBAvB,GAAAD,KACAH,EAAAI,EAAAJ,MACAO,EAAAH,EAAAI,aACAiK,EAAAzK,EAAAqB,QACAkL,EAAA9B,EAAAjC,UACA+E,EAAAvN,EAAAuN,MACA/J,EAAApE,EAAAoE,yBACAR,EAAAhD,EAAAgB,KAAAgC,OAEA8G,EAAA1J,EAAAsM,uBAAAnM,EAAAS,KAAAa,IACA2K,EAAAe,EAAAyD,QACAvE,EAAAc,EAAA0D,QAIAC,EAAA,EACA7Q,EAAAD,EAAAE,UACA3D,EAAA,EAAAA,EAAAkF,IAAAlF,EACAyJ,MAAA7F,EAAAS,KAAArE,KAAA0D,EAAAW,KAAArE,GAAA4M,UACA2H,CAKA,IAAAC,GAAA1G,EAAAS,WACAkG,EAAAlI,EAAAK,OAAA,EAAAgE,EAAA8D,8BAAA9Q,EAAAS,KAAAa,IACAqJ,EAAAiG,EAAArH,EAAAoH,EACA/F,EAAAD,GAAAhC,EAAAK,OAAA,EAAAO,GAEAwH,EAAA/E,EAAA7D,aAAA,EAAA6E,EAAA8D,8BAAA9Q,EAAAS,KAAAa,GAEAzC,GAAAO,OAAAuJ,GAEA3G,cAAAnC,EAAAyB,MACAW,OAAAX,EACA6L,OAAAH,EAGA5K,QACAC,EAAA4J,EACA1J,EAAA2J,EACAT,YAAA,EACAD,YAAApK,EAAA2P,EAAAF,EACAlG,WAAAvJ,GAAA4K,EAAA9D,cAAA0I,EAAAjG,EACAC,SAAAxJ,GAAA4K,EAAA9D,cAAA0I,EAAAhG,EACAxM,MAAA6E,EAAAR,EAAAnB,EAAAmB,EAAAnB,OAKAzB,EAAAyG,iBAAAqC,GAEAA,EAAAtF,SAGAiD,iBAAA,SAAAqC,GACA7L,EAAAqC,kBAAAQ,UAAA2G,iBAAA5J,KAAAkD,KAAA+I,EAAA/I,KAAAH,MAAAqB,QAAAxB,SAAAqJ,MAGA6H,qBAAA,WACA,GAAAxQ,GAAAJ,KAAAK,aACAH,EAAAF,KAAAG,UACAwQ,EAAA,CAQA,OANA1R,GAAA2B,KAAAV,EAAAW,KAAA,SAAA4L,EAAA/K,GACAuE,MAAA7F,EAAAS,KAAAa,KAAA+K,EAAArD,QACAuH,MAIAA,GAGApE,uBAAA,SAAA3I,GACA,GAAA+M,GAAA3Q,KAAAG,UAAAwQ,KACA,OAAAA,GAAA,IAAA1K,MAAArC,GACA,EAAAK,KAAAyF,GAAAiH,EAEA,+BCnNA,YAEA1T,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,OAEA/B,GAAA0B,SAAAwS,OACA5I,YAAA,EACA4E,OACA7P,KAAA,gBAEAmC,UACAX,MACAsO,QAAA,KAKAnQ,EAAA4B,YAAAsS,MAAAlU,EAAAqC,kBAAAC,QAEA0N,mBAAAhQ,EAAAwC,SAAAhC,KAEA+B,gBAAAvC,EAAAwC,SAAA6H,MAEA2C,WAAAjL,EAAAkL,KAEA5I,OAAA,SAAAC,GACA,GAAAvB,GAAAD,KACAE,EAAAD,EAAAE,UACApB,EAAAmB,EAAAE,QACAoH,EAAAtH,EAAAW,KACAoB,EAAAlD,EAAAkD,WACA7B,EAAAH,EAAAI,aACA8M,EAAAlN,EAAAJ,MAAAqB,QAAAxB,SAAAX,KACAqO,EAAAnN,EAAAJ,MAAAuN,KAGA/L,UAAAjB,EAAAiN,SAAAhM,SAAAjB,EAAAkN,cACAlN,EAAAkN,YAAAlN,EAAAiN,SAGApO,EAAAO,OAAAU,EAAAE,SAEAgC,cAAAnC,EAAAyB,MAEA8L,UAAAhG,EACA6J,OAAA,EAEA7O,QAEA6K,QAAApL,EAAAoL,QAAApL,EAAAoL,QAAApO,EAAA6N,kBAAA1M,EAAAkN,YAAAH,EAAAE,SACAjK,gBAAAnB,EAAAmB,gBAAAnB,EAAAmB,gBAAAhD,EAAAgD,iBAAA+J,EAAA/J,gBACAI,YAAAvB,EAAAuB,YAAAvB,EAAAuB,YAAApD,EAAAoD,aAAA2J,EAAA3J,YACAD,YAAAtB,EAAAsB,YAAAtB,EAAAsB,YAAAnD,EAAAmD,aAAA4J,EAAA5J,YACAsK,KAAA5L,EAAA4L,KAAA5L,EAAA4L,KAAAxM,SAAAjB,EAAAyN,KAAAzN,EAAAyN,KAAAV,EAAAU,KACAJ,eAAAxL,EAAAwL,eAAAxL,EAAAwL,eAAArN,EAAAqN,gBAAAN,EAAAM,eACAC,WAAAzL,EAAAyL,WAAAzL,EAAAyL,WAAAtN,EAAAsN,YAAAP,EAAAO,WACAC,iBAAA1L,EAAA0L,iBAAA1L,EAAA0L,iBAAAvN,EAAAuN,kBAAAR,EAAAQ,iBACAC,gBAAA3L,EAAA2L,gBAAA3L,EAAA2L,gBAAAxN,EAAAwN,iBAAAT,EAAAS,gBAGAK,SAAAb,EAAAxC,IACAsD,YAAAd,EAAAzC,OACAwD,UAAAf,EAAAkE,qBAIApR,EAAAE,QAAAqD,QAGAxE,EAAA2B,KAAA4G,EAAA,SAAAC,EAAA/F,GACAzB,EAAA0B,cAAA8F,EAAA/F,EAAAF,IACAvB,GAGAA,EAAAmO,6BAEAzM,cAAA,SAAA8F,EAAA/F,EAAAF,GACA,GAAAvB,GAAAD,KACAiC,EAAAwF,EAAAxF,WACA7B,EAAAH,EAAAI,aACA+M,EAAAnN,EAAAJ,MAAAuN,MACA1F,EAAAzH,EAAAJ,MAAAqB,QAAAxB,SAAA+H,MACA8J,EAAAnE,EAAAoE,yBAAA9P,EAAAtB,EAAAS,KAAAa,GAEAzC,GAAAO,OAAAiI,GAEArF,cAAAnC,EAAAyB,MACAW,OAAAX,EACA6L,OAAAH,EAGA5K,QACAC,EAAAjB,EAAA4L,EAAAyD,QAAAU,EAAA9O,EACAE,EAAAnB,EAAA4L,EAAA0D,QAAAS,EAAA5O,EAGA0K,QAAApL,EAAAoL,QAAApL,EAAAoL,QAAApO,EAAA6N,kBAAA1M,EAAAkN,YAAArN,EAAAJ,MAAAqB,QAAAxB,SAAAX,KAAAsO,SACAvF,OAAA7F,EAAA6F,OAAA7F,EAAA6F,OAAA7I,EAAAoE,yBAAAjD,EAAAyO,YAAAnN,EAAAgG,EAAAI,QACA1E,gBAAAnB,EAAAmB,gBAAAnB,EAAAmB,gBAAAnE,EAAAoE,yBAAAjD,EAAAkO,qBAAA5M,EAAAgG,EAAAtE,iBACAG,YAAAtB,EAAAsB,YAAAtB,EAAAsB,YAAAtE,EAAAoE,yBAAAjD,EAAAoO,iBAAA9M,EAAAgG,EAAAnE,aACAC,YAAAvB,EAAAuB,YAAAvB,EAAAuB,YAAAvE,EAAAoE,yBAAAjD,EAAAsO,iBAAAhN,EAAAgG,EAAAlE,aACAwL,WAAA/M,EAAA+M,WAAA/M,EAAA+M,WAAA/P,EAAAoE,yBAAAjD,EAAA4O,WAAAtN,EAAAgG,EAAAsH,YAGAhH,UAAA/F,EAAA+F,UAAA/F,EAAA+F,UAAA/I,EAAAoE,yBAAAjD,EAAA4H,UAAAtG,EAAAgG,EAAAM,cAIAP,EAAAjF,OAAAyF,KAAAhG,EAAAgG,KAAAhG,EAAAgG,KAAAhC,MAAAwB,EAAAjF,OAAAC,IAAAwD,MAAAwB,EAAAjF,OAAAG,IAEAyL,0BAAA,WACA,GAAArI,GAAA/F,KAAAH,MAAAkG,UACA7F,EAAAF,KAAAG,SAEAlB,GAAA2B,KAAAV,EAAAW,KAAA,SAAA4G,EAAA/F,GACA,GAAA2E,GAAAoB,EAAAjF,OACA8M,EAAArQ,EAAAyQ,YACAzQ,EAAA0Q,aAAAzP,EAAAW,KAAAa,GAAA,GAAAc,OACA6D,EACApH,EAAA2Q,SAAA1P,EAAAW,KAAAa,GAAA,GAAAc,OACA6D,EAAAgH;6GAIAhH,GAAAwJ,sBAAA5L,KAAAE,IAAAF,KAAAC,IAAAoL,EAAAQ,SAAArN,EAAAsD,EAAAyE,OAAAzE,EAAA0E,MACApE,EAAA0J,sBAAA9L,KAAAE,IAAAF,KAAAC,IAAAoL,EAAAQ,SAAAnN,EAAAoD,EAAA4E,QAAA5E,EAAA6E,KAEAvE,EAAA2J,kBAAA/L,KAAAE,IAAAF,KAAAC,IAAAoL,EAAAW,KAAAxN,EAAAsD,EAAAyE,OAAAzE,EAAA0E,MACApE,EAAA6J,kBAAAjM,KAAAE,IAAAF,KAAAC,IAAAoL,EAAAW,KAAAtN,EAAAoD,EAAA4E,QAAA5E,EAAA6E,KAGAnD,EAAAhE,WAIA8B,KAAA,SAAAC,GACA,GAAAtF,GAAAF,KAAAG,UACAuF,EAAAF,GAAA,CAGAvG,GAAA2B,KAAAV,EAAAW,KAAA,SAAA4G,GACAA,EAAAvB,WAAAR,KAIAxF,EAAAE,QAAA8F,WAAAR,GAAAH,OAGAtG,EAAA2B,KAAAV,EAAAW,KAAA,SAAA4G,GACAA,EAAAlC,UAIAa,cAAA,SAAAqB,GAEA,GAAArH,GAAAJ,KAAAH,MAAAgB,KAAAC,SAAA2G,EAAArF,eACAH,EAAAwF,EAAAxF,WACAP,EAAA+F,EAAApF,OACAgE,EAAAoB,EAAAjF,MAEA6D,GAAAyB,OAAA7F,EAAAiG,YAAAjG,EAAAiG,YAAAjJ,EAAAoE,yBAAAjD,EAAAgQ,iBAAA1O,EAAA1B,KAAAH,MAAAqB,QAAAxB,SAAA+H,MAAAS,aACA7B,EAAAjD,gBAAAnB,EAAAqE,qBAAArE,EAAAqE,qBAAArH,EAAAoE,yBAAAjD,EAAAiQ,0BAAA3O,EAAAzC,EAAAsH,cAAAF,EAAAjD,kBACAiD,EAAA9C,YAAAtB,EAAAuE,iBAAAvE,EAAAuE,iBAAAvH,EAAAoE,yBAAAjD,EAAAkQ,sBAAA5O,EAAAzC,EAAAsH,cAAAF,EAAA9C,cACA8C,EAAA7C,YAAAvB,EAAAwE,iBAAAxE,EAAAwE,iBAAAxH,EAAAoE,yBAAAjD,EAAAmQ,sBAAA7O,EAAA2E,EAAA7C,cAGAkD,iBAAA,SAAAe,GACA,GAAArH,GAAAJ,KAAAH,MAAAgB,KAAAC,SAAA2G,EAAArF,eACAH,EAAAwF,EAAAxF,WACAP,EAAA+F,EAAApF,OACAgE,EAAAoB,EAAAjF,OACAkF,EAAA1H,KAAAH,MAAAqB,QAAAxB,SAAA+H,KAEApB,GAAAyB,OAAA7F,EAAA6F,OAAA7F,EAAA6F,OAAA7I,EAAAoE,yBAAAjD,EAAA0H,OAAApG,EAAAgG,EAAAI,QACAzB,EAAAjD,gBAAAnB,EAAAmB,gBAAAnB,EAAAmB,gBAAAnE,EAAAoE,yBAAAjD,EAAAkO,qBAAA5M,EAAAgG,EAAAtE,iBACAiD,EAAA9C,YAAAtB,EAAAsB,YAAAtB,EAAAsB,YAAAtE,EAAAoE,yBAAAjD,EAAAoO,iBAAA9M,EAAAgG,EAAAnE,aACA8C,EAAA7C,YAAAvB,EAAAuB,YAAAvB,EAAAuB,YAAAvE,EAAAoE,yBAAAjD,EAAAsO,iBAAAhN,EAAAgG,EAAAlE,0CChLA,YAEAvG,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,OAEA/B,GAAA0B,SAAA6S,OAAApJ,WACAqJ,SAAA,IACAC,OAAA,eACAC,WAAA3S,EAAAkL,KACA0H,WAAA5S,EAAAkL,MAGAjN,EAAA4U,UAAA5U,EAAA6U,QAAAvS,QACAwS,YAAA,KACAC,SAAA,GACAN,OAAA,GACAO,OAAA,KAEAC,oBAAA,KACAC,oBAAA,OAGAlV,EAAAmV,kBACAC,cAAA,GACAC,cACAC,WAAA,EACAC,QAAA,KASAC,aAAA,SAAAC,EAAAC,EAAAlB,EAAAmB,GACA,GAAA5S,GAAAD,IAEA6S,KACAF,EAAAG,WAAA,EAGA,KAAA,GAAApR,GAAA,EAAAA,EAAAzB,EAAAsS,WAAAxV,SAAA2E,EACA,GAAAzB,EAAAsS,WAAA7Q,GAAAiR,gBAAAA,EAGA,YADA1S,EAAAsS,WAAA7Q,GAAAkR,gBAAAA,EAKA3S,GAAAsS,WAAAjR,MACAqR,cAAAA,EACAC,gBAAAA,IAIA,IAAA3S,EAAAsS,WAAAxV,QACAkD,EAAA8S,yBAIAC,gBAAA,SAAAL,GACA,GAAAjR,GAAAzC,EAAAgU,UAAAjT,KAAAuS,WAAA,SAAAW,GACA,MAAAA,GAAAP,gBAAAA,GAGAjR,MAAA,IACA1B,KAAAuS,WAAAY,OAAAzR,EAAA,GACAiR,EAAAG,WAAA,IAGAC,sBAAA,WACA,GAAA9S,GAAAD,IACA,QAAAC,EAAAwS,UAIAxS,EAAAwS,QAAAxT,EAAAmU,iBAAAtW,KAAAK,OAAA,WACA8C,EAAAwS,QAAA,KACAxS,EAAAoT,kBAIAA,YAAA,WACA,GAAApT,GAAAD,KAEAsT,EAAAC,KAAAC,MACAC,EAAA,CAEAxT,GAAAuS,WAAA,IACAiB,EAAAxP,KAAAyP,MAAAzT,EAAAuS,YACAvS,EAAAuS,WAAAvS,EAAAuS,WAAA,EAIA,KADA,GAAAhW,GAAA,EACAA,EAAAyD,EAAAsS,WAAAxV,QACA,OAAAkD,EAAAsS,WAAA/V,GAAAoW,gBAAAZ,cACA/R,EAAAsS,WAAA/V,GAAAoW,gBAAAZ,YAAA,GAGA/R,EAAAsS,WAAA/V,GAAAoW,gBAAAZ,aAAA,EAAAyB,EAEAxT,EAAAsS,WAAA/V,GAAAoW,gBAAAZ,YAAA/R,EAAAsS,WAAA/V,GAAAoW,gBAAAX,WACAhS,EAAAsS,WAAA/V,GAAAoW,gBAAAZ,YAAA/R,EAAAsS,WAAA/V,GAAAoW,gBAAAX,UAGAhS,EAAAsS,WAAA/V,GAAAoW,gBAAAV,OAAAjS,EAAAsS,WAAA/V,GAAAmW,cAAA1S,EAAAsS,WAAA/V,GAAAoW,iBACA3S,EAAAsS,WAAA/V,GAAAoW,gBAAAT,qBAAAlS,EAAAsS,WAAA/V,GAAAoW,gBAAAT,oBAAArV,MACAmD,EAAAsS,WAAA/V,GAAAoW,gBAAAT,oBAAArV,KAAAmD,EAAAsS,WAAA/V,GAAAmW,cAAA1S,EAAAsS,WAAA/V,IAGAyD,EAAAsS,WAAA/V,GAAAoW,gBAAAZ,cAAA/R,EAAAsS,WAAA/V,GAAAoW,gBAAAX,UACAhS,EAAAsS,WAAA/V,GAAAoW,gBAAAR,qBAAAnS,EAAAsS,WAAA/V,GAAAoW,gBAAAR,oBAAAtV,MACAmD,EAAAsS,WAAA/V,GAAAoW,gBAAAR,oBAAAtV,KAAAmD,EAAAsS,WAAA/V,GAAAmW,cAAA1S,EAAAsS,WAAA/V,IAIAyD,EAAAsS,WAAA/V,GAAAmW,cAAAG,WAAA,EAEA7S,EAAAsS,WAAAY,OAAA3W,EAAA,MAEAA,CAIA,IAAAmX,GAAAJ,KAAAC,MACAhB,GAAAmB,EAAAL,GAAArT,EAAAqS,aAEArS,GAAAuS,YAAAA,EAGAvS,EAAAsS,WAAAxV,OAAA,GACAkD,EAAA8S,oDCtIA,YAEA9V,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA0I,gBAEA3G,GAAA2U,UAAA,SAAA9N,EAAAkJ,EAAAlH,EAAArF,EAAAE,GACA,GAAApF,GAAAsW,EAAAC,EAAAC,EAAAlN,EAAA6E,CAEA,IAAA,gBAAAsD,KAEA,+BADAzR,EAAAyR,EAAAgF,aACA,+BAAAzW,GAEA,WADAuI,GAAAmO,UAAAjF,EAAAvM,EAAAuM,EAAA9L,MAAA,EAAAP,EAAAqM,EAAAnI,OAAA,EAKA,MAAAZ,MAAA6B,IAAAA,GAAA,GAAA,CAIA,OAAAkH,GAEA,QACAlJ,EAAAoO,YACApO,EAAAiD,IAAAtG,EAAAE,EAAAmF,EAAA,EAAA,EAAA7D,KAAAyF,IACA5D,EAAAqO,YACArO,EAAA+H,MACA,MACA,KAAA,WACA/H,EAAAoO,YACAL,EAAA,EAAA/L,EAAA7D,KAAAmQ,KAAA,GACAvN,EAAAgN,EAAA5P,KAAAmQ,KAAA,GAAA,EACAtO,EAAAuO,OAAA5R,EAAAoR,EAAA,EAAAlR,EAAAkE,EAAA,GACAf,EAAAwO,OAAA7R,EAAAoR,EAAA,EAAAlR,EAAAkE,EAAA,GACAf,EAAAwO,OAAA7R,EAAAE,EAAA,EAAAkE,EAAA,GACAf,EAAAqO,YACArO,EAAA+H,MACA,MACA,KAAA,OACAnC,EAAA,EAAAzH,KAAAsQ,MAAAzM,EACAhC,EAAAoO,YACApO,EAAA0O,SAAA/R,EAAAiJ,EAAA/I,EAAA+I,EAAA,EAAAA,EAAA,EAAAA,GACA5F,EAAA2O,WAAAhS,EAAAiJ,EAAA/I,EAAA+I,EAAA,EAAAA,EAAA,EAAAA,EACA,MACA,KAAA,cACA,GAAAZ,GAAAhD,EAAA7D,KAAAsQ,MACAG,EAAAjS,EAAAqI,EACA6J,EAAAhS,EAAAmI,EACA8J,EAAA3Q,KAAAsQ,MAAAzM,CACA5K,GAAA+B,QAAA4V,qBAAA/O,EAAA4O,EAAAC,EAAAC,EAAAA,EAAA9M,EAAA,GACAhC,EAAA+H,MACA,MACA,KAAA,UACAnC,EAAA,EAAAzH,KAAAsQ,MAAAzM,EACAhC,EAAAoO,YACApO,EAAAuO,OAAA5R,EAAAiJ,EAAA/I,GACAmD,EAAAwO,OAAA7R,EAAAE,EAAA+I,GACA5F,EAAAwO,OAAA7R,EAAAiJ,EAAA/I,GACAmD,EAAAwO,OAAA7R,EAAAE,EAAA+I,GACA5F,EAAAqO,YACArO,EAAA+H,MACA,MACA,KAAA,QACA/H,EAAAoO,YACApO,EAAAuO,OAAA5R,EAAAE,EAAAmF,GACAhC,EAAAwO,OAAA7R,EAAAE,EAAAmF,GACAhC,EAAAuO,OAAA5R,EAAAqF,EAAAnF,GACAmD,EAAAwO,OAAA7R,EAAAqF,EAAAnF,GACAmD,EAAAqO,WACA,MACA,KAAA,WACArO,EAAAoO,YACAJ,EAAA7P,KAAAiH,IAAAjH,KAAAyF,GAAA,GAAA5B,EACAiM,EAAA9P,KAAAkH,IAAAlH,KAAAyF,GAAA,GAAA5B,EACAhC,EAAAuO,OAAA5R,EAAAqR,EAAAnR,EAAAoR,GACAjO,EAAAwO,OAAA7R,EAAAqR,EAAAnR,EAAAoR,GACAjO,EAAAuO,OAAA5R,EAAAqR,EAAAnR,EAAAoR,GACAjO,EAAAwO,OAAA7R,EAAAqR,EAAAnR,EAAAoR,GACAjO,EAAAqO,WACA,MACA,KAAA,OACArO,EAAAoO,YACApO,EAAAuO,OAAA5R,EAAAE,EAAAmF,GACAhC,EAAAwO,OAAA7R,EAAAE,EAAAmF,GACAhC,EAAAuO,OAAA5R,EAAAqF,EAAAnF,GACAmD,EAAAwO,OAAA7R,EAAAqF,EAAAnF,GACAmR,EAAA7P,KAAAiH,IAAAjH,KAAAyF,GAAA,GAAA5B,EACAiM,EAAA9P,KAAAkH,IAAAlH,KAAAyF,GAAA,GAAA5B,EACAhC,EAAAuO,OAAA5R,EAAAqR,EAAAnR,EAAAoR,GACAjO,EAAAwO,OAAA7R,EAAAqR,EAAAnR,EAAAoR,GACAjO,EAAAuO,OAAA5R,EAAAqR,EAAAnR,EAAAoR,GACAjO,EAAAwO,OAAA7R,EAAAqR,EAAAnR,EAAAoR,GACAjO,EAAAqO,WACA,MACA,KAAA,OACArO,EAAAoO,YACApO,EAAAuO,OAAA5R,EAAAqF,EAAAnF,GACAmD,EAAAwO,OAAA7R,EAAAqF,EAAAnF,GACAmD,EAAAqO,WACA,MACA,KAAA,OACArO,EAAAoO,YACApO,EAAAuO,OAAA5R,EAAAE,GACAmD,EAAAwO,OAAA7R,EAAAqF,EAAAnF,GACAmD,EAAAqO,YAIArO,EAAAgP,WAGA7V,EAAA4G,SAAA,SAAAC,EAAAD,GACAC,EAAAiP,OACAjP,EAAAoO,YACApO,EAAAkP,KAAAnP,EAAA4E,KAAA5E,EAAA+E,IAAA/E,EAAA2E,MAAA3E,EAAA4E,KAAA5E,EAAA8E,OAAA9E,EAAA+E,KACA9E,EAAAmP,QAGAhW,EAAAkH,WAAA,SAAAL,GACAA,EAAAoP,qCCxHA,YAEAjY,GAAAJ,QAAA,SAAAK,GAmBA,QAAAiY,GAAA7X,GACAA,EAAAA,KAIA,IAAAuD,GAAAvD,EAAAuD,KAAAvD,EAAAuD,QASA,OARAA,GAAAC,SAAAD,EAAAC,aACAD,EAAAgC,OAAAhC,EAAAgC,WAEAvF,EAAA4D,QAAAjC,EAAAmW,YACAlY,EAAA0B,SAAA6S,OACAvU,EAAA0B,SAAAtB,EAAAC,MACAD,EAAA4D,aAEA5D,EAOA,QAAA+X,GAAAxV,GACA,GAAAyV,GAAAzV,EAAAqB,OAGAoU,GAAAlI,MACAvN,EAAAuN,MAAAlM,QAAAoU,EAAAlI,MACAkI,EAAAtX,QACAsX,EAAAtX,OAAAC,MAAAsX,OAAAD,EAAAtX,OAAAI,OAAAoX,QAAA,SAAAC,GACA5V,EAAA7B,OAAAyX,EAAAtX,IAAA+C,QAAAuU,IAKA5V,EAAA6V,QAAAC,SAAAL,EAAAjX,SAnDA,GAAAY,GAAA/B,EAAA+B,QACA2W,EAAA1Y,EAAA0Y,QACAC,EAAA3Y,EAAA2Y,QAGA3Y,GAAA4Y,SAIA5Y,EAAA6Y,aAGA7Y,EAAA4B,eA8CA5B,EAAA8Y,WAAA,SAAAC,EAAA3Y,EAAA4Y,GACA,GAAAjW,GAAAD,IAEA1C,GAAA6X,EAAA7X,EAEA,IAAAD,GAAAwY,EAAAM,eAAAF,EAAA3Y,GACA8Y,EAAA/Y,GAAAA,EAAA+Y,OACAvP,EAAAuP,GAAAA,EAAAvP,OACA3D,EAAAkT,GAAAA,EAAAlT,KAwBA,OAtBAgT,GAAApQ,IAAAzI,EACA6Y,EAAAE,OAAAA,EACAF,EAAA5Y,OAAAA,EACA4Y,EAAAhT,MAAAA,EACAgT,EAAArP,OAAAA,EACAqP,EAAA1N,YAAA3B,EAAA3D,EAAA2D,EAAA,KAEA5G,EAAA9B,GAAAc,EAAAoX,MACApW,EAAAJ,MAAAqW,EACAjW,EAAA3C,OAAAA,EACA2C,EAAAiB,QAAA5D,EAAA4D,QACAjB,EAAAqW,iBAAA,EAGApZ,EAAA6Y,UAAA9V,EAAA9B,IAAA8B,EAEAsW,OAAAC,eAAAvW,EAAA,QACAwW,IAAA,WACA,MAAAxW,GAAA3C,OAAAuD,QAIAxD,GAAA+Y,GASAnW,EAAAL,aACAK,EAAAsB,SAEAtB,IAPAyW,QAAAC,MAAA,qEACA1W,IASAhB,EAAAO,OAAAtC,EAAA8Y,WAAAjW,WACAH,WAAA,WACA,GAAAK,GAAAD,IAsBA,OAnBA4V,GAAAgB,OAAA3W,EAAA,cAEAhB,EAAA4X,YAAA5W,EAAAJ,OAEAI,EAAA6W,aAEA7W,EAAAiB,QAAA6V,YAEA9W,EAAA+W,QAAA,GAIA/W,EAAAgX,sBACAhX,EAAAiX,cACAjX,EAAAkX,cAGAvB,EAAAgB,OAAA3W,EAAA,aAEAA,GAGAmX,MAAA,WAEA,MADAnY,GAAAmY,MAAApX,KAAAH,OACAG,MAGAqX,KAAA,WAGA,MADAna,GAAAmV,iBAAAW,gBAAAhT,MACAA,MAGAgX,OAAA,SAAAM,GACA,GAAArX,GAAAD,KACAH,EAAAI,EAAAJ,MACAqB,EAAAjB,EAAAiB,QACAkV,EAAAvW,EAAAuW,OACA5N,EAAAtH,EAAAqW,qBAAA1X,EAAA2I,aAAA,KAIAgP,EAAAvT,KAAAyP,MAAAzU,EAAAwY,gBAAArB,IACAsB,EAAAzT,KAAAyP,MAAAlL,EAAAgP,EAAAhP,EAAAvJ,EAAA0Y,iBAAAvB,GAEA,KAAAvW,EAAAqD,QAAAsU,GAAA3X,EAAAgH,SAAA6Q,KAIAtB,EAAAlT,MAAArD,EAAAqD,MAAAsU,EACApB,EAAAvP,OAAAhH,EAAAgH,OAAA6Q,EACAtB,EAAAwB,MAAA1U,MAAAsU,EAAA,KACApB,EAAAwB,MAAA/Q,OAAA6Q,EAAA,KAEAzY,EAAA4X,YAAAhX,IAEAyX,GAAA,CAEA,GAAAO,IAAA3U,MAAAsU,EAAA3Q,OAAA6Q,EACA9B,GAAAgB,OAAA3W,EAAA,UAAA4X,IAGA5X,EAAAiB,QAAA4W,UACA7X,EAAAiB,QAAA4W,SAAA7X,EAAA4X,GAGA5X,EAAAoX,OACApX,EAAAsB,OAAAtB,EAAAiB,QAAA6W,+BAIAd,oBAAA,WACA,GAAA/V,GAAAlB,KAAAkB,QACA8W,EAAA9W,EAAAlD,WACAyX,EAAAvU,EAAAkM,KAEAnO,GAAA2B,KAAAoX,EAAA/Z,MAAA,SAAAga,EAAAvW,GACAuW,EAAA9Z,GAAA8Z,EAAA9Z,IAAA,UAAAuD,IAGAzC,EAAA2B,KAAAoX,EAAA5Z,MAAA,SAAA8Z,EAAAxW,GACAwW,EAAA/Z,GAAA+Z,EAAA/Z,IAAA,UAAAuD,IAGA+T,IACAA,EAAAtX,GAAAsX,EAAAtX,IAAA,UAOA+Y,YAAA,WACA,GAAAjX,GAAAD,KACAkB,EAAAjB,EAAAiB,QACAlD,EAAAiC,EAAAjC,UACAma,IAEAjX,GAAAlD,SACAma,EAAAA,EAAA5C,QACArU,EAAAlD,OAAAC,WAAA6K,IAAA,SAAAmP,GACA,OAAA/W,QAAA+W,EAAAG,MAAA,eAEAlX,EAAAlD,OAAAI,WAAA0K,IAAA,SAAAoP,GACA,OAAAhX,QAAAgX,EAAAE,MAAA,cAKAlX,EAAAkM,OACA+K,EAAA7W,MAAAJ,QAAAA,EAAAkM,MAAAgL,MAAA,eAAAC,WAAA,IAGApZ,EAAA2B,KAAAuX,EAAA,SAAAlC,GACA,GAAAR,GAAAQ,EAAA/U,QACAoX,EAAArZ,EAAA6N,kBAAA2I,EAAAlY,KAAA0Y,EAAAmC,OACAG,EAAArb,EAAAsb,aAAAC,oBAAAH,EACA,IAAAC,EAAA,CAIA,GAAAnL,GAAA,GAAAmL,IACApa,GAAAsX,EAAAtX,GACA+C,QAAAuU,EACA3P,IAAA7F,EAAAJ,MAAAiG,IACAjG,MAAAI,GAGAjC,GAAAoP,EAAAjP,IAAAiP,EAKA6I,EAAAoC,YACApY,EAAAmN,MAAAA,MAIAlQ,EAAAsb,aAAAE,kBAAA1Y,OAGA2Y,yBAAA,WACA,GAAA1Y,GAAAD,KACA8V,KACA8C,IAkBA,IAhBA3Z,EAAA2B,KAAAX,EAAAY,KAAAC,SAAA,SAAAV,EAAAN,GACA,GAAAI,GAAAD,EAAAe,eAAAlB,EACAI,GAAA3C,OACA2C,EAAA3C,KAAA6C,EAAA7C,MAAA0C,EAAA3C,OAAAC,MAGAuY,EAAAxU,KAAApB,EAAA3C,MAEA2C,EAAA2Y,WACA3Y,EAAA2Y,WAAAC,YAAAhZ,IAEAI,EAAA2Y,WAAA,GAAA3b,GAAA4B,YAAAoB,EAAA3C,MAAA0C,EAAAH,GACA8Y,EAAAtX,KAAApB,EAAA2Y,cAEA5Y,GAEA6V,EAAA/Y,OAAA,EACA,IAAA,GAAAP,GAAA,EAAAA,EAAAsZ,EAAA/Y,OAAAP,IACA,GAAAsZ,EAAAtZ,KAAAsZ,EAAAtZ,EAAA,GAAA,CACAyD,EAAAiF,SAAA,CACA,OAKA,MAAA0T,IAOAG,cAAA,WACA,GAAA9Y,GAAAD,IACAf,GAAA2B,KAAAX,EAAAY,KAAAC,SAAA,SAAAV,EAAAN,GACAG,EAAAe,eAAAlB,GAAA+Y,WAAArX,SACAvB,IAMAuB,MAAA,WACAxB,KAAA+Y,gBACA/Y,KAAA0V,QAAA9V,cAGA2B,OAAA,SAAAyX,EAAAnG,GACA,GAAA5S,GAAAD,IAIA,IAFAqV,EAAApV,GAEA2V,EAAAgB,OAAA3W,EAAA,mBAAA,EAAA,CAKAA,EAAAyV,QAAAuD,MAAAhZ,EAAAY,IAGA,IAAA+X,GAAA3Y,EAAA0Y,0BAGA1Z,GAAA2B,KAAAX,EAAAY,KAAAC,SAAA,SAAAV,EAAAN,GACAG,EAAAe,eAAAlB,GAAA+Y,WAAAK,yBACAjZ,GAEAA,EAAAkZ,eAGAla,EAAA2B,KAAAgY,EAAA,SAAAC,GACAA,EAAArX,UAGAvB,EAAAmZ,iBAGAxD,EAAAgB,OAAA3W,EAAA,eAEAA,EAAAqW,gBACArW,EAAAoZ,kBACAxG,KAAAA,EACAnB,SAAAsH,GAGA/Y,EAAAiS,OAAA8G,EAAAnG,KASAsG,aAAA,WACA,GAAAlZ,GAAAD,IAEA4V,GAAAgB,OAAA3W,EAAA,mBAAA,IAIA/C,EAAAoc,cAAA/X,OAAAvB,KAAAA,KAAAH,MAAAqD,MAAAlD,KAAAH,MAAAgH,QAQA+O,EAAAgB,OAAA3W,EAAA,oBACA2V,EAAAgB,OAAA3W,EAAA,iBAQAmZ,eAAA,WACA,GAAAnZ,GAAAD,IAEA,IAAA4V,EAAAgB,OAAA3W,EAAA,2BAAA,EAAA,CAIA,IAAA,GAAAzD,GAAA,EAAA+M,EAAAtJ,EAAAY,KAAAC,SAAA/D,OAAAP,EAAA+M,IAAA/M,EACAyD,EAAAe,eAAAxE,GAAAqc,WAAAtX,QAGAqU,GAAAgB,OAAA3W,EAAA,yBAGAiS,OAAA,SAAAR,EAAAmB,GACA,GAAA5S,GAAAD,IAEA,IAAA4V,EAAAgB,OAAA3W,EAAA,mBAAA,EAAA,CAIA,GAAAsZ,GAAAtZ,EAAAiB,QAAAmH,UACAwJ,EAAA,WACA+D,EAAAgB,OAAA3W,EAAA,cACA,IAAAuZ,GAAAD,GAAAA,EAAA1H,UACA2H,IAAAA,EAAA1c,MACA0c,EAAA1c,KAAAmD,GAIA,IAAAsZ,IAAA,SAAA7H,GAAA,IAAAA,GAAA,SAAAA,GAAA,IAAA6H,EAAA7H,UAAA,CACA,GAAArJ,GAAA,GAAAnL,GAAA4U,SACAzJ,GAAA4J,UAAAP,GAAA6H,EAAA7H,UAAA,MACArJ,EAAAsJ,OAAA4H,EAAA5H,OAGAtJ,EAAA6J,OAAA,SAAAS,EAAAC,GACA,GAAA6G,GAAAxa,EAAAya,cAAA9G,EAAAjB,QACAgI,EAAA/G,EAAAZ,YAAAY,EAAAX,SACA2H,EAAAH,EAAAE,EAEAhH,GAAApN,KAAAqU,EAAAD,EAAA/G,EAAAZ,cAIA3J,EAAA8J,oBAAAoH,EAAA3H,WACAvJ,EAAA+J,oBAAAP,EAEA3U,EAAAmV,iBAAAK,aAAAzS,EAAAoI,EAAAqJ,EAAAmB,OAEA5S,GAAAsF,OACAsM,GAGA,OAAA5R,KAGAsF,KAAA,SAAAsU,GACA,GAAA5Z,GAAAD,IAEAC,GAAAmX,QAEA/V,SAAAwY,GAAA,OAAAA,IACAA,EAAA,GAGAjE,EAAAgB,OAAA3W,EAAA,cAAA4Z,OAAA,IAKA5a,EAAA2B,KAAAX,EAAA6Z,MAAA,SAAAC,GACAA,EAAAxU,KAAAtF,EAAA8F,YACA9F,GAEAA,EAAAmN,OACAnN,EAAAmN,MAAA7H,OAGAtF,EAAA+Z,aAAAH,GAGA5Z,EAAAyV,QAAAxP,WAAA2T,GAAAtU,OAEAqQ,EAAAgB,OAAA3W,EAAA,aAAA4Z,MAQAG,aAAA,SAAAH,GACA,GAAA5Z,GAAAD,IAEA4V,GAAAgB,OAAA3W,EAAA,sBAAA4Z,OAAA,IAKA5a,EAAA2B,KAAAX,EAAAY,KAAAC,SAAA,SAAAV,EAAAN,GACAG,EAAAgB,iBAAAnB,IACAG,EAAAe,eAAAlB,GAAA+Y,WAAAtT,KAAAsU,IAEA5Z,GAAA,GAEA2V,EAAAgB,OAAA3W,EAAA,qBAAA4Z,MAKAI,kBAAA,SAAAle,GACA,MAAAmB,GAAAgd,YAAAC,MAAAC,OAAApa,KAAAjE,IAGAse,mBAAA,SAAAte,GACA,MAAAmB,GAAAgd,YAAAC,MAAA3b,MAAAwB,KAAAjE,GAAAue,WAAA,KAGAC,mBAAA,SAAAxe,GACA,MAAAmB,GAAAgd,YAAAC,MAAA,UAAAna,KAAAjE,GAAAue,WAAA,KAGAE,0BAAA,SAAAze,EAAAgC,EAAAmD,GACA,GAAAuZ,GAAAvd,EAAAgd,YAAAC,MAAApc,EACA,OAAA,kBAAA0c,GACAA,EAAAza,KAAAjE,EAAAmF,OAMAwZ,kBAAA,SAAA3e,GACA,MAAAmB,GAAAgd,YAAAC,MAAA/Z,QAAAJ,KAAAjE,GAAAue,WAAA,KAGAtZ,eAAA,SAAAlB,GACA,GAAAG,GAAAD,KACAI,EAAAH,EAAAY,KAAAC,SAAAhB,EACAM,GAAAua,QACAva,EAAAua,SAGA,IAAAza,GAAAE,EAAAua,MAAA1a,EAAA9B,GAaA,OAZA+B,KACAA,EAAAE,EAAAua,MAAA1a,EAAA9B,KACAZ,KAAA,KACAsD,QACAT,QAAA,KACAyY,WAAA,KACAzP,OAAA,KACAvH,QAAA,KACAnB,QAAA,OAIAR,GAGA6L,uBAAA,WAEA,IAAA,GADA4E,GAAA,EACAnU,EAAA,EAAA+M,EAAAvJ,KAAAa,KAAAC,SAAA/D,OAAAP,EAAA+M,IAAA/M,EACAwD,KAAAiB,iBAAAzE,IACAmU,GAGA,OAAAA,IAGA1P,iBAAA,SAAAnB,GACA,GAAAI,GAAAF,KAAAgB,eAAAlB,EAIA,OAAA,iBAAAI,GAAAkJ,QAAAlJ,EAAAkJ,QAAApJ,KAAAa,KAAAC,SAAAhB,GAAAsJ,QAGAwR,eAAA,WACA,MAAA5a,MAAAkB,QAAAuH,eAAAzI,OAGA6a,QAAA,WACA,GAEA3a,GAAA1D,EAAA+M,EAFAtJ,EAAAD,KACAoW,EAAAnW,EAAAJ,MAAAuW,MAMA,KAHAnW,EAAAoX,OAGA7a,EAAA,EAAA+M,EAAAtJ,EAAAY,KAAAC,SAAA/D,OAAAP,EAAA+M,IAAA/M,EACA0D,EAAAD,EAAAe,eAAAxE,GACA0D,EAAA2Y,aACA3Y,EAAA2Y,WAAAgC,UACA3a,EAAA2Y,WAAA,KAIAzC,KACAnW,EAAA6a,eACA7b,EAAAmY,MAAAnX,EAAAJ,OACAgW,EAAAkF,eAAA9a,EAAAJ,MAAAiG,KACA7F,EAAAJ,MAAAuW,OAAA,KACAnW,EAAAJ,MAAAiG,IAAA,MAGA8P,EAAAgB,OAAA3W,EAAA,iBAEA/C,GAAA6Y,UAAA9V,EAAA9B,KAGA6c,cAAA,WACA,MAAAhb,MAAAH,MAAAuW,OAAA6E,UAAAC,MAAAlb,KAAAH,MAAAuW,OAAA+E,YAGAhE,YAAA,WACA,GAAAlX,GAAAD,IACAC,GAAAyV,QAAA,GAAAxY,GAAAke,SACAxO,OAAA3M,EAAAJ,MACAwb,eAAApb,EACAgZ,MAAAhZ,EAAAY,KACA8U,SAAA1V,EAAAiB,QAAA7C,UACA4B,GACAA,EAAAyV,QAAA9V,cAMAkX,WAAA,WACA,GAAA7W,GAAAD,KACAsb,EAAArb,EAAAsb,cACAC,EAAA,WACAvb,EAAAwb,aAAAP,MAAAjb,EAAAkb,WAGAlc,GAAA2B,KAAAX,EAAAiB,QAAAwa,OAAA,SAAAne,GACAsY,EAAA8F,iBAAA1b,EAAA1C,EAAAie,GACAF,EAAA/d,GAAAie,IAOAvb,EAAAiB,QAAA6V,aACAyE,EAAA,WACAvb,EAAA+W,UAGAnB,EAAA8F,iBAAA1b,EAAA,SAAAub,GACAF,EAAAtE,OAAAwE,IAOAV,aAAA,WACA,GAAA7a,GAAAD,KACAsb,EAAArb,EAAAsb,UACAD,WAIArb,GAAAsb,WACAtc,EAAA2B,KAAA0a,EAAA,SAAAE,EAAAje,GACAsY,EAAA+F,oBAAA3b,EAAA1C,EAAAie,OAIAK,iBAAA,SAAAnc,EAAA3B,EAAA+d,GACA,GACArP,GAAAjQ,EAAA+M,EADAkR,EAAAqB,EAAA,gBAAA,kBAGA,KAAAtf,EAAA,EAAA+M,EAAA7J,EAAA3C,OAAAP,EAAA+M,IAAA/M,GACAiQ,EAAA/M,EAAAlD,KAEAwD,KAAAgB,eAAAyL,EAAArK,eAAAyW,WAAA4B,GAAAhO,IAQAgP,aAAA,SAAA1f,GACA,GAAAkE,GAAAD,KACA0V,EAAAzV,EAAAyV,OAEA,IAAAE,EAAAgB,OAAA3W,EAAA,eAAAlE,OAAA,EAAA,CAKAkE,EAAAqW,iBAAA,EACArW,EAAAoZ,iBAAA,IAEA,IAAA0C,GAAA9b,EAAA+b,YAAAjgB,EACAggB,IAAArG,GAAAA,EAAAsG,YAAAjgB,GAEA6Z,EAAAgB,OAAA3W,EAAA,cAAAlE,GAEA,IAAAkgB,GAAAhc,EAAAoZ,gBAgBA,OAfA4C,GAEAhc,EAAAiS,OAAA+J,EAAAvK,SAAAuK,EAAApJ,MACAkJ,IAAA9b,EAAA6S,YAEA7S,EAAAoX,OAIApX,EAAAiS,OAAAjS,EAAAiB,QAAApD,MAAAkb,mBAAA,IAGA/Y,EAAAqW,iBAAA,EACArW,EAAAoZ,iBAAA,KAEApZ,IASA+b,YAAA,SAAAjgB,GACA,GAAAkE,GAAAD,KACAkB,EAAAjB,EAAAiB,YACAgb,EAAAhb,EAAApD,MACAie,GAAA,CAuCA,OArCA9b,GAAAkc,WAAAlc,EAAAkc,eAGA,aAAApgB,EAAAwB,KACA0C,EAAAmc,UAEAnc,EAAAmc,OAAAnc,EAAAua,0BAAAze,EAAAmgB,EAAAne,KAAAme,GAIAA,EAAAG,SAEAH,EAAAG,QAAAvf,KAAAmD,EAAAlE,EAAAugB,OAAArc,EAAAmc,QAGA,YAAArgB,EAAAwB,MAAA,UAAAxB,EAAAwB,MACA2D,EAAAmI,SAEAnI,EAAAmI,QAAAvM,KAAAmD,EAAAlE,EAAAugB,OAAArc,EAAAmc,QAKAnc,EAAAkc,WAAApf,QACAkD,EAAA4b,iBAAA5b,EAAAkc,WAAAD,EAAAne,MAAA,GAIAkC,EAAAmc,OAAArf,QAAAmf,EAAAne,MACAkC,EAAA4b,iBAAA5b,EAAAmc,OAAAF,EAAAne,MAAA,GAGAge,GAAA9c,EAAAsd,YAAAtc,EAAAmc,OAAAnc,EAAAkc,YAGAlc,EAAAkc,WAAAlc,EAAAmc,OAEAL,+BC5uBA,YAEA9e,GAAAJ,QAAA,SAAAK,GAWA,QAAAsf,GAAAC,EAAAjB,GACA,GAAAiB,EAAAC,SAEA,WADAD,GAAAC,SAAApB,UAAAha,KAAAka,EAIAjF,QAAAC,eAAAiG,EAAA,YACAE,cAAA,EACAC,YAAA,EACAhZ,OACA0X,WAAAE,MAIAqB,EAAArH,QAAA,SAAAsH,GACA,GAAArC,GAAA,SAAAqC,EAAAC,OAAA,GAAAC,cAAAF,EAAAhT,MAAA,GACA9G,EAAAyZ,EAAAK,EAEAvG,QAAAC,eAAAiG,EAAAK,GACAH,cAAA,EACAC,YAAA,EACAhZ,MAAA,WACA,GAAAqZ,GAAAC,MAAAnd,UAAA+J,MAAAhN,KAAAqe,WACAgC,EAAAna,EAAAkY,MAAAlb,KAAAid,EAQA,OANAhe,GAAA2B,KAAA6b,EAAAC,SAAApB,UAAA,SAAA8B,GACA,kBAAAA,GAAA3C,IACA2C,EAAA3C,GAAAS,MAAAkC,EAAAH,KAIAE,OAUA,QAAAE,GAAAZ,EAAAjB,GACA,GAAA8B,GAAAb,EAAAC,QACA,IAAAY,EAAA,CAIA,GAAAhC,GAAAgC,EAAAhC,UACA5Z,EAAA4Z,EAAAla,QAAAoa,EACA9Z,MAAA,GACA4Z,EAAAnI,OAAAzR,EAAA,GAGA4Z,EAAAve,OAAA,IAIA8f,EAAArH,QAAA,SAAAsH,SACAL,GAAAK,WAGAL,GAAAC,WAtEA,GAAAzd,GAAA/B,EAAA+B,QAEA4d,GAAA,OAAA,MAAA,QAAA,SAAA,UAwEA3f,GAAAqC,kBAAA,SAAAM,EAAAC,GACAE,KAAAJ,WAAAC,EAAAC,IAGAb,EAAAO,OAAAtC,EAAAqC,kBAAAQ,WAMAmN,mBAAA,KAMAzN,gBAAA,KAEAG,WAAA,SAAAC,EAAAC,GACA,GAAAG,GAAAD,IACAC,GAAAJ,MAAAA,EACAI,EAAAyB,MAAA5B,EACAG,EAAAiK,aACAjK,EAAAsd,eAGAzE,YAAA,SAAAhZ,GACAE,KAAA0B,MAAA5B,GAGAoK,WAAA,WACA,GAAAjK,GAAAD,KACAE,EAAAD,EAAAE,UACAC,EAAAH,EAAAI,YAEA,QAAAH,EAAA2B,UACA3B,EAAA2B,QAAAzB,EAAAyB,SAAA5B,EAAAJ,MAAAqB,QAAAlD,OAAAC,MAAA,GAAAE,IAEA,OAAA+B,EAAAQ,UACAR,EAAAQ,QAAAN,EAAAM,SAAAT,EAAAJ,MAAAqB,QAAAlD,OAAAI,MAAA,GAAAD,KAIAkC,WAAA,WACA,MAAAL,MAAAH,MAAAgB,KAAAC,SAAAd,KAAA0B,QAGAvB,QAAA,WACA,MAAAH,MAAAH,MAAAmB,eAAAhB,KAAA0B,QAGAjB,cAAA,SAAA+c,GACA,MAAAxd,MAAAH,MAAA7B,OAAAwf,IAGAhc,MAAA,WACAxB,KAAAuB,QAAA,IAMAsZ,QAAA,WACA7a,KAAAiZ,OACAoE,EAAArd,KAAAiZ,MAAAjZ,OAIAyd,kBAAA,WACA,GAAAxd,GAAAD,KACAzC,EAAA0C,EAAAiN,kBACA,OAAA3P,IAAA,GAAAA,IACAqP,OAAA3M,EAAAJ,MAAAA,MACAuC,cAAAnC,EAAAyB,SAIAgc,eAAA,SAAAhc,GACA,GAAAzB,GAAAD,KACAzC,EAAA0C,EAAAR,eACA,OAAAlC,IAAA,GAAAA,IACAqP,OAAA3M,EAAAJ,MAAAA,MACAuC,cAAAnC,EAAAyB,MACAW,OAAAX,KAIA6b,YAAA,WACA,GAIA/gB,GAAA+M,EAJAtJ,EAAAD,KACAE,EAAAD,EAAAE,UACAU,EAAAZ,EAAAI,aAAAQ,SACA8E,EAAAzF,EAAAW,IAGA,KAAArE,EAAA,EAAA+M,EAAA1I,EAAA9D,OAAAP,EAAA+M,IAAA/M,EACAmJ,EAAAnJ,GAAAmJ,EAAAnJ,IAAAyD,EAAAyd,eAAAlhB,EAGA0D,GAAAE,QAAAF,EAAAE,SAAAH,EAAAwd,qBAGAE,mBAAA,SAAAjc,GACA,GAAA+K,GAAAzM,KAAA0d,eAAAhc,EACA1B,MAAAG,UAAAU,KAAAsS,OAAAzR,EAAA,EAAA+K,GACAzM,KAAA2B,cAAA8K,EAAA/K,GAAA,IAGAwX,sBAAA,WACA,GAAAjZ,GAAAD,KACAI,EAAAH,EAAAI,aACAQ,EAAAT,EAAAS,OAAAT,EAAAS,QAKAZ,GAAAgZ,QAAApY,IACAZ,EAAAgZ,OAEAoE,EAAApd,EAAAgZ,MAAAhZ,GAGAuc,EAAA3b,EAAAZ,GACAA,EAAAgZ,MAAApY,GAKAZ,EAAA2d,kBAGArc,OAAAtC,EAAAkL,KAEA5E,KAAA,SAAAC,GACA,GACAhJ,GAAAiJ,EADAC,EAAAF,GAAA,EAEAG,EAAA3F,KAAAG,UAAAU,IACA,KAAArE,EAAA,EAAAiJ,EAAAE,EAAA5I,OAAAP,EAAAiJ,IAAAjJ,EACAmJ,EAAAnJ,GAAA0J,WAAAR,GAAAH,QAIAmB,iBAAA,SAAA+F,EAAAoR,GACA,GAAAzd,GAAAJ,KAAAH,MAAAgB,KAAAC,SAAA2L,EAAArK,eACAV,EAAA+K,EAAApK,OACAJ,EAAAwK,EAAAxK,WACA6b,EAAA7e,EAAAoE,yBACAgD,EAAAoG,EAAAjK,MAEA6D,GAAAjD,gBAAAnB,EAAAmB,gBAAAnB,EAAAmB,gBAAA0a,EAAA1d,EAAAgD,gBAAA1B,EAAAmc,EAAAza,iBACAiD,EAAA9C,YAAAtB,EAAAsB,YAAAtB,EAAAsB,YAAAua,EAAA1d,EAAAmD,YAAA7B,EAAAmc,EAAAta,aACA8C,EAAA7C,YAAAvB,EAAAuB,YAAAvB,EAAAuB,YAAAsa,EAAA1d,EAAAoD,YAAA9B,EAAAmc,EAAAra,cAGA4C,cAAA,SAAAqG,GACA,GAAArM,GAAAJ,KAAAH,MAAAgB,KAAAC,SAAA2L,EAAArK,eACAV,EAAA+K,EAAApK,OACAJ,EAAAwK,EAAAxK,WACA6b,EAAA7e,EAAAoE,yBACAkD,EAAAtH,EAAAsH,cACAF,EAAAoG,EAAAjK,MAEA6D,GAAAjD,gBAAAnB,EAAAqE,qBAAArE,EAAAqE,qBAAAwX,EAAA1d,EAAAkG,qBAAA5E,EAAA6E,EAAAF,EAAAjD,kBACAiD,EAAA9C,YAAAtB,EAAAuE,iBAAAvE,EAAAuE,iBAAAsX,EAAA1d,EAAAoG,iBAAA9E,EAAA6E,EAAAF,EAAA9C,cACA8C,EAAA7C,YAAAvB,EAAAwE,iBAAAxE,EAAAwE,iBAAAqX,EAAA1d,EAAAqG,iBAAA/E,EAAA2E,EAAA7C,cAMAoa,eAAA,WACA,GAAA3d,GAAAD,KACAE,EAAAD,EAAAE,UACAU,EAAAZ,EAAAI,aAAAQ,KACAkd,EAAA7d,EAAAW,KAAA9D,OACAihB,EAAAnd,EAAA9D,MAEAihB,GAAAD,EACA7d,EAAAW,KAAAsS,OAAA6K,EAAAD,EAAAC,GACAA,EAAAD,GACA9d,EAAAge,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAAhT,EAAA0F,GACA,IAAA,GAAAnU,GAAA,EAAAA,EAAAmU,IAAAnU,EACAwD,KAAA2d,mBAAA1S,EAAAzO,IAOA0hB,WAAA,WACAle,KAAAie,eAAAje,KAAAK,aAAAQ,KAAA9D,OAAA,EAAAoe,UAAApe,SAMAohB,UAAA,WACAne,KAAAG,UAAAU,KAAAud,OAMAC,YAAA,WACAre,KAAAG,UAAAU,KAAAyd,SAMAC,aAAA,SAAAtT,EAAA0F,GACA3Q,KAAAG,UAAAU,KAAAsS,OAAAlI,EAAA0F,GACA3Q,KAAAie,eAAAhT,EAAAkQ,UAAApe,OAAA,IAMAyhB,cAAA,WACAxe,KAAAie,eAAA,EAAA9C,UAAApe,WAIAG,EAAAqC,kBAAAC,OAAAP,EAAAwf,mCCnTA,YAEAxhB,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,OAEA/B,GAAAwC,YAEAxC,EAAA6U,QAAA,SAAA2M,GACAzf,EAAAO,OAAAQ,KAAA0e,GACA1e,KAAAJ,WAAAsb,MAAAlb,KAAAmb,YAGAlc,EAAAO,OAAAtC,EAAA6U,QAAAhS,WAEAH,WAAA,WACAI,KAAAoJ,QAAA,GAGA3F,MAAA,WACA,GAAAxD,GAAAD,IAKA,OAJAC,GAAA0e,QACA1e,EAAA0e,MAAA1f,EAAA+K,MAAA/J,EAAAuC,SAEAvC,EAAA2e,OAAA3f,EAAA+K,MAAA/J,EAAA0e,OACA1e,GAGAiG,WAAA,SAAAV,GACA,GAAAvF,GAAAD,IAOA,OALAC,GAAA0e,QACA1e,EAAA0e,MAAA1f,EAAA+K,MAAA/J,EAAAuC,SAIA,IAAAgD,GACAvF,EAAA0e,MAAA1e,EAAAuC,OACAvC,EAAA2e,OAAA,KACA3e,IAGAA,EAAA2e,QACA3e,EAAAwD,QAGAxE,EAAA2B,KAAAX,EAAAuC,OAAA,SAAAoB,EAAAkZ,GAEA,GAAA,MAAAA,EAAA,QAGA,IAAA7c,EAAA0e,MAAAE,eAAA/B,GAOA,GAAAlZ,IAAA3D,EAAA0e,MAAA7B,QAGA,IAAA,gBAAAlZ,GACA,IACA,GAAAkb,GAAA7f,EAAA6f,MAAA7e,EAAAuC,OAAAsa,IAAAiC,IAAA9f,EAAA6f,MAAA7e,EAAA2e,OAAA9B,IAAAtX,EACAvF,GAAA0e,MAAA7B,GAAAgC,EAAAE,YACA,MAAAC,GACAhf,EAAA0e,MAAA7B,GAAAlZ,MAGA,IAAA,gBAAAA,GAAA,CACA,GAAAsb,GAAA7d,SAAApB,EAAA2e,OAAA9B,IAAA7W,MAAAhG,EAAA2e,OAAA9B,OAAA,EAAA7c,EAAA2e,OAAA9B,GAAA,CACA7c,GAAA0e,MAAA7B,IAAA7c,EAAAuC,OAAAsa,GAAAoC,GAAA1Z,EAAA0Z,MAGAjf,GAAA0e,MAAA7B,GAAAlZ,MAtBA,gBAAAA,IAAAqC,MAAAhG,EAAA0e,MAAA7B,IAGA7c,EAAA0e,MAAA7B,GAAAlZ,EAFA3D,EAAA0e,MAAA7B,GAAAlZ,EAAA4B,GAuBAvF,GAEAA,IAGAkf,gBAAA,WACA,OACA1c,EAAAzC,KAAAwC,OAAAC,EACAE,EAAA3C,KAAAwC,OAAAG,IAIAyc,SAAA,WACA,MAAAngB,GAAAogB,SAAArf,KAAAwC,OAAAC,IAAAxD,EAAAogB,SAAArf,KAAAwC,OAAAG,MAIAzF,EAAA6U,QAAAvS,OAAAP,EAAAwf,mCC3FA,YAEA,IAAAK,GAAAviB,EAAA,gBAEAU,GAAAJ,QAAA,SAAAK,GA4tBA,QAAAoiB,GAAAC,EAAAC,EAAAC,GACA,GAAAC,EAYA,OAXA,gBAAA,IACAA,EAAAC,SAAAJ,EAAA,IAEAA,EAAAne,QAAA,QAAA,IAEAse,EAAAA,EAAA,IAAAF,EAAAI,WAAAH,KAGAC,EAAAH,EAGAG,EAOA,QAAAG,GAAAjc,GACA,MAAAvC,UAAAuC,GAAA,OAAAA,GAAA,SAAAA,EAQA,QAAAkc,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,SAAAC,YACAR,EAAAG,EAAAH,WACAS,EAAAH,EAAAI,iBAAAP,GAAAC,GACAO,EAAAL,EAAAI,iBAAAV,GAAAI,GACAQ,EAAAX,EAAAQ,GACAI,EAAAZ,EAAAU,GACAG,EAAA7c,OAAA8c,iBAEA,OAAAH,IAAAC,EACAxc,KAAAC,IACAsc,EAAAlB,EAAAe,EAAAN,EAAAE,GAAAS,EACAD,EAAAnB,EAAAiB,EAAAX,EAAAK,GAAAS,GAGA,OAtwBA,GAAAzhB,GAAA/B,EAAA+B,UAGAA,GAAA2B,KAAA,SAAAggB,EAAApH,EAAAqH,EAAAC,GAEA,GAAAtkB,GAAAiJ,CACA,IAAAxG,EAAA4K,QAAA+W,GAEA,GADAnb,EAAAmb,EAAA7jB,OACA+jB,EACA,IAAAtkB,EAAAiJ,EAAA,EAAAjJ,GAAA,EAAAA,IACAgd,EAAA1c,KAAA+jB,EAAAD,EAAApkB,GAAAA,OAGA,KAAAA,EAAA,EAAAA,EAAAiJ,EAAAjJ,IACAgd,EAAA1c,KAAA+jB,EAAAD,EAAApkB,GAAAA,OAGA,IAAA,gBAAAokB,GAAA,CACA,GAAAG,GAAAxK,OAAAwK,KAAAH,EAEA,KADAnb,EAAAsb,EAAAhkB,OACAP,EAAA,EAAAA,EAAAiJ,EAAAjJ,IACAgd,EAAA1c,KAAA+jB,EAAAD,EAAAG,EAAAvkB,IAAAukB,EAAAvkB,MAIAyC,EAAA+K,MAAA,SAAAgX,GACA,GAAAC,KAUA,OATAhiB,GAAA2B,KAAAogB,EAAA,SAAApd,EAAAkZ,GACA7d,EAAA4K,QAAAjG,GACAqd,EAAAnE,GAAAlZ,EAAAkG,MAAA,GAEAmX,EAAAnE,GADA,gBAAAlZ,IAAA,OAAAA,EACA3E,EAAA+K,MAAApG,GAEAA,IAGAqd,GAEAhiB,EAAAO,OAAA,SAAAwD,GAIA,IAAA,GAHAke,GAAA,SAAAtd,EAAAkZ,GACA9Z,EAAA8Z,GAAAlZ,GAEApH,EAAA,EAAA+M,EAAA4R,UAAApe,OAAAP,EAAA+M,EAAA/M,IACAyC,EAAA2B,KAAAua,UAAA3e,GAAA0kB,EAEA,OAAAle,IAGA/D,EAAAmW,YAAA,SAAA+L,GACA,GAAAne,GAAA/D,EAAA+K,MAAAmX,EA2BA,OA1BAliB,GAAA2B,KAAAsc,MAAAnd,UAAA+J,MAAAhN,KAAAqe,UAAA,GAAA,SAAAiG,GACAniB,EAAA2B,KAAAwgB,EAAA,SAAAxd,EAAAkZ,GACA,GAAAuE,GAAAre,EAAA6b,eAAA/B,GACAwE,EAAAD,EAAAre,EAAA8Z,KAEA,YAAAA,EAEA9Z,EAAA8Z,GAAA7d,EAAAsiB,WAAAD,EAAA1d,GACA,UAAAkZ,EAEA9Z,EAAA8Z,GAAA7d,EAAAmW,YAAAkM,EAAApkB,EAAAsb,aAAAgJ,iBAAA5d,EAAArG,MAAAqG,IACAyd,GACA,gBAAAC,IACAriB,EAAA4K,QAAAyX,IACA,OAAAA,GACA,gBAAA1d,IACA3E,EAAA4K,QAAAjG,GAKAZ,EAAA8Z,GAAAlZ,EAHAZ,EAAA8Z,GAAA7d,EAAAmW,YAAAkM,EAAA1d,OAQAZ,GAEA/D,EAAAsiB,WAAA,SAAAJ,EAAAC,GACA,GAAApe,GAAA/D,EAAA+K,MAAAmX,EAoCA,OAlCAliB,GAAA2B,KAAAwgB,EAAA,SAAAxd,EAAAkZ,GACA,UAAAA,GAAA,UAAAA,EAEA9Z,EAAA6b,eAAA/B,GACA7d,EAAA2B,KAAAgD,EAAA,SAAA6d,EAAA/f,GACA,GAAAggB,GAAAziB,EAAA6N,kBAAA2U,EAAAlkB,KAAA,UAAAuf,EAAA,WAAA,UACA6E,EAAAzkB,EAAAsb,aAAAgJ,iBAAAE,EACAhgB,IAAAsB,EAAA8Z,GAAA/f,SAAAiG,EAAA8Z,GAAApb,GAAAnE,KACAyF,EAAA8Z,GAAAxb,KAAArC,EAAAmW,YAAAuM,EAAAF,IACAA,EAAAlkB,MAAAkkB,EAAAlkB,OAAAyF,EAAA8Z,GAAApb,GAAAnE,KAEAyF,EAAA8Z,GAAApb,GAAAzC,EAAAmW,YAAApS,EAAA8Z,GAAApb,GAAAigB,EAAAF,GAGAze,EAAA8Z,GAAApb,GAAAzC,EAAAmW,YAAApS,EAAA8Z,GAAApb,GAAA+f,MAIAze,EAAA8Z,MACA7d,EAAA2B,KAAAgD,EAAA,SAAA6d,GACA,GAAAC,GAAAziB,EAAA6N,kBAAA2U,EAAAlkB,KAAA,UAAAuf,EAAA,WAAA,SACA9Z,GAAA8Z,GAAAxb,KAAArC,EAAAmW,YAAAlY,EAAAsb,aAAAgJ,iBAAAE,GAAAD,OAGAze,EAAA6b,eAAA/B,IAAA,gBAAA9Z,GAAA8Z,IAAA,OAAA9Z,EAAA8Z,IAAA,gBAAAlZ,GAEAZ,EAAA8Z,GAAA7d,EAAAmW,YAAApS,EAAA8Z,GAAAlZ,GAIAZ,EAAA8Z,GAAAlZ,IAIAZ,GAEA/D,EAAAoE,yBAAA,SAAAO,EAAAlC,EAAAkgB,GACA,MAAAvgB,UAAAuC,GAAA,OAAAA,EACAge,EAGA3iB,EAAA4K,QAAAjG,GACAlC,EAAAkC,EAAA7G,OAAA6G,EAAAlC,GAAAkgB,EAGAhe,GAEA3E,EAAA6N,kBAAA,SAAAlJ,EAAAge,GACA,MAAAvgB,UAAAuC,EAAAge,EAAAhe,GAEA3E,EAAAmC,QAAA8b,MAAAnd,UAAAqB,QACA,SAAAqb,EAAAxG,GACA,MAAAwG,GAAArb,QAAA6U,IAEA,SAAAwG,EAAAxG,GACA,IAAA,GAAAzZ,GAAA,EAAA+M,EAAAkT,EAAA1f,OAAAP,EAAA+M,IAAA/M,EACA,GAAAigB,EAAAjgB,KAAAyZ,EACA,MAAAzZ,EAGA,QAAA,GAEAyC,EAAA4iB,MAAA,SAAAC,EAAAC,GACA,GAAA9iB,EAAA4K,QAAAiY,IAAA5E,MAAAnd,UAAAyP,OACA,MAAAsS,GAAAtS,OAAAuS,EAEA,IAAAC,KAQA,OANA/iB,GAAA2B,KAAAkhB,EAAA,SAAA7L,GACA8L,EAAA9L,IACA+L,EAAA1gB,KAAA2U,KAIA+L,GAEA/iB,EAAAgU,UAAAiK,MAAAnd,UAAAkT,UACA,SAAAwJ,EAAAjD,EAAAyI,GACA,MAAAxF,GAAAxJ,UAAAuG,EAAAyI,IAEA,SAAAxF,EAAAjD,EAAAyI,GACAA,EAAA5gB,SAAA4gB,EAAAxF,EAAAwF,CACA,KAAA,GAAAzlB,GAAA,EAAA+M,EAAAkT,EAAA1f,OAAAP,EAAA+M,IAAA/M,EACA,GAAAgd,EAAA1c,KAAAmlB,EAAAxF,EAAAjgB,GAAAA,EAAAigB,GACA,MAAAjgB,EAGA,QAAA,GAEAyC,EAAAijB,cAAA,SAAAC,EAAAJ,EAAAK,GAEA/gB,SAAA+gB,GAAA,OAAAA,IACAA,GAAA,EAEA,KAAA,GAAA5lB,GAAA4lB,EAAA,EAAA5lB,EAAA2lB,EAAAplB,OAAAP,IAAA,CACA,GAAA6lB,GAAAF,EAAA3lB,EACA,IAAAulB,EAAAM,GACA,MAAAA,KAIApjB,EAAAqjB,kBAAA,SAAAH,EAAAJ,EAAAK,GAEA/gB,SAAA+gB,GAAA,OAAAA,IACAA,EAAAD,EAAAplB,OAEA,KAAA,GAAAP,GAAA4lB,EAAA,EAAA5lB,GAAA,EAAAA,IAAA,CACA,GAAA6lB,GAAAF,EAAA3lB,EACA,IAAAulB,EAAAM,GACA,MAAAA,KAIApjB,EAAAwf,SAAA,SAAA8D,GAEA,GAAAtiB,GAAAD,KACAwiB,EAAAD,GAAAA,EAAA1D,eAAA,eAAA0D,EAAAE,YAAA,WACA,MAAAxiB,GAAAib,MAAAlb,KAAAmb,YAGAuH,EAAA,WACA1iB,KAAAyiB,YAAAD,EAaA,OAXAE,GAAA3iB,UAAAE,EAAAF,UACAyiB,EAAAziB,UAAA,GAAA2iB,GAEAF,EAAAhjB,OAAAP,EAAAwf,SAEA8D,GACAtjB,EAAAO,OAAAgjB,EAAAziB,UAAAwiB,GAGAC,EAAAG,UAAA1iB,EAAAF,UAEAyiB,GAEAvjB,EAAAkL,KAAA,aACAlL,EAAAoX,IAAA,WACA,GAAAlY,GAAA,CACA,OAAA,YACA,MAAAA,SAIAc,EAAAogB,SAAA,SAAApjB,GACA,OAAAgK,MAAA2c,WAAA3mB,KAAA4mB,SAAA5mB,IAEAgD,EAAA6jB,aAAA,SAAArgB,EAAAE,EAAAogB,GACA,MAAA9e,MAAAyI,IAAAjK,EAAAE,GAAAogB,GAEA9jB,EAAA+jB,YAAA,SAAAvgB,EAAAsgB,GACA,GAAAE,GAAAhf,KAAAif,MAAAzgB,EACA,OAAAwgB,GAAAF,EAAAtgB,GAAAwgB,EAAAF,EAAAtgB,GAEAxD,EAAAkF,IAAA,SAAAsY,GACA,MAAAA,GAAA0G,OAAA,SAAAhf,EAAAP,GACA,MAAAqC,OAAArC,GAGAO,EAFAF,KAAAE,IAAAA,EAAAP,IAGAC,OAAAuf,oBAEAnkB,EAAAiF,IAAA,SAAAuY,GACA,MAAAA,GAAA0G,OAAA,SAAAjf,EAAAN,GACA,MAAAqC,OAAArC,GAGAM,EAFAD,KAAAC,IAAAA,EAAAN,IAGAC,OAAA8c,oBAEA1hB,EAAAokB,KAAApf,KAAAof,KACA,SAAA5gB,GACA,MAAAwB,MAAAof,KAAA5gB,IAEA,SAAAA,GAEA,MADAA,IAAAA,EACA,IAAAA,GAAAwD,MAAAxD,GACAA,EAEAA,EAAA,EAAA,GAAA,GAEAxD,EAAAqkB,MAAArf,KAAAqf,MACA,SAAA7gB,GACA,MAAAwB,MAAAqf,MAAA7gB,IAEA,SAAAA,GACA,MAAAwB,MAAAsf,IAAA9gB,GAAAwB,KAAAuf,MAEAvkB,EAAAwkB,UAAA,SAAAC,GACA,MAAAA,IAAAzf,KAAAyF,GAAA,MAEAzK,EAAA0kB,UAAA,SAAAC,GACA,MAAAA,IAAA,IAAA3f,KAAAyF,KAGAzK,EAAA4kB,kBAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAthB,EAAAqhB,EAAArhB,EACAwhB,EAAAF,EAAAphB,EAAAmhB,EAAAnhB,EACAuhB,EAAAjgB,KAAAmQ,KAAA4P,EAAAA,EAAAC,EAAAA,GAEAE,EAAAlgB,KAAAmgB,MAAAH,EAAAD,EAMA,OAJAG,IAAA,GAAAlgB,KAAAyF,KACAya,GAAA,EAAAlgB,KAAAyF,KAIAya,MAAAA,EACAlT,SAAAiT,IAGAjlB,EAAAolB,sBAAA,SAAAC,EAAAC,GACA,MAAAtgB,MAAAmQ,KAAAnQ,KAAAugB,IAAAD,EAAA9hB,EAAA6hB,EAAA7hB,EAAA,GAAAwB,KAAAugB,IAAAD,EAAA5hB,EAAA2hB,EAAA3hB,EAAA,KAEA1D,EAAAwlB,WAAA,SAAAC,GACA,MAAAA,GAAA,GAAA,EAAA,EAAA,IAEAzlB,EAAAyQ,YAAA,SAAAiV,EAAAC,EAAAC,EAAA7oB,GAMA,GAAA8T,GAAA6U,EAAA1c,KAAA2c,EAAAD,EACAG,EAAAF,EACA3U,EAAA4U,EAAA5c,KAAA2c,EAAAC,EAEAE,EAAA9gB,KAAAmQ,KAAAnQ,KAAAugB,IAAAM,EAAAriB,EAAAqN,EAAArN,EAAA,GAAAwB,KAAAugB,IAAAM,EAAAniB,EAAAmN,EAAAnN,EAAA,IACAqiB,EAAA/gB,KAAAmQ,KAAAnQ,KAAAugB,IAAAvU,EAAAxN,EAAAqiB,EAAAriB,EAAA,GAAAwB,KAAAugB,IAAAvU,EAAAtN,EAAAmiB,EAAAniB,EAAA,IAEAsiB,EAAAF,GAAAA,EAAAC,GACAE,EAAAF,GAAAD,EAAAC,EAGAC,GAAAhf,MAAAgf,GAAA,EAAAA,EACAC,EAAAjf,MAAAif,GAAA,EAAAA,CAEA,IAAAC,GAAAnpB,EAAAipB,EACAG,EAAAppB,EAAAkpB,CAEA,QACApV,UACArN,EAAAqiB,EAAAriB,EAAA0iB,GAAAlV,EAAAxN,EAAAqN,EAAArN,GACAE,EAAAmiB,EAAAniB,EAAAwiB,GAAAlV,EAAAtN,EAAAmN,EAAAnN,IAEAsN,MACAxN,EAAAqiB,EAAAriB,EAAA2iB,GAAAnV,EAAAxN,EAAAqN,EAAArN,GACAE,EAAAmiB,EAAAniB,EAAAyiB,GAAAnV,EAAAtN,EAAAmN,EAAAnN,MAIA1D,EAAAomB,QAAAxhB,OAAAwhB,SAAA,MACApmB,EAAAwQ,oBAAA,SAAAjI,GAMA,GAUAhL,GAAA8oB,EAAAC,EAAAC,EAVAC,GAAAje,OAAAsB,IAAA,SAAArB,GACA,OACApB,MAAAoB,EAAAjF,OACAkjB,OAAA,EACAC,GAAA,KAKAC,EAAAH,EAAA1oB,MAEA,KAAAP,EAAA,EAAAA,EAAAopB,IAAAppB,EAEA,GADA+oB,EAAAE,EAAAjpB,IACA+oB,EAAAlf,MAAA4B,KAAA,CAMA,GAFAqd,EAAA9oB,EAAA,EAAAipB,EAAAjpB,EAAA,GAAA,MACAgpB,EAAAhpB,EAAAopB,EAAA,EAAAH,EAAAjpB,EAAA,GAAA,QACAgpB,EAAAnf,MAAA4B,KAAA,CACA,GAAA4d,GAAAL,EAAAnf,MAAA5D,EAAA8iB,EAAAlf,MAAA5D,CAGA8iB,GAAAG,OAAA,IAAAG,GAAAL,EAAAnf,MAAA1D,EAAA4iB,EAAAlf,MAAA1D,GAAAkjB,EAAA,GAGAP,GAAAA,EAAAjf,MAAA4B,KACAsd,EAAAI,GAAAJ,EAAAG,QACAF,GAAAA,EAAAnf,MAAA4B,KACAsd,EAAAI,GAAAL,EAAAI,OACA1lB,KAAAqjB,KAAAiC,EAAAI,UAAA1lB,KAAAqjB,KAAAkC,EAAAG,QACAH,EAAAI,GAAA,EAEAJ,EAAAI,IAAAL,EAAAI,OAAAH,EAAAG,QAAA,EAKA,GAAAI,GAAAC,EAAAC,EAAAC,CACA,KAAAzpB,EAAA,EAAAA,EAAAopB,EAAA,IAAAppB,EACA+oB,EAAAE,EAAAjpB,GACAgpB,EAAAC,EAAAjpB,EAAA,GACA+oB,EAAAlf,MAAA4B,MAAAud,EAAAnf,MAAA4B,OAIAhJ,EAAA6jB,aAAAyC,EAAAG,OAAA,EAAA1lB,KAAAqlB,SACAE,EAAAI,GAAAH,EAAAG,GAAA,GAIAG,EAAAP,EAAAI,GAAAJ,EAAAG,OACAK,EAAAP,EAAAG,GAAAJ,EAAAG,QACAO,EAAAhiB,KAAAugB,IAAAsB,EAAA,GAAA7hB,KAAAugB,IAAAuB,EAAA,KACA,IAIAC,EAAA,EAAA/hB,KAAAmQ,KAAA6R,GACAV,EAAAI,GAAAG,EAAAE,EAAAT,EAAAG,OACAF,EAAAG,GAAAI,EAAAC,EAAAT,EAAAG,SAIA,IAAAQ,EACA,KAAA1pB,EAAA,EAAAA,EAAAopB,IAAAppB,EACA+oB,EAAAE,EAAAjpB,GACA+oB,EAAAlf,MAAA4B,OAIAqd,EAAA9oB,EAAA,EAAAipB,EAAAjpB,EAAA,GAAA,KACAgpB,EAAAhpB,EAAAopB,EAAA,EAAAH,EAAAjpB,EAAA,GAAA,KACA8oB,IAAAA,EAAAjf,MAAA4B,OACAie,GAAAX,EAAAlf,MAAA5D,EAAA6iB,EAAAjf,MAAA5D,GAAA,EACA8iB,EAAAlf,MAAAwJ,sBAAA0V,EAAAlf,MAAA5D,EAAAyjB,EACAX,EAAAlf,MAAA0J,sBAAAwV,EAAAlf,MAAA1D,EAAAujB,EAAAX,EAAAI,IAEAH,IAAAA,EAAAnf,MAAA4B,OACAie,GAAAV,EAAAnf,MAAA5D,EAAA8iB,EAAAlf,MAAA5D,GAAA,EACA8iB,EAAAlf,MAAA2J,kBAAAuV,EAAAlf,MAAA5D,EAAAyjB,EACAX,EAAAlf,MAAA6J,kBAAAqV,EAAAlf,MAAA1D,EAAAujB,EAAAX,EAAAI,MAIA1mB,EAAA2Q,SAAA,SAAAkS,EAAApgB,EAAAykB,GACA,MAAAA,GACAzkB,GAAAogB,EAAA/kB,OAAA,EAAA+kB,EAAA,GAAAA,EAAApgB,EAAA,GAEAA,GAAAogB,EAAA/kB,OAAA,EAAA+kB,EAAAA,EAAA/kB,OAAA,GAAA+kB,EAAApgB,EAAA,IAEAzC,EAAA0Q,aAAA,SAAAmS,EAAApgB,EAAAykB,GACA,MAAAA,GACAzkB,GAAA,EAAAogB,EAAAA,EAAA/kB,OAAA,GAAA+kB,EAAApgB,EAAA,GAEAA,GAAA,EAAAogB,EAAA,GAAAA,EAAApgB,EAAA,IAGAzC,EAAAmnB,QAAA,SAAAC,EAAAnD,GACA,GAAAoD,GAAAriB,KAAAyP,MAAAzU,EAAAqkB,MAAA+C,IACAE,EAAAF,EAAApiB,KAAAugB,IAAA,GAAA8B,EAuBA,QApBApD,EACAqD,EAAA,IACA,EACAA,EAAA,EACA,EACAA,EAAA,EACA,EAEA,GAEAA,GAAA,EACA,EACAA,GAAA,EACA,EACAA,GAAA,EACA,EAEA,IAGAtiB,KAAAugB,IAAA,GAAA8B,GAIA,IAAA5M,GAAAza,EAAAya,eACA8M,OAAA,SAAAxqB,GACA,MAAAA,IAEAyqB,WAAA,SAAAzqB,GACA,MAAAA,GAAAA,GAEA0qB,YAAA,SAAA1qB,GACA,OAAA,EAAAA,GAAAA,EAAA,IAEA2qB,cAAA,SAAA3qB,GACA,OAAAA,GAAA,IAAA,EACA,GAAAA,EAAAA,GAEA,MAAAA,GAAAA,EAAA,GAAA,IAEA4qB,YAAA,SAAA5qB,GACA,MAAAA,GAAAA,EAAAA,GAEA6qB,aAAA,SAAA7qB,GACA,MAAA,KAAAA,EAAAA,EAAA,EAAA,GAAAA,EAAAA,EAAA,IAEA8qB,eAAA,SAAA9qB,GACA,OAAAA,GAAA,IAAA,EACA,GAAAA,EAAAA,EAAAA,EAEA,KAAAA,GAAA,GAAAA,EAAAA,EAAA,IAEA+qB,YAAA,SAAA/qB,GACA,MAAAA,GAAAA,EAAAA,EAAAA,GAEAgrB,aAAA,SAAAhrB,GACA,OAAA,IAAAA,EAAAA,EAAA,EAAA,GAAAA,EAAAA,EAAAA,EAAA,IAEAirB,eAAA,SAAAjrB,GACA,OAAAA,GAAA,IAAA,EACA,GAAAA,EAAAA,EAAAA,EAAAA,GAEA,KAAAA,GAAA,GAAAA,EAAAA,EAAAA,EAAA,IAEAkrB,YAAA,SAAAlrB,GACA,MAAA,IAAAA,GAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAEAmrB,aAAA,SAAAnrB,GACA,MAAA,KAAAA,EAAAA,EAAA,EAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAA,IAEAorB,eAAA,SAAAprB,GACA,OAAAA,GAAA,IAAA,EACA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAEA,KAAAA,GAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAA,IAEAqrB,WAAA,SAAArrB,GACA,OAAA,EAAAiI,KAAAiH,IAAAlP,EAAA,GAAAiI,KAAAyF,GAAA,IAAA,GAEA4d,YAAA,SAAAtrB,GACA,MAAA,GAAAiI,KAAAkH,IAAAnP,EAAA,GAAAiI,KAAAyF,GAAA,KAEA6d,cAAA,SAAAvrB,GACA,OAAA,IAAAiI,KAAAiH,IAAAjH,KAAAyF,GAAA1N,EAAA,GAAA,IAEAwrB,WAAA,SAAAxrB,GACA,MAAA,KAAAA,EAAA,EAAA,EAAAiI,KAAAugB,IAAA,EAAA,IAAAxoB,EAAA,EAAA,KAEAyrB,YAAA,SAAAzrB,GACA,MAAA,KAAAA,EAAA,EAAA,GAAA,EAAAiI,KAAAugB,IAAA,GAAA,GAAAxoB,EAAA,KAEA0rB,cAAA,SAAA1rB,GACA,MAAA,KAAAA,EACA,EAEA,IAAAA,EACA,GAEAA,GAAA,IAAA,EACA,GAAAiI,KAAAugB,IAAA,EAAA,IAAAxoB,EAAA,IAEA,IAAA,EAAAiI,KAAAugB,IAAA,GAAA,KAAAxoB,KAEA2rB,WAAA,SAAA3rB,GACA,MAAAA,IAAA,EACAA,GAEA,GAAAiI,KAAAmQ,KAAA,GAAApY,GAAA,GAAAA,GAAA,IAEA4rB,YAAA,SAAA5rB,GACA,MAAA,GAAAiI,KAAAmQ,KAAA,GAAApY,EAAAA,EAAA,EAAA,GAAAA,IAEA6rB,cAAA,SAAA7rB,GACA,OAAAA,GAAA,IAAA,GACA,IAAAiI,KAAAmQ,KAAA,EAAApY,EAAAA,GAAA,GAEA,IAAAiI,KAAAmQ,KAAA,GAAApY,GAAA,GAAAA,GAAA,IAEA8rB,cAAA,SAAA9rB,GACA,GAAAG,GAAA,QACA4rB,EAAA,EACAzrB,EAAA,CACA,OAAA,KAAAN,EACA,EAEA,IAAAA,GAAA,GACA,GAEA+rB,IACAA,EAAA,IAEAzrB,EAAA2H,KAAAyI,IAAA,IACApQ,EAAA,EACAH,EAAA4rB,EAAA,GAEA5rB,EAAA4rB,GAAA,EAAA9jB,KAAAyF,IAAAzF,KAAA+jB,KAAA,EAAA1rB,KAEAA,EAAA2H,KAAAugB,IAAA,EAAA,IAAAxoB,GAAA,IAAAiI,KAAAkH,KAAA,EAAAnP,EAAAG,IAAA,EAAA8H,KAAAyF,IAAAqe,MAEAE,eAAA,SAAAjsB,GACA,GAAAG,GAAA,QACA4rB,EAAA,EACAzrB,EAAA,CACA,OAAA,KAAAN,EACA,EAEA,IAAAA,GAAA,GACA,GAEA+rB,IACAA,EAAA,IAEAzrB,EAAA2H,KAAAyI,IAAA,IACApQ,EAAA,EACAH,EAAA4rB,EAAA,GAEA5rB,EAAA4rB,GAAA,EAAA9jB,KAAAyF,IAAAzF,KAAA+jB,KAAA,EAAA1rB,GAEAA,EAAA2H,KAAAugB,IAAA,GAAA,GAAAxoB,GAAAiI,KAAAkH,KAAA,EAAAnP,EAAAG,IAAA,EAAA8H,KAAAyF,IAAAqe,GAAA,IAEAG,iBAAA,SAAAlsB,GACA,GAAAG,GAAA,QACA4rB,EAAA,EACAzrB,EAAA,CACA,OAAA,KAAAN,EACA,EAEA,IAAAA,GAAA,IACA,GAEA+rB,IACAA,EAAA,GAAA,IAAA,GAEAzrB,EAAA2H,KAAAyI,IAAA,IACApQ,EAAA,EACAH,EAAA4rB,EAAA,GAEA5rB,EAAA4rB,GAAA,EAAA9jB,KAAAyF,IAAAzF,KAAA+jB,KAAA,EAAA1rB,GAEAN,EAAA,GACA,IAAAM,EAAA2H,KAAAugB,IAAA,EAAA,IAAAxoB,GAAA,IAAAiI,KAAAkH,KAAA,EAAAnP,EAAAG,IAAA,EAAA8H,KAAAyF,IAAAqe,IAEAzrB,EAAA2H,KAAAugB,IAAA,GAAA,IAAAxoB,GAAA,IAAAiI,KAAAkH,KAAA,EAAAnP,EAAAG,IAAA,EAAA8H,KAAAyF,IAAAqe,GAAA,GAAA,IAEAI,WAAA,SAAAnsB,GACA,GAAAG,GAAA,OACA,OAAA,IAAAH,GAAA,GAAAA,IAAAG,EAAA,GAAAH,EAAAG,IAEAisB,YAAA,SAAApsB,GACA,GAAAG,GAAA,OACA,OAAA,KAAAH,EAAAA,EAAA,EAAA,GAAAA,IAAAG,EAAA,GAAAH,EAAAG,GAAA,IAEAksB,cAAA,SAAArsB,GACA,GAAAG,GAAA,OACA,QAAAH,GAAA,IAAA,EACAA,EAAAA,IAAA,GAAAG,GAAA,QAAAH,EAAAG,GAAA,GAEA,KAAAH,GAAA,GAAAA,IAAA,GAAAG,GAAA,QAAAH,EAAAG,GAAA,IAEAmsB,aAAA,SAAAtsB,GACA,MAAA,GAAA0d,EAAA6O,cAAA,EAAAvsB,IAEAusB,cAAA,SAAAvsB,GACA,OAAAA,GAAA,GAAA,EAAA,KACA,OAAAA,EAAAA,EAAA,EACAA,EAAA,EAAA,KACA,GAAA,QAAAA,GAAA,IAAA,MAAAA,EAAA,KACAA,EAAA,IAAA,KACA,GAAA,QAAAA,GAAA,KAAA,MAAAA,EAAA,OAEA,GAAA,QAAAA,GAAA,MAAA,MAAAA,EAAA,UAEAwsB,gBAAA,SAAAxsB,GACA,MAAAA,GAAA,GACA,GAAA0d,EAAA4O,aAAA,EAAAtsB,GAEA,GAAA0d,EAAA6O,cAAA,EAAAvsB,EAAA,GAAA,IAIAiD,GAAAmU,iBAAA,WACA,MAAAjW,QAAA4V,uBACA5V,OAAAsrB,6BACAtrB,OAAAurB,0BACAvrB,OAAAwrB,wBACAxrB,OAAAyrB,yBACA,SAAApP,GACA,MAAArc,QAAA0rB,WAAArP,EAAA,IAAA,QAIAva,EAAA6pB,oBAAA,SAAAC,EAAAlpB,GACA,GAAAmpB,GAAAC,EACAltB,EAAAgtB,EAAAG,eAAAH,EACA3S,EAAA2S,EAAAI,eAAAJ,EAAAK,WACAC,EAAAjT,EAAAkT,wBAEAC,EAAAxtB,EAAAwtB,OACAA,IAAAA,EAAAxsB,OAAA,GACAisB,EAAAO,EAAA,GAAAC,QACAP,EAAAM,EAAA,GAAAE,UAGAT,EAAAjtB,EAAAytB,QACAP,EAAAltB,EAAA0tB,QAMA,IAAAC,GAAA9G,WAAA3jB,EAAA0qB,SAAAvT,EAAA,iBACAwT,EAAAhH,WAAA3jB,EAAA0qB,SAAAvT,EAAA,gBACAyT,EAAAjH,WAAA3jB,EAAA0qB,SAAAvT,EAAA,kBACA0T,EAAAlH,WAAA3jB,EAAA0qB,SAAAvT,EAAA,mBACAlT,EAAAmmB,EAAA7e,MAAA6e,EAAA5e,KAAAif,EAAAG,EACAhjB,EAAAwiB,EAAA1e,OAAA0e,EAAAze,IAAAgf,EAAAE,CAOA,OAHAd,GAAA/kB,KAAAif,OAAA8F,EAAAK,EAAA5e,KAAAif,GAAA,EAAAtT,EAAAlT,MAAArD,EAAAkqB,yBACAd,EAAAhlB,KAAAif,OAAA+F,EAAAI,EAAAze,IAAAgf,GAAA,EAAAxT,EAAAvP,OAAAhH,EAAAkqB,0BAGAtnB,EAAAumB,EACArmB,EAAAsmB,IAIAhqB,EAAA+qB,SAAA,SAAAxK,EAAAyK,EAAAxP,GACA+E,EAAA7D,iBACA6D,EAAA7D,iBAAAsO,EAAAxP,GACA+E,EAAA0K,YACA1K,EAAA0K,YAAA,KAAAD,EAAAxP,GAEA+E,EAAA,KAAAyK,GAAAxP,GAGAxb,EAAAkrB,YAAA,SAAA3K,EAAAyK,EAAAG,GACA5K,EAAA5D,oBACA4D,EAAA5D,oBAAAqO,EAAAG,GAAA,GACA5K,EAAA6K,YACA7K,EAAA6K,YAAA,KAAAJ,EAAAG,GAEA5K,EAAA,KAAAyK,GAAAhrB,EAAAkL,MAoDAlL,EAAAqrB,mBAAA,SAAAvK,GACA,MAAAD,GAAAC,EAAA,YAAA,gBAGA9gB,EAAAsrB,oBAAA,SAAAxK,GACA,MAAAD,GAAAC,EAAA,aAAA,iBAEA9gB,EAAAwY,gBAAA,SAAAsI,GACA,GAAAyK,GAAAzK,EAAAH,WACA8J,EAAA/J,SAAA1gB,EAAA0qB,SAAAa,EAAA,gBAAA,IACAX,EAAAlK,SAAA1gB,EAAA0qB,SAAAa,EAAA,iBAAA,IACAC,EAAAD,EAAAE,YAAAhB,EAAAG,EACAc,EAAA1rB,EAAAqrB,mBAAAvK,EACA,OAAA9Z,OAAA0kB,GAAAF,EAAAxmB,KAAAC,IAAAumB,EAAAE,IAEA1rB,EAAA0Y,iBAAA,SAAAoI,GACA,GAAAyK,GAAAzK,EAAAH,WACAgK,EAAAjK,SAAA1gB,EAAA0qB,SAAAa,EAAA,eAAA,IACAV,EAAAnK,SAAA1gB,EAAA0qB,SAAAa,EAAA,kBAAA,IACAI,EAAAJ,EAAAK,aAAAjB,EAAAE,EACAgB,EAAA7rB,EAAAsrB,oBAAAxK,EACA,OAAA9Z,OAAA6kB,GAAAF,EAAA3mB,KAAAC,IAAA0mB,EAAAE,IAEA7rB,EAAA0qB,SAAA,SAAAoB,EAAAC,GACA,MAAAD,GAAAE,aACAF,EAAAE,aAAAD,GACA7K,SAAAC,YAAAE,iBAAAyK,EAAA,MAAAG,iBAAAF,IAEA/rB,EAAA4X,YAAA,SAAAhX,GACA,GAAAsrB,GAAAtrB,EAAAkqB,wBAAA5sB,OAAAiuB,kBAAA,CACA,IAAA,IAAAD,EAAA,CAIA,GAAA/U,GAAAvW,EAAAuW,OACAvP,EAAAhH,EAAAgH,OACA3D,EAAArD,EAAAqD,KAEAkT,GAAAvP,OAAAA,EAAAskB,EACA/U,EAAAlT,MAAAA,EAAAioB,EACAtrB,EAAAiG,IAAAsH,MAAA+d,EAAAA,GAKA/U,EAAAwB,MAAA/Q,OAAAA,EAAA,KACAuP,EAAAwB,MAAA1U,MAAAA,EAAA,OAGAjE,EAAAmY,MAAA,SAAAvX,GACAA,EAAAiG,IAAAulB,UAAA,EAAA,EAAAxrB,EAAAqD,MAAArD,EAAAgH,SAEA5H,EAAAqsB,WAAA,SAAAC,EAAAC,EAAAC,GACA,MAAAD,GAAA,IAAAD,EAAA,MAAAE,GAEAxsB,EAAAysB,YAAA,SAAA5lB,EAAA6lB,EAAAC,EAAAC,GACAA,EAAAA,KACA,IAAAhrB,GAAAgrB,EAAAhrB,KAAAgrB,EAAAhrB,SACAirB,EAAAD,EAAAE,eAAAF,EAAAE,kBAEAF,GAAAF,OAAAA,IACA9qB,EAAAgrB,EAAAhrB,QACAirB,EAAAD,EAAAE,kBACAF,EAAAF,KAAAA,GAGA7lB,EAAA6lB,KAAAA,CACA,IAAAK,GAAA,CACA/sB,GAAA2B,KAAAgrB,EAAA,SAAAK,GAEA5qB,SAAA4qB,GAAA,OAAAA,GAAAhtB,EAAA4K,QAAAoiB,MAAA,EACAD,EAAA/sB,EAAAitB,YAAApmB,EAAAjF,EAAAirB,EAAAE,EAAAC,GACAhtB,EAAA4K,QAAAoiB,IAGAhtB,EAAA2B,KAAAqrB,EAAA,SAAAE,GAEA9qB,SAAA8qB,GAAA,OAAAA,GAAAltB,EAAA4K,QAAAsiB,KACAH,EAAA/sB,EAAAitB,YAAApmB,EAAAjF,EAAAirB,EAAAE,EAAAG,OAMA,IAAAC,GAAAN,EAAA/uB,OAAA,CACA,IAAAqvB,EAAAR,EAAA7uB,OAAA,CACA,IAAA,GAAAP,GAAA,EAAAA,EAAA4vB,EAAA5vB,UACAqE,GAAAirB,EAAAtvB,GAEAsvB,GAAA3Y,OAAA,EAAAiZ,GAEA,MAAAJ,IAEA/sB,EAAAitB,YAAA,SAAApmB,EAAAjF,EAAAirB,EAAAE,EAAAK,GACA,GAAAC,GAAAzrB,EAAAwrB,EAQA,OAPAC,KACAA,EAAAzrB,EAAAwrB,GAAAvmB,EAAAomB,YAAAG,GAAAnpB,MACA4oB,EAAAxqB,KAAA+qB,IAEAC,EAAAN,IACAA,EAAAM,GAEAN,GAEA/sB,EAAAstB,mBAAA,SAAAX,GACA,GAAAY,GAAA,CAQA,OAPAvtB,GAAA2B,KAAAgrB,EAAA,SAAAK,GACAhtB,EAAA4K,QAAAoiB,IACAA,EAAAlvB,OAAAyvB,IACAA,EAAAP,EAAAlvB,UAIAyvB,GAEAvtB,EAAA4V,qBAAA,SAAA/O,EAAArD,EAAAE,EAAAO,EAAA2D,EAAAiB,GACAhC,EAAAoO,YACApO,EAAAuO,OAAA5R,EAAAqF,EAAAnF,GACAmD,EAAAwO,OAAA7R,EAAAS,EAAA4E,EAAAnF,GACAmD,EAAA2mB,iBAAAhqB,EAAAS,EAAAP,EAAAF,EAAAS,EAAAP,EAAAmF,GACAhC,EAAAwO,OAAA7R,EAAAS,EAAAP,EAAAkE,EAAAiB,GACAhC,EAAA2mB,iBAAAhqB,EAAAS,EAAAP,EAAAkE,EAAApE,EAAAS,EAAA4E,EAAAnF,EAAAkE,GACAf,EAAAwO,OAAA7R,EAAAqF,EAAAnF,EAAAkE,GACAf,EAAA2mB,iBAAAhqB,EAAAE,EAAAkE,EAAApE,EAAAE,EAAAkE,EAAAiB,GACAhC,EAAAwO,OAAA7R,EAAAE,EAAAmF,GACAhC,EAAA2mB,iBAAAhqB,EAAAE,EAAAF,EAAAqF,EAAAnF,GACAmD,EAAAqO,aAEAlV,EAAA6f,MAAA,SAAA4N,GACA,MAAA5N,GAOAA,EADA4N,YAAAC,gBACAzvB,EAAA0B,SAAA6S,OAAAmb,aAGAF,IATAhW,QAAAC,MAAA,uBACA+V,IAUAztB,EAAA4K,QAAAqT,MAAArT,QACA,SAAAmX,GACA,MAAA9D,OAAArT,QAAAmX,IAEA,SAAAA,GACA,MAAA,mBAAAzK,OAAAxW,UAAAiU,SAAAlX,KAAAkkB,IAGA/hB,EAAAsd,YAAA,SAAAsQ,EAAAC,GACA,GAAAtwB,GAAA+M,EAAAwjB,EAAAC,CAEA,KAAAH,IAAAC,GAAAD,EAAA9vB,SAAA+vB,EAAA/vB,OACA,OAAA,CAGA,KAAAP,EAAA,EAAA+M,EAAAsjB,EAAA9vB,OAAAP,EAAA+M,IAAA/M,EAIA,GAHAuwB,EAAAF,EAAArwB,GACAwwB,EAAAF,EAAAtwB,GAEAuwB,YAAA7P,QAAA8P,YAAA9P,QACA,IAAAje,EAAAsd,YAAAwQ,EAAAC,GACA,OAAA,MAEA,IAAAD,IAAAC,EAEA,OAAA,CAIA,QAAA,GAEA/tB,EAAAguB,aAAA,SAAAC,EAAAjQ,EAAAkQ,GACAD,GAAA,kBAAAA,GAAApwB,MACAowB,EAAAhS,MAAAiS,EAAAlQ,IAGAhe,EAAAsH,cAAA,SAAA6mB,GAEA,MAAAA,aAAAC,eACAD,EACAnuB,EAAA6f,MAAAsO,GAAAE,SAAA,IAAAC,OAAA,IAAAvO,yDCt8BA,YAEA/hB,GAAAJ,QAAA,SAAAK,GASA,QAAA4rB,GAAA/sB,EAAA8D,GACA,MAAA9D,GAAAugB,QAEA7Z,EAAA1G,EAAA0G,EACAE,EAAA5G,EAAA4G,GAIA1D,EAAA6pB,oBAAA/sB,EAAA8D,GAQA,QAAA2tB,GAAA3tB,EAAAuqB,GACA,GACAlqB,GAAA1D,EAAAuI,EAAAwE,EAAAkkB,EADA3sB,EAAAjB,EAAAgB,KAAAC,QAGA,KAAAtE,EAAA,EAAA+M,EAAAzI,EAAA/D,OAAAP,EAAA+M,IAAA/M,EACA,GAAAqD,EAAAoB,iBAAAzE,GAKA,IADA0D,EAAAL,EAAAmB,eAAAxE,GACAuI,EAAA,EAAA0oB,EAAAvtB,EAAAW,KAAA9D,OAAAgI,EAAA0oB,IAAA1oB,EAAA,CACA,GAAA0H,GAAAvM,EAAAW,KAAAkE,EACA0H,GAAAkS,MAAA1W,MACAmiB,EAAA3d,IAYA,QAAAihB,GAAA7tB,EAAA3B,GACA,GAAAwB,KAQA,OANA8tB,GAAA3tB,EAAA,SAAA4M,GACAA,EAAAkhB,QAAAzvB,EAAAuE,EAAAvE,EAAAyE,IACAjD,EAAA4B,KAAAmL,KAIA/M,EAWA,QAAAkuB,GAAA/tB,EAAA3B,EAAAoc,EAAAuT,GACA,GAAAC,GAAAjqB,OAAA8c,kBACAoN,IAuBA,OArBAF,KACAA,EAAA5uB,EAAAolB,uBAGAmJ,EAAA3tB,EAAA,SAAA4M,GACA,IAAA6N,GAAA7N,EAAAkhB,QAAAzvB,EAAAuE,EAAAvE,EAAAyE,GAAA,CAIA,GAAAqrB,GAAAvhB,EAAAwhB,iBACAhd,EAAA4c,EAAA3vB,EAAA8vB,EAEA/c,GAAA6c,GACAC,GAAAthB,GACAqhB,EAAA7c,GACAA,IAAA6c,GAEAC,EAAAzsB,KAAAmL,MAIAshB,EAGA,QAAAG,GAAAruB,EAAA9D,EAAAmF,GACA,GAAAhD,GAAA4qB,EAAA/sB,EAAA8D,EAAAA,OACAguB,EAAA,SAAAvJ,EAAAC,GACA,MAAAtgB,MAAAyI,IAAA4X,EAAA7hB,EAAA8hB,EAAA9hB,IAEA0V,EAAAjX,EAAAoZ,UAAAoT,EAAA7tB,EAAA3B,GAAA0vB,EAAA/tB,EAAA3B,GAAA,EAAA2vB,GACAnuB;uCAEA,OAAAyY,GAAApb,QAIA8C,EAAAgB,KAAAC,SAAA0U,QAAA,SAAApV,EAAAN,GACA,GAAAD,EAAAoB,iBAAAnB,GAAA,CACA,GAAAI,GAAAL,EAAAmB,eAAAlB,GACA2M,EAAAvM,EAAAW,KAAAsX,EAAA,GAAA9V,OAGAoK,KAAAA,EAAAkS,MAAA1W,MACAvI,EAAA4B,KAAAmL,MAKA/M,MAzHA,GAAAT,GAAA/B,EAAA+B,OAyIA/B,GAAAgd,aAEAC,OACAC,OAAA,SAAAva,EAAA9D,GACA,GAAAmC,GAAA4qB,EAAA/sB,EAAA8D,EAAAA,OACAH,IASA,OAPA8tB,GAAA3tB,EAAA,SAAA4M,GACA,GAAAA,EAAAkhB,QAAAzvB,EAAAuE,EAAAvE,EAAAyE,GAEA,MADAjD,GAAA4B,KAAAmL,GACA/M,IAIAA,EAAAoK,MAAA,EAAA,IAOAtL,MAAA0vB,EAYAxsB,MAAAwsB,EAWA9tB,QAAA,SAAAP,EAAA9D,EAAAmF,GACA,GAAAhD,GAAA4qB,EAAA/sB,EAAA8D,EAAAA,OACAsY,EAAAjX,EAAAoZ,UAAAoT,EAAA7tB,EAAA3B,GAAA0vB,EAAA/tB,EAAA3B,GAAA,EAMA,OAJAia,GAAApb,OAAA,IACAob,EAAAtY,EAAAmB,eAAAmX,EAAA,GAAA/V,eAAAvB,MAGAsX,GAOAgW,SAAA,SAAAtuB,EAAA9D,GACA,MAAAmyB,GAAAruB,EAAA9D,GAAA,IAWA0L,MAAA,SAAA5H,EAAA9D,GAEA,MAAA2xB,GAAA7tB,EADAipB,EAAA/sB,EAAA8D,EAAAA,SAYAuuB,QAAA,SAAAvuB,EAAA9D,EAAAmF,GACA,GAAAhD,GAAA4qB,EAAA/sB,EAAA8D,EAAAA,OACAkuB,EAAAH,EAAA/tB,EAAA3B,EAAAgD,EAAAoZ,UAmBA,OAhBAyT,GAAAhxB,OAAA,GACAgxB,EAAAM,KAAA,SAAA/xB,EAAAgyB,GACA,GAAAC,GAAAjyB,EAAAkyB,UACAC,EAAAH,EAAAE,UACAE,EAAAH,EAAAE,CAOA,OALA,KAAAC,IAEAA,EAAApyB,EAAA8F,cAAAksB,EAAAlsB,eAGAssB,IAKAX,EAAAjkB,MAAA,EAAA,IAWArH,EAAA,SAAA5C,EAAA9D,EAAAmF,GACA,GAAAhD,GAAA4qB,EAAA/sB,EAAA8D,EAAAA,OACAsY,KACAwW,GAAA,CAiBA,OAfAnB,GAAA3tB,EAAA,SAAA4M,GACAA,EAAAmiB,SAAA1wB,EAAAuE,IACA0V,EAAA7W,KAAAmL,GAGAA,EAAAkhB,QAAAzvB,EAAAuE,EAAAvE,EAAAyE,KACAgsB,GAAA,KAMAztB,EAAAoZ,YAAAqU,IACAxW,MAEAA,GAWAxV,EAAA,SAAA9C,EAAA9D,EAAAmF,GACA,GAAAhD,GAAA4qB,EAAA/sB,EAAA8D,EAAAA,OACAsY,KACAwW,GAAA,CAiBA,OAfAnB,GAAA3tB,EAAA,SAAA4M,GACAA,EAAAoiB,SAAA3wB,EAAAyE,IACAwV,EAAA7W,KAAAmL,GAGAA,EAAAkhB,QAAAzvB,EAAAuE,EAAAvE,EAAAyE,KACAgsB,GAAA,KAMAztB,EAAAoZ,YAAAqU,IACAxW,MAEAA,+BCnTA,YAEAlb,GAAAJ,QAAA,WAGA,GAAAK,GAAA,SAAA+Y,EAAA3Y,GAEA,MADA0C,MAAA6Y,WAAA,GAAA3b,GAAA8Y,WAAAC,EAAA3Y,EAAA0C,MACAA,KAAA6Y,WA+CA,OA3CA3b,GAAA0B,UACA6S,QACAsF,YAAA,EACAgB,4BAAA,EACAR,qBAAA,EACAmE,QAAA,YAAA,WAAA,QAAA,aAAA,aACA5d,OACAue,QAAA,KACAte,KAAA,UACAuc,WAAA,EACAtB,kBAAA,KAEA3P,QAAA,KACAujB,aAAA,kBACAkC,iBAAA,OACAC,kBAAA,qDACAC,gBAAA,GACAC,iBAAA,SACAjiB,WAAA,EAGAtN,YAGA+I,eAAA,SAAA5I,GACA,GAAA6I,KACAA,GAAApH,KAAA,cAAAzB,EAAA1B,GAAA,YACA,KAAA,GAAA3B,GAAA,EAAAA,EAAAqD,EAAAgB,KAAAC,SAAA/D,OAAAP,IACAkM,EAAApH,KAAA,qCAAAzB,EAAAgB,KAAAC,SAAAtE,GAAA4G,gBAAA,aACAvD,EAAAgB,KAAAC,SAAAtE,GAAAgC,OACAkK,EAAApH,KAAAzB,EAAAgB,KAAAC,SAAAtE,GAAAgC,OAEAkK,EAAApH,KAAA,QAIA,OAFAoH,GAAApH,KAAA,SAEAoH,EAAAC,KAAA,OAKAzL,EAAAA,MAAAA,EAEAA,4BCtDA,YAEAD,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,OAKA/B,GAAAoc,eACA1a,YAGAswB,OAAA,SAAAvc,EAAAoH,GACApH,EAAAmH,QACAnH,EAAAmH,UAEAnH,EAAAmH,MAAAxY,KAAAyY,IAGAoV,UAAA,SAAAxc,EAAAoH,GACApH,EAAAmH,OAGAnH,EAAAmH,MAAA3G,OAAAR,EAAAmH,MAAA1Y,QAAA2Y,GAAA,IAIAxY,OAAA,SAAAoR,EAAAzP,EAAA2D,GA2GA,QAAAuoB,GAAArV,GACA,GAAAlP,GACAwkB,EAAAtV,EAAAsV,cAEAA,IACAxkB,EAAAkP,EAAAxY,OAAAwY,EAAA7Y,QAAAouB,UAAAC,EAAAC,EAAAC,GACAC,GAAA7kB,EAAAhE,SAEAgE,EAAAkP,EAAAxY,OAAAouB,EAAAC,GACAJ,GAAA3kB,EAAA3H,OAGA2sB,EAAAvuB,MACAyB,WAAAssB,EACAxkB,QAAAA,EACAkP,IAAAA,IAqCA,QAAA+V,GAAA/V,GACA,GAAAgW,GAAA9wB,EAAAijB,cAAA2N,EAAA,SAAAG,GACA,MAAAA,GAAAjW,MAAAA,GAGA,IAAAgW,EACA,GAAAhW,EAAAsV,eAAA,CACA,GAAAY,IACAxlB,KAAAxG,KAAAE,IAAA+rB,EAAAC,GACA3lB,MAAAvG,KAAAE,IAAAisB,EAAAC,GACAzlB,IAAA,EACAD,OAAA,EAKAoP,GAAAxY,OAAAwY,EAAA7Y,QAAAouB,UAAAC,EAAAC,EAAAc,EAAA,EAAAL,OAEAlW,GAAAxY,OAAAwuB,EAAAllB,QAAA3H,MAAAwsB,GA4BA,QAAAa,GAAAxW,GACA,GAAAgW,GAAA9wB,EAAAijB,cAAA2N,EAAA,SAAAhlB,GACA,MAAAA,GAAAkP,MAAAA,IAGAkW,GACAxlB,KAAA,EACAD,MAAA,EACAI,IAAA4lB,EACA7lB,OAAA8lB,EAGAV,IACAhW,EAAAxY,OAAAwuB,EAAAllB,QAAA3H,MAAAwsB,EAAAO,GAwEA,QAAAS,GAAA3W,GACAA,EAAAsV,gBACAtV,EAAAtP,KAAAsP,EAAA7Y,QAAAouB,UAAAqB,EAAAT,EACAnW,EAAAvP,MAAAuP,EAAA7Y,QAAAouB,UAAApsB,EAAA0tB,EAAAV,EAAAV,EACAzV,EAAAnP,IAAAA,EACAmP,EAAApP,OAAAC,EAAAmP,EAAAlT,OAGA+D,EAAAmP,EAAApP,SAIAoP,EAAAtP,KAAAA,EACAsP,EAAAvP,MAAAC,EAAAsP,EAAA7W,MACA6W,EAAAnP,IAAA4lB,EACAzW,EAAApP,OAAA6lB,EAAAd,EAGAjlB,EAAAsP,EAAAvP,OAlTA,GAAAmI,EAAA,CAIA,GAAAke,GAAAle,EAAAzR,QAAA4vB,OACAC,EAAAF,EAAAA,EAAAE,QAAA,KAEAJ,EAAA,EACAC,EAAA,EACAI,EAAA,EACAC,EAAA,CAEAhrB,OAAA8qB,IAOAJ,EAAAI,EAAAtmB,MAAA,EACAmmB,EAAAG,EAAAvmB,OAAA,EACAwmB,EAAAD,EAAAnmB,KAAA,EACAqmB,EAAAF,EAAApmB,QAAA,IARAgmB,EAAAI,EACAH,EAAAG,EACAC,EAAAD,EACAE,EAAAF,EAQA,IAAAG,GAAAjyB,EAAA4iB,MAAAlP,EAAAmH,MAAA,SAAAC,GACA,MAAA,SAAAA,EAAA7Y,QAAAhD,WAEAizB,EAAAlyB,EAAA4iB,MAAAlP,EAAAmH,MAAA,SAAAC,GACA,MAAA,UAAAA,EAAA7Y,QAAAhD,WAEAkzB,EAAAnyB,EAAA4iB,MAAAlP,EAAAmH,MAAA,SAAAC,GACA,MAAA,QAAAA,EAAA7Y,QAAAhD,WAEAmzB,EAAApyB,EAAA4iB,MAAAlP,EAAAmH,MAAA,SAAAC,GACA,MAAA,WAAAA,EAAA7Y,QAAAhD,WAIAozB,EAAAryB,EAAA4iB,MAAAlP,EAAAmH,MAAA,SAAAC,GACA,MAAA,cAAAA,EAAA7Y,QAAAhD,UAIAkzB,GAAA/C,KAAA,SAAA/xB,EAAAgyB,GACA,OAAAA,EAAAptB,QAAAouB,UAAA,EAAA,IAAAhzB,EAAA4E,QAAAouB,UAAA,EAAA,KAEA+B,EAAAhD,KAAA,SAAA/xB,EAAAgyB,GACA,OAAAhyB,EAAA4E,QAAAouB,UAAA,EAAA,IAAAhB,EAAAptB,QAAAouB,UAAA,EAAA,IAyCA,IAAAC,GAAArsB,EAAAytB,EAAAC,EACAN,EAAAzpB,EAAAmqB,EAAAC,EACAM,EAAAhC,EAAA,EACAK,EAAAU,EAAA,EAGAX,GAAAzsB,EAAAquB,IAAAL,EAAAn0B,OAAAo0B,EAAAp0B,QAGA0yB,GAAA5oB,EAAA+oB,IAAAwB,EAAAr0B,OAAAs0B,EAAAt0B,QAGAyyB,EAAAD,EACAG,EAAAY,EACAT,IAqBA5wB,GAAA2B,KAAAswB,EAAA3b,OAAA4b,EAAAC,EAAAC,GAAAjC,EAGA,IAAAe,GAAA,EACAE,EAAA,EACAmB,EAAA,EACAC,EAAA,CAEAxyB,GAAA2B,KAAAwwB,EAAA7b,OAAA8b,GAAA,SAAAK,GACA,GAAAA,EAAAC,WAAA,CACA,GAAAC,GAAAF,EAAAC,YACAxB,GAAAlsB,KAAAE,IAAAgsB,EAAAyB,EAAAnnB,MACA4lB,EAAApsB,KAAAE,IAAAksB,EAAAuB,EAAApnB,UAIAvL,EAAA2B,KAAAswB,EAAA3b,OAAA4b,GAAA,SAAAU,GACA,GAAAA,EAAAF,WAAA,CACA,GAAAC,GAAAC,EAAAF,YACAH,GAAAvtB,KAAAE,IAAAqtB,EAAAI,EAAAhnB,KACA6mB,EAAAxtB,KAAAE,IAAAstB,EAAAG,EAAAjnB,UAOA,IAAAulB,GAAAS,EACAP,EAAAQ,EACAJ,EAAAQ,EACAP,EAAAQ,CA2BAhyB,GAAA2B,KAAAswB,EAAA3b,OAAA4b,GAAArB,GAEA7wB,EAAA2B,KAAAswB,EAAA,SAAAnX,GACAmW,GAAAnW,EAAA7W,QAGAjE,EAAA2B,KAAAuwB,EAAA,SAAApX,GACAqW,GAAArW,EAAA7W,QAIAjE,EAAA2B,KAAAwwB,EAAA7b,OAAA8b,GAAAvB,GAGA7wB,EAAA2B,KAAAwwB,EAAA,SAAArX,GACAyW,GAAAzW,EAAAlT,SAGA5H,EAAA2B,KAAAywB,EAAA,SAAAtX,GACA0W,GAAA1W,EAAAlT,SAqBA5H,EAAA2B,KAAAswB,EAAA3b,OAAA4b,GAAAZ,GAGAL,EAAAS,EACAP,EAAAQ,EACAJ,EAAAQ,EACAP,EAAAQ,EAEAhyB,EAAA2B,KAAAswB,EAAA,SAAAnX,GACAmW,GAAAnW,EAAA7W,QAGAjE,EAAA2B,KAAAuwB,EAAA,SAAApX,GACAqW,GAAArW,EAAA7W,QAGAjE,EAAA2B,KAAAwwB,EAAA,SAAArX,GACAyW,GAAAzW,EAAAlT,SAEA5H,EAAA2B,KAAAywB,EAAA,SAAAtX,GACA0W,GAAA1W,EAAAlT,QAIA,IAAAirB,GAAA7tB,KAAAE,IAAAgsB,EAAAD,EAAA,EACAA,IAAA4B,EACA1B,GAAAnsB,KAAAE,IAAAksB,EAAAD,EAAA,EAEA,IAAA2B,GAAA9tB,KAAAE,IAAAqtB,EAAAhB,EAAA,EACAA,IAAAuB,EACAtB,GAAAxsB,KAAAE,IAAAstB,EAAAhB,EAAA,EAKA,IAAAuB,GAAAnrB,EAAA2pB,EAAAC,EACAwB,EAAA/uB,EAAAgtB,EAAAE,CAEA6B,KAAAzC,GAAAwC,IAAAtC,IACAzwB,EAAA2B,KAAAswB,EAAA,SAAAnX,GACAA,EAAAlT,OAAAmrB,IAGA/yB,EAAA2B,KAAAuwB,EAAA,SAAApX,GACAA,EAAAlT,OAAAmrB,IAGA/yB,EAAA2B,KAAAwwB,EAAA,SAAArX,GACAA,EAAA7Y,QAAAouB,YACAvV,EAAA7W,MAAA+uB,KAIAhzB,EAAA2B,KAAAywB,EAAA,SAAAtX,GACAA,EAAA7Y,QAAAouB,YACAvV,EAAA7W,MAAA+uB,KAIAvC,EAAAsC,EACAxC,EAAAyC,EAIA,IAAAxnB,GAAAkmB,EAAAmB,EACAlnB,EAAAomB,EAAAe,CAwBA9yB,GAAA2B,KAAAswB,EAAA3b,OAAA6b,GAAAV,GAGAjmB,GAAA+kB,EACA5kB,GAAA8kB,EAEAzwB,EAAA2B,KAAAuwB,EAAAT,GACAzxB,EAAA2B,KAAAywB,EAAAX,GAGA/d,EAAA5M,WACA0E,KAAAylB,EACAtlB,IAAA4lB,EACAhmB,MAAA0lB,EAAAV,EACA7kB,OAAA6lB,EAAAd,GAIAzwB,EAAA2B,KAAA0wB,EAAA,SAAAvX,GACAA,EAAAtP,KAAAkI,EAAA5M,UAAA0E,KACAsP,EAAAnP,IAAA+H,EAAA5M,UAAA6E,IACAmP,EAAAvP,MAAAmI,EAAA5M,UAAAyE,MACAuP,EAAApP,OAAAgI,EAAA5M,UAAA4E,OAEAoP,EAAAxY,OAAAiuB,EAAAE,kCC5WA,YAEAzyB,GAAAJ,QAAA,SAAAK,GAsEA,QAAAg1B,GAAAC,EAAAC,GACA,MAAAD,GAAAE,cACAD,EAAAnuB,KAAAsQ,MACA4d,EAAAG,SAkaA,QAAAC,GAAA5f,EAAA6f,GACA,GAAA5pB,GAAA,GAAA1L,GAAAu1B,QACA3sB,IAAA6M,EAAA9S,MAAAiG,IACA5E,QAAAsxB,EACA3yB,MAAA8S,GAEAA,GAAA/J,OAAAA,EACA1L,EAAAoc,cAAA4V,OAAAvc,EAAA/J,GAhfA,GAAA3J,GAAA/B,EAAA+B,QACAkL,EAAAlL,EAAAkL,IAEAjN,GAAA0B,SAAA6S,OAAA7I,QAEA8pB,SAAA,EACAx0B,SAAA,MACAoxB,WAAA,EACAxO,SAAA,EAGAzX,QAAA,SAAAtN,EAAAuN,GACA,GAAA5H,GAAA4H,EAAAxJ,aACA6yB,EAAA3yB,KAAAH,MACAK,EAAAyyB,EAAA3xB,eAAAU,EAGAxB,GAAAkJ,OAAA,OAAAlJ,EAAAkJ,QAAAupB,EAAA9xB,KAAAC,SAAAY,GAAA0H,OAAA,KAGAupB,EAAApxB,UAGA8a,QAAA,KAEAxZ,QACAyvB,SAAA,GACAvB,QAAA,GAYAloB,eAAA,SAAAhJ,GACA,GAAAgB,GAAAhB,EAAAgB,IACA,OAAA5B,GAAA4K,QAAAhJ,EAAAC,UAAAD,EAAAC,SAAAgI,IAAA,SAAA1I,EAAA5D,GACA,OACAkM,KAAAtI,EAAA5B,MACAyK,UAAAhK,EAAA4K,QAAAzJ,EAAAgD,iBAAAhD,EAAAgD,gBAAA,GAAAhD,EAAAgD,gBACAgG,QAAAvJ,EAAAoB,iBAAAzE,GACAo2B,QAAAxyB,EAAAqN,eACAolB,SAAAzyB,EAAAsN,WACAolB,eAAA1yB,EAAAuN,iBACAolB,SAAA3yB,EAAAwN,gBACAzE,UAAA/I,EAAAoD,YACA0F,YAAA9I,EAAAmD,YACAyL,WAAA5O,EAAA4O,WAGAlP,aAAAtD,IAEAwD,YAiBA9C,EAAAu1B,OAAAv1B,EAAA6U,QAAAvS,QAEAI,WAAA,SAAAtC,GACA2B,EAAAO,OAAAQ,KAAA1C,GAGA0C,KAAAgzB,kBAGAhzB,KAAAizB,cAAA,GAOAC,aAAA/oB,EACA5I,OAAA,SAAA4xB,EAAAC,EAAAC,GACA,GAAApzB,GAAAD,IA0BA,OAvBAC,GAAAizB,eAGAjzB,EAAAkzB,SAAAA,EACAlzB,EAAAmzB,UAAAA,EACAnzB,EAAAozB,QAAAA,EAGApzB,EAAAqzB,sBACArzB,EAAAszB,gBACAtzB,EAAAuzB,qBAEAvzB,EAAAwzB,oBACAxzB,EAAAyzB,cACAzzB,EAAA0zB,mBAGA1zB,EAAA2zB,YACA3zB,EAAA4zB,MACA5zB,EAAA6zB,WAEA7zB,EAAA8zB,cAEA9zB,EAAA4K,SAEAkpB,YAAA5pB,EAIAmpB,oBAAAnpB,EACAopB,cAAA,WACA,GAAAtzB,GAAAD,IAEAC,GAAAovB,gBAEApvB,EAAAiD,MAAAjD,EAAAkzB,SACAlzB,EAAAwK,KAAA,EACAxK,EAAAuK,MAAAvK,EAAAiD,QAEAjD,EAAA4G,OAAA5G,EAAAmzB,UAGAnzB,EAAA2K,IAAA,EACA3K,EAAA0K,OAAA1K,EAAA4G,QAIA5G,EAAAypB,YAAA,EACAzpB,EAAA2pB,WAAA,EACA3pB,EAAA4pB,aAAA,EACA5pB,EAAA6pB,cAAA,EAGA7pB,EAAA4K,SACA3H,MAAA,EACA2D,OAAA,IAGA2sB,mBAAArpB,EAIAspB,kBAAAtpB,EACAupB,YAAA,WACA,GAAAzzB,GAAAD,KACAmyB,EAAAlyB,EAAAiB,QAAA2B,OACAmxB,EAAA7B,EAAAtpB,eAAA/L,KAAAmD,EAAAA,EAAAJ,MAEAsyB,GAAA3iB,SACAwkB,EAAAA,EAAAxkB,OAAA,SAAAyG,GACA,MAAAkc,GAAA3iB,OAAAyG,EAAAhW,EAAAJ,MAAAgB,SAIAZ,EAAAiB,QAAA4f,SACAkT,EAAAlT,UAGA7gB,EAAA+zB,YAAAA,GAEAL,iBAAAxpB,EAIAypB,UAAAzpB,EACA0pB,IAAA,WACA,GAAA5zB,GAAAD,KACAsK,EAAArK,EAAAiB,QACAixB,EAAA7nB,EAAAzH,OACA6vB,EAAApoB,EAAAooB,QAEA5sB,EAAA7F,EAAA6F,IAEAmuB,EAAA/2B,EAAA0B,SAAA6S,OACAyiB,EAAAj1B,EAAA6N,kBACAslB,EAAA8B,EAAA/B,EAAAC,SAAA6B,EAAAjF,iBACAxD,EAAA0I,EAAA/B,EAAA3G,UAAAyI,EAAAhF,kBACAxD,EAAAyI,EAAA/B,EAAA1G,WAAAwI,EAAAlF,mBACAoF,EAAAl1B,EAAAqsB,WAAA8G,EAAA5G,EAAAC,GAGA2I,EAAAn0B,EAAA+yB,kBAEAnoB,EAAA5K,EAAA4K,QACAwkB,EAAApvB,EAAAovB,cAWA,IATAA,GACAxkB,EAAA3H,MAAAjD,EAAAkzB,SACAtoB,EAAAhE,OAAA6rB,EAAA,GAAA,IAEA7nB,EAAA3H,MAAAwvB,EAAA,GAAA,EACA7nB,EAAAhE,OAAA5G,EAAAmzB,WAIAV,EAGA,GAFA5sB,EAAA6lB,KAAAwI,EAEA9E,EAAA,CAIA,GAAAgF,GAAAp0B,EAAAo0B,YAAA,GACAC,EAAAr0B,EAAA+zB,YAAAj3B,OAAAq1B,EAAAD,EAAA,QAAA,CAEArsB,GAAAyuB,UAAA,OACAzuB,EAAA0uB,aAAA,MAEAv1B,EAAA2B,KAAAX,EAAA+zB,YAAA,SAAA1qB,EAAA9M,GACA,GAAA81B,GAAAJ,EAAAC,EAAAC,GACAlvB,EAAAovB,EAAAF,EAAA,EAAAtsB,EAAAomB,YAAA5iB,EAAAZ,MAAAxF,KAEAmxB,GAAAA,EAAAt3B,OAAA,GAAAmG,EAAAivB,EAAApB,SAAA9wB,EAAAiD,QACAoxB,GAAAlC,EAAAD,EAAA,QACAkC,EAAAA,EAAAt3B,QAAAkD,EAAAwK,MAIA2pB,EAAA53B,IACAiO,KAAA,EACAG,IAAA,EACA1H,MAAAA,EACA2D,OAAAurB,GAGAiC,EAAAA,EAAAt3B,OAAA,IAAAmG,EAAAivB,EAAApB,UAGAlmB,EAAAhE,QAAAytB,MAEA,CACA,GAAAG,GAAAtC,EAAApB,QACA2D,EAAAz0B,EAAAy0B,gBACAC,EAAAxC,EAAApB,QACA6D,EAAA,EACAC,EAAA,EACAC,EAAA1C,EAAAqC,CAEAx1B,GAAA2B,KAAAX,EAAA+zB,YAAA,SAAA1qB,EAAA9M,GACA,GAAA81B,GAAAJ,EAAAC,EAAAC,GACA2C,EAAAzC,EAAAF,EAAA,EAAAtsB,EAAAomB,YAAA5iB,EAAAZ,MAAAxF,KAGA2xB,GAAAC,EAAAjqB,EAAAhE,SACA8tB,GAAAC,EAAAzC,EAAApB,QACA2D,EAAApzB,KAAAszB,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAA3wB,KAAAE,IAAAywB,EAAAG,GACAF,GAAAC,EAGAV,EAAA53B,IACAiO,KAAA,EACAG,IAAA,EACA1H,MAAA6xB,EACAluB,OAAAurB,KAIAuC,GAAAC,EACAF,EAAApzB,KAAAszB,GACA/pB,EAAA3H,OAAAyxB,EAIA10B,EAAAiD,MAAA2H,EAAA3H,MACAjD,EAAA4G,OAAAgE,EAAAhE,QAEAitB,SAAA3pB,EAGAklB,aAAA,WACA,MAAA,QAAArvB,KAAAkB,QAAAhD,UAAA,WAAA8B,KAAAkB,QAAAhD,UAIAqH,KAAA,WACA,GAAAtF,GAAAD,KACAsK,EAAArK,EAAAiB,QACAixB,EAAA7nB,EAAAzH,OACAoxB,EAAA/2B,EAAA0B,SAAA6S,OACAujB,EAAAf,EAAAv0B,SAAAX,KACAk2B,EAAAh1B,EAAAiD,MACAmxB,EAAAp0B,EAAAo0B,UAEA,IAAA/pB,EAAAooB,QAAA,CACA,GACAwC,GADApvB,EAAA7F,EAAA6F,IAEAouB,EAAAj1B,EAAA6N,kBACAqoB,EAAAjB,EAAA/B,EAAAgD,UAAAlB,EAAAnF,kBACAsD,EAAA8B,EAAA/B,EAAAC,SAAA6B,EAAAjF,iBACAxD,EAAA0I,EAAA/B,EAAA3G,UAAAyI,EAAAhF,kBACAxD,EAAAyI,EAAA/B,EAAA1G,WAAAwI,EAAAlF,mBACAoF,EAAAl1B,EAAAqsB,WAAA8G,EAAA5G,EAAAC,EAGA3lB,GAAAyuB,UAAA,OACAzuB,EAAA0uB,aAAA,MACA1uB,EAAAqD,UAAA,GACArD,EAAAoD,YAAAisB,EACArvB,EAAAmD,UAAAksB,EACArvB,EAAA6lB,KAAAwI,CAEA,IAAA7B,GAAAJ,EAAAC,EAAAC,GACAgC,EAAAn0B,EAAA+yB,eAGAoC,EAAA,SAAA3yB,EAAAE,EAAA2G,GACA,KAAArD,MAAAqsB,IAAAA,GAAA,GAAA,CAKAxsB,EAAAiP,OAEAjP,EAAAmD,UAAAirB,EAAA5qB,EAAAL,UAAAgrB,EAAArH,cACA9mB,EAAA8sB,QAAAsB,EAAA5qB,EAAAspB,QAAAoC,EAAAvnB,gBACA3H,EAAAgtB,eAAAoB,EAAA5qB,EAAAwpB,eAAAkC,EAAArnB,kBACA7H,EAAAitB,SAAAmB,EAAA5qB,EAAAypB,SAAAiC,EAAApnB,iBACA9H,EAAAqD,UAAA+qB,EAAA5qB,EAAAH,UAAA6rB,EAAAxxB,aACAsC,EAAAoD,YAAAgrB,EAAA5qB,EAAAJ,YAAA+qB,EAAArH,aACA,IAAAyI,GAAA,IAAAnB,EAAA5qB,EAAAH,UAAA6rB,EAAAxxB,YAOA,IALAsC,EAAAwvB,aAEAxvB,EAAAwvB,YAAApB,EAAA5qB,EAAAupB,SAAAmC,EAAAtnB,aAGApD,EAAAzH,QAAAyH,EAAAzH,OAAAwvB,cAAA,CAGA,GAAAvqB,GAAAsqB,EAAAnuB,KAAAsQ,MAAA,EACAghB,EAAAztB,EAAA7D,KAAAsQ,MACAlI,EAAA5J,EAAA8yB,EACAjpB,EAAA3J,EAAA4yB,CAGAr4B,GAAA0I,cAAAgO,UAAA9N,EAAAwD,EAAA0F,WAAAlH,EAAAuE,EAAAC,OAGA+oB,IACAvvB,EAAA2O,WAAAhS,EAAAE,EAAA2vB,EAAAF,GAEAtsB,EAAA0O,SAAA/R,EAAAE,EAAA2vB,EAAAF,EAGAtsB,GAAAoP,YAEAsgB,EAAA,SAAA/yB,EAAAE,EAAA2G,EAAAgjB,GACAxmB,EAAA0vB,SAAAlsB,EAAAZ,KAAA4pB,EAAAF,EAAA,EAAA3vB,EAAAE,GAEA2G,EAAAF,SAEAtD,EAAAoO,YACApO,EAAAqD,UAAA,EACArD,EAAAuO,OAAAie,EAAAF,EAAA,EAAA3vB,EAAAE,EAAAyvB,EAAA,GACAtsB,EAAAwO,OAAAge,EAAAF,EAAA,EAAA3vB,EAAA6pB,EAAA3pB,EAAAyvB,EAAA,GACAtsB,EAAAgP,WAKAua,EAAApvB,EAAAovB,cAEA6F,GADA7F,GAEA5sB,EAAAxC,EAAAwK,MAAAwqB,EAAAZ,EAAA,IAAA,EACA1xB,EAAA1C,EAAA2K,IAAAunB,EAAApB,QACAhyB,KAAA,IAIA0D,EAAAxC,EAAAwK,KAAA0nB,EAAApB,QACApuB,EAAA1C,EAAA2K,IAAAunB,EAAApB,QACAhyB,KAAA,EAIA,IAAA+1B,GAAA1C,EAAAD,EAAApB,OACA9xB,GAAA2B,KAAAX,EAAA+zB,YAAA,SAAA1qB,EAAA9M,GACA,GAAA8vB,GAAAxmB,EAAAomB,YAAA5iB,EAAAZ,MAAAxF,MACAA,EAAAovB,EAAAF,EAAA,EAAA9F,EACA7pB,EAAAyyB,EAAAzyB,EACAE,EAAAuyB,EAAAvyB,CAEA0sB,GACA5sB,EAAAS,GAAA+xB,IACAtyB,EAAAuyB,EAAAvyB,GAAAmyB,EACAI,EAAAn2B,OACA0D,EAAAyyB,EAAAzyB,EAAAxC,EAAAwK,MAAAwqB,EAAAZ,EAAAa,EAAAn2B,OAAA,GAEA4D,EAAAmyB,EAAA70B,EAAA0K,SACAlI,EAAAyyB,EAAAzyB,EAAAA,EAAAxC,EAAAy0B,aAAAQ,EAAAn2B,MAAAozB,EAAApB,QACApuB,EAAAuyB,EAAAvyB,EAAA1C,EAAA2K,IAAAunB,EAAApB,QACAmE,EAAAn2B,QAGAq2B,EAAA3yB,EAAAE,EAAA2G,GAEA8qB,EAAA53B,GAAAiO,KAAAhI,EACA2xB,EAAA53B,GAAAoO,IAAAjI,EAGA6yB,EAAA/yB,EAAAE,EAAA2G,EAAAgjB,GAEA+C,EACA6F,EAAAzyB,GAAAS,EAAAivB,EAAA,QAEA+C,EAAAvyB,GAAAmyB,MAaA9Y,YAAA,SAAAjgB,GACA,GAAAkE,GAAAD,KACAsK,EAAArK,EAAAiB,QACA3D,EAAA,YAAAxB,EAAAwB,KAAA,QAAAxB,EAAAwB,KACAwe,GAAA,CAEA,IAAA,cAAAxe,GACA,IAAA+M,EAAA+R,QACA,WAEA,CAAA,GAAA,UAAA9e,EAKA,MAJA,KAAA+M,EAAAjB,QACA,OAOA,GAAA5G,GAAA1G,EAAA0G,EACAE,EAAA5G,EAAA4G,CAEA,IAAAF,GAAAxC,EAAAwK,MAAAhI,GAAAxC,EAAAuK,OAAA7H,GAAA1C,EAAA2K,KAAAjI,GAAA1C,EAAA0K,OAGA,IAAA,GADA8qB,GAAAx1B,EAAA+yB,eACAx2B,EAAA,EAAAA,EAAAi5B,EAAA14B,SAAAP,EAAA,CACA,GAAAk5B,GAAAD,EAAAj5B,EAEA,IAAAiG,GAAAizB,EAAAjrB,MAAAhI,GAAAizB,EAAAjrB,KAAAirB,EAAAxyB,OAAAP,GAAA+yB,EAAA9qB,KAAAjI,GAAA+yB,EAAA9qB,IAAA8qB,EAAA7uB,OAAA,CAEA,GAAA,UAAAtJ,EAAA,CAEA+M,EAAAjB,QAAAvM,KAAAmD,EAAAlE,EAAAugB,OAAArc,EAAA+zB,YAAAx3B,IACAuf,GAAA,CACA,OACA,GAAA,cAAAxe,EAAA,CAEA+M,EAAA+R,QAAAvf,KAAAmD,EAAAlE,EAAAugB,OAAArc,EAAA+zB,YAAAx3B,IACAuf,GAAA,CACA,SAMA,MAAAA,MAeA7e,EAAA0Y,QAAA+f,UACAC,WAAA,SAAAjjB,GACA,GAAA6f,GAAA7f,EAAAzR,QAAA0H,MAEA4pB,IACAD,EAAA5f,EAAA6f,IAGAU,aAAA,SAAAvgB,GACA,GAAA6f,GAAA7f,EAAAzR,QAAA0H,MAEA4pB,IACAA,EAAAvzB,EAAAmW,YAAAlY,EAAA0B,SAAA6S,OAAA7I,OAAA4pB,GAEA7f,EAAA/J,OACA+J,EAAA/J,OAAA1H,QAAAsxB,EAEAD,EAAA5f,EAAA6f,KAGAt1B,EAAAoc,cAAA6V,UAAAxc,EAAAA,EAAA/J,cACA+J,GAAA/J,SAGAitB,WAAA,SAAAljB,EAAA5W,GACA,GAAA6M,GAAA+J,EAAA/J,MACAA,IACAA,EAAAoT,YAAAjgB,gCCnhBA,YAEAkB,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,OAEA/B,GAAA0B,SAAA6S,OAAAmE,WAOA1Y,EAAA0Y,SAKAkgB,YAQAC,SAAA,EAMAJ,SAAA,SAAA/f,GACA,GAAAmS,GAAA/nB,KAAA81B,YACAvgB,OAAAK,GAAAJ,QAAA,SAAAwgB,GACAjO,EAAA3mB,QAAA40B,MAAA,GACAjO,EAAAzmB,KAAA00B,KAIAh2B,KAAA+1B,YAOAE,WAAA,SAAArgB,GACA,GAAAmS,GAAA/nB,KAAA81B,YACAvgB,OAAAK,GAAAJ,QAAA,SAAAwgB,GACA,GAAAE,GAAAnO,EAAA3mB,QAAA40B,EACAE,MAAA,GACAnO,EAAA5U,OAAA+iB,EAAA,KAIAl2B,KAAA+1B,YAOA3e,MAAA,WACApX,KAAA81B,YACA91B,KAAA+1B,YAQAplB,MAAA,WACA,MAAA3Q,MAAA81B,SAAA/4B,QAQAo5B,OAAA,WACA,MAAAn2B,MAAA81B,UAYAlf,OAAA,SAAA/W,EAAAu2B,EAAAnZ,GACA,GAEAzgB,GAAA65B,EAAAL,EAAAM,EAAA7b,EAFA8b,EAAAv2B,KAAAu2B,YAAA12B,GACA0J,EAAAgtB,EAAAx5B,MAGA,KAAAP,EAAA,EAAAA,EAAA+M,IAAA/M,EAIA,GAHA65B,EAAAE,EAAA/5B,GACAw5B,EAAAK,EAAAL,OAEA,mBADAvb,EAAAub,EAAAI,MAEAE,GAAAz2B,GAAA0V,OAAA0H,OACAqZ,EAAAh1B,KAAA+0B,EAAAn1B,SACAuZ,EAAAS,MAAA8a,EAAAM,MAAA,GACA,OAAA,CAKA,QAAA,GAQAC,YAAA,SAAA12B,GACA,GAAAgsB,GAAAhsB,EAAAi2B,WAAAj2B,EAAAi2B,YACA,IAAAjK,EAAA1tB,KAAA6B,KAAA+1B,SACA,MAAAlK,GAAA0K,WAGA,IAAA3gB,MACA2gB,KACAj5B,EAAAuC,GAAAA,EAAAvC,WACAsB,EAAA1B,EAAA0B,SAAA6S,OAAAmE,QACA1U,EAAA5D,EAAA4D,SAAA5D,EAAA4D,QAAA0U,WA2BA,OAzBA5V,MAAA81B,SAAAvgB,OAAAjY,EAAAsY,aAAAJ,QAAA,SAAAwgB,GAEA,GADApgB,EAAAxU,QAAA40B,MACA,EAAA,CAIA,GAAA73B,GAAA63B,EAAA73B,GACAmM,EAAApJ,EAAA/C,EACAmM,MAAA,IAIAA,KAAA,IACAA,EAAArL,EAAA+K,MAAApL,EAAAT,KAGAyX,EAAAtU,KAAA00B,GACAO,EAAAj1B,MACA00B,OAAAA,EACA90B,QAAAoJ,YAIAuhB,EAAA0K,YAAAA,EACA1K,EAAA1tB,GAAA6B,KAAA+1B,SACAQ,IA2JAr5B,EAAAs5B,cAAAt5B,EAAA0Y,QAUA1Y,EAAAu5B,WAAAx3B,EAAAwf,uCCnUA,YAEAxhB,GAAAJ,QAAA,SAAAK,GAkDA,QAAAw5B,GAAAr5B,EAAAs5B,EAAAhL,GACA,MAAA1sB,GAAA4K,QAAA8sB,GACA13B,EAAAysB,YAAAruB,EAAAsuB,EAAAgL,GACAt5B,EAAA6uB,YAAAyK,GAAAzzB,MAGA,QAAA0zB,GAAA11B,GACA,GAAA4L,GAAA7N,EAAA6N,kBACA+pB,EAAA35B,EAAA0B,SAAA6S,OACA/F,EAAAoB,EAAA5L,EAAAkxB,SAAAyE,EAAA7H,iBACApX,EAAA9K,EAAA5L,EAAAsqB,UAAAqL,EAAA5H,kBACA6H,EAAAhqB,EAAA5L,EAAAuqB,WAAAoL,EAAA9H,kBAEA,QACArjB,KAAAA,EACAkM,MAAAA,EACAkf,OAAAA,EACAnL,KAAA1sB,EAAAqsB,WAAA5f,EAAAkM,EAAAkf,IAjEA,GAAA73B,GAAA/B,EAAA+B,OAEA/B,GAAA0B,SAAAwO,OACAslB,SAAA,EACAx0B,SAAA,OAGAmB,WACAqzB,SAAA,EACA5T,MAAA,qBACA3V,UAAA,EACA4tB,YAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,eAAA,GACAC,cAAA,EACAC,cAAA,mBACA93B,iBAAA,EACAoO,cACAC,iBAAA,GAIA0pB,YAEAC,YAAA,GAGA5E,SAAA,GAIAnuB,OACAmM,aAAA,EACA6mB,YAAA,EACAC,YAAA,GACAC,QAAA,EACA1G,QAAA,EACAjQ,SAAA,EACA4R,SAAA,EACAgF,UAAA,EACAC,gBAAA,EACAC,YAAA,EAEApe,SAAAtc,EAAA26B,MAAAC,WAAAC,SAyBA76B,EAAA86B,MAAA96B,EAAA6U,QAAAvS,QAOAmyB,WAAA,WACA,GAAA1xB,GAAAD,IACA,QACAyK,KAAAxK,EAAAypB,aAAA,EACA9e,IAAA3K,EAAA2pB,YAAA,EACApf,MAAAvK,EAAA4pB,cAAA,EACAlf,OAAA1K,EAAA6pB,eAAA,IAQAoJ,aAAA,WACAj0B,EAAAguB,aAAAjtB,KAAAkB,QAAAgyB,cAAAlzB,QAEAuB,OAAA,SAAA4xB,EAAAC,EAAAC,GACA,GAAApzB,GAAAD,IA8CA,OA3CAC,GAAAizB,eAGAjzB,EAAAkzB,SAAAA,EACAlzB,EAAAmzB,UAAAA,EACAnzB,EAAAozB,QAAAp0B,EAAAO,QACAiL,KAAA,EACAD,MAAA,EACAI,IAAA,EACAD,OAAA,GACA0oB,GACApzB,EAAAg4B,iBAAAh4B,EAAAg4B,qBAGAh4B,EAAAqzB,sBACArzB,EAAAszB,gBACAtzB,EAAAuzB,qBAGAvzB,EAAAi4B,mBACAj4B,EAAAk4B,sBACAl4B,EAAAm4B,kBAGAn4B,EAAAo4B,mBACAp4B,EAAAq4B,aACAr4B,EAAAs4B,kBAEAt4B,EAAAu4B,8BACAv4B,EAAAw4B,uBACAx4B,EAAAy4B,6BAGAz4B,EAAA04B,8BACA14B,EAAA24B,wBACA34B,EAAA44B,6BAEA54B,EAAA2zB,YACA3zB,EAAA4zB,MACA5zB,EAAA6zB,WAEA7zB,EAAA8zB,cAEA9zB,EAAA4K,SAGAkpB,YAAA,WACA90B,EAAAguB,aAAAjtB,KAAAkB,QAAA6yB,aAAA/zB,QAKAszB,oBAAA,WACAr0B,EAAAguB,aAAAjtB,KAAAkB,QAAAoyB,qBAAAtzB,QAEAuzB,cAAA,WACA,GAAAtzB,GAAAD,IAEAC,GAAAovB,gBAEApvB,EAAAiD,MAAAjD,EAAAkzB,SACAlzB,EAAAwK,KAAA,EACAxK,EAAAuK,MAAAvK,EAAAiD,QAEAjD,EAAA4G,OAAA5G,EAAAmzB,UAGAnzB,EAAA2K,IAAA,EACA3K,EAAA0K,OAAA1K,EAAA4G,QAIA5G,EAAAypB,YAAA,EACAzpB,EAAA2pB,WAAA,EACA3pB,EAAA4pB,aAAA,EACA5pB,EAAA6pB,cAAA,GAEA0J,mBAAA,WACAv0B,EAAAguB,aAAAjtB,KAAAkB,QAAAsyB,oBAAAxzB,QAIAk4B,iBAAA,WACAj5B,EAAAguB,aAAAjtB,KAAAkB,QAAAg3B,kBAAAl4B,QAEAm4B,oBAAAl5B,EAAAkL,KACAiuB,gBAAA,WACAn5B,EAAAguB,aAAAjtB,KAAAkB,QAAAk3B,iBAAAp4B,QAIAq4B,iBAAA,WACAp5B,EAAAguB,aAAAjtB,KAAAkB,QAAAm3B,kBAAAr4B,QAEAs4B,WAAAr5B,EAAAkL,KACAouB,gBAAA,WACAt5B,EAAAguB,aAAAjtB,KAAAkB,QAAAq3B,iBAAAv4B,QAGAw4B,4BAAA,WACAv5B,EAAAguB,aAAAjtB,KAAAkB,QAAAs3B,6BAAAx4B,QAEAy4B,qBAAA,WACA,GAAAx4B,GAAAD,KAEA84B,EAAA74B,EAAAiB,QAAAqD,KACAtE,GAAAsE,MAAAtE,EAAAsE,MAAAuE,IAAAgwB,EAAAC,cAAAD,EAAAtf,WAEAkf,2BAAA,WACAz5B,EAAAguB,aAAAjtB,KAAAkB,QAAAw3B,4BAAA14B,QAKA24B,4BAAA,WACA15B,EAAAguB,aAAAjtB,KAAAkB,QAAAy3B,6BAAA34B,QAEA44B,sBAAA,WACA,GAAA34B,GAAAD,KACA3C,EAAA4C,EAAA6F,IACAgzB,EAAA74B,EAAAiB,QAAAqD,MAIAy0B,EAAApC,EAAAkC,EACAz7B,GAAAsuB,KAAAqN,EAAArN,IAEA,IAAAsN,GAAAH,EAAAvB,aAAA,CAEA,IAAAt3B,EAAAiB,QAAAwxB,SAAAzyB,EAAAovB,eAUA,IATA,GAEA6J,GAFAC,EAAAl6B,EAAAysB,YAAAruB,EAAA27B,EAAArN,KAAA1rB,EAAAsE,MAAAtE,EAAAg4B,kBACAmB,EAAAD,EAKA70B,EAAArE,EAAAo5B,gBAAA,GAAAp5B,EAAAo5B,gBAAA,GAAA,EAGAD,EAAA90B,GAAA20B,EAAAH,EAAAtB,aAAA,CACA,GAAA8B,GAAAr6B,EAAAwkB,UAAAwV,EAIA,IAHAC,EAAAj1B,KAAAiH,IAAAouB,GACAr1B,KAAAkH,IAAAmuB,GAEAH,EAAAl5B,EAAAmzB,UAAA,CAEA6F,GACA,OAGAA,IACAG,EAAAF,EAAAC,EAIAl5B,EAAAg5B,cAAAA,GAEAJ,2BAAA,WACA55B,EAAAguB,aAAAjtB,KAAAkB,QAAA23B,4BAAA74B,QAKA4zB,UAAA,WACA30B,EAAAguB,aAAAjtB,KAAAkB,QAAA0yB,WAAA5zB,QAEA6zB,IAAA,WACA,GAAA5zB,GAAAD,KAEA6K,EAAA5K,EAAA4K,SACA3H,MAAA,EACA2D,OAAA,GAGAyD,EAAArK,EAAAiB,QACA43B,EAAAxuB,EAAA/F,MACAg1B,EAAAjvB,EAAA+sB,WACAmC,EAAAlvB,EAAAjL,UACAqzB,EAAApoB,EAAAooB,QACArD,EAAApvB,EAAAovB,eAEA2J,EAAApC,EAAAkC,GACAW,EAAA,IAAA7C,EAAA2C,GAAA7tB,KACAwrB,EAAA5sB,EAAAjL,UAAA63B,cA2BA,IAtBArsB,EAAA3H,MAFAmsB,EAEApvB,EAAAy5B,cAAAz5B,EAAAkzB,SAAAlzB,EAAAozB,QAAA5oB,KAAAxK,EAAAozB,QAAA7oB,MAAAvK,EAAAkzB,SAEAT,GAAA8G,EAAAvC,UAAAC,EAAA,EAKArsB,EAAAhE,OADAwoB,EACAqD,GAAA8G,EAAAvC,UAAAC,EAAA,EAEAj3B,EAAAmzB,UAIAmG,EAAA7G,SAAAA,IACArD,EACAxkB,EAAAhE,QAAA4yB,EAEA5uB,EAAA3H,OAAAu2B,GAKAX,EAAApG,SAAAA,EAAA,CACA,GAAAiH,GAAA16B,EAAAysB,YAAAzrB,EAAA6F,IAAAkzB,EAAArN,KAAA1rB,EAAAsE,MAAAtE,EAAAg4B,kBACA2B,EAAA36B,EAAAstB,mBAAAtsB,EAAAsE,OACAs1B,EAAA,GAAAb,EAAAttB,IAEA,IAAA2jB,EAAA,CAEApvB,EAAA65B,kBAAAH,CAEA,IAAAL,GAAAr6B,EAAAwkB,UAAAxjB,EAAAg5B,eACAC,EAAAj1B,KAAAiH,IAAAouB,GACAS,EAAA91B,KAAAkH,IAAAmuB,GAGAU,EAAAD,EAAAJ,EACAX,EAAAttB,KAAAkuB,EACAC,EAAAD,CAEA/uB,GAAAhE,OAAA5C,KAAAC,IAAAjE,EAAAmzB,UAAAvoB,EAAAhE,OAAAmzB,GACA/5B,EAAA6F,IAAA6lB,KAAAqN,EAAArN,IAEA,IAAAsO,GAAAh6B,EAAAsE,MAAA,GACA21B,EAAAxD,EAAAz2B,EAAA6F,IAAAm0B,EAAAjB,EAAArN,MAEAwO,EAAAl6B,EAAAsE,MAAAtE,EAAAsE,MAAAxH,OAAA,GACAq9B,EAAA1D,EAAAz2B,EAAA6F,IAAAq0B,EAAAnB,EAAArN,KAIA,KAAA1rB,EAAAg5B,eACAh5B,EAAAypB,YAAA,WAAApf,EAAApM,SAAAg7B,EAAAgB,EAAA,EAAAhB,EAAAW,EAAA,EACA55B,EAAA4pB,aAAA,WAAAvf,EAAApM,SAAAg7B,EAAAW,EAAA,EAAAX,EAAAkB,EAAA,IAEAn6B,EAAAypB,YAAAwQ,EAAA,EAAA,EACAj6B,EAAA4pB,aAAAuQ,EAAA,EAAA,OAMAtB,GAAArB,OACAkC,EAAA,EAEAA,GAAA15B,EAAAiB,QAAAqD,MAAAwsB,QAEAlmB,EAAA3H,OAAAy2B,EACA15B,EAAA2pB,WAAAoP,EAAAttB,KAAA,EACAzL,EAAA6pB,cAAAkP,EAAAttB,KAAA,EAIAzL,EAAAo6B,gBAEAp6B,EAAAiD,MAAA2H,EAAA3H,MACAjD,EAAA4G,OAAAgE,EAAAhE,QAOAwzB,cAAA,WACA,GAAAp6B,GAAAD,IACAC,GAAAozB,UACApzB,EAAAypB,YAAAzlB,KAAAE,IAAAlE,EAAAypB,YAAAzpB,EAAAozB,QAAA5oB,KAAA,GACAxK,EAAA2pB,WAAA3lB,KAAAE,IAAAlE,EAAA2pB,WAAA3pB,EAAAozB,QAAAzoB,IAAA,GACA3K,EAAA4pB,aAAA5lB,KAAAE,IAAAlE,EAAA4pB,aAAA5pB,EAAAozB,QAAA7oB,MAAA,GACAvK,EAAA6pB,cAAA7lB,KAAAE,IAAAlE,EAAA6pB,cAAA7pB,EAAAozB,QAAA1oB,OAAA,KAIAmpB,SAAA,WACA70B,EAAAguB,aAAAjtB,KAAAkB,QAAA4yB,UAAA9zB,QAIAqvB,aAAA,WACA,MAAA,QAAArvB,KAAAkB,QAAAhD,UAAA,WAAA8B,KAAAkB,QAAAhD,UAEAw7B,YAAA,WACA,MAAA15B,MAAAkB,QAAA,WAIAgO,cAAA,SAAAorB,GAEA,MAAA,QAAAA,GAAA,SAAA,EACAzyB,IAGA,gBAAA,IAAAgb,SAAAyX,GAIA,gBAAA,GACAA,YAAA/mB,OAAA+mB,EAAA,QACAA,EAEAt6B,KAAAkP,cAAAlP,KAAAqvB,eAAAiL,EAAA73B,EAAA63B,EAAA33B,GAIA23B,EAXAzyB,KAgBA0yB,iBAAAt7B,EAAAkL,KAGA/F,iBAAAnF,EAAAkL,KAGAqwB,iBAAAv7B,EAAAkL,KAGAkvB,gBAAA,SAAA33B,EAAAkN,GACA,GAAA3O,GAAAD,IACA,IAAAC,EAAAovB,eAAA,CACA,GAAAoL,GAAAx6B,EAAAiD,OAAAjD,EAAAypB,YAAAzpB,EAAA4pB,cACAvlB,EAAAm2B,EAAAx2B,KAAAE,IAAAlE,EAAAsE,MAAAxH,QAAAkD,EAAAiB,QAAA7B,UAAA,gBAAA,EAAA,GAAA,GACAq7B,EAAAp2B,EAAA5C,EAAAzB,EAAAypB,WAEA9a,KACA8rB,GAAAp2B,EAAA,EAGA,IAAAq2B,GAAA16B,EAAAwK,KAAAxG,KAAAif,MAAAwX,EAEA,OADAC,IAAA16B,EAAAy5B,cAAAz5B,EAAAozB,QAAA5oB,KAAA,EAGA,GAAAmwB,GAAA36B,EAAA4G,QAAA5G,EAAA2pB,WAAA3pB,EAAA6pB,cACA,OAAA7pB,GAAA2K,IAAAlJ,GAAAk5B,GAAA36B,EAAAsE,MAAAxH,OAAA,KAIA6K,mBAAA,SAAAizB,GACA,GAAA56B,GAAAD,IACA,IAAAC,EAAAovB,eAAA,CACA,GAAAoL,GAAAx6B,EAAAiD,OAAAjD,EAAAypB,YAAAzpB,EAAA4pB,cACAiR,EAAAL,EAAAI,EAAA56B,EAAAypB,YAEAiR,EAAA16B,EAAAwK,KAAAxG,KAAAif,MAAA4X,EAEA,OADAH,IAAA16B,EAAAy5B,cAAAz5B,EAAAozB,QAAA5oB,KAAA,EAGA,MAAAxK,GAAA2K,IAAAiwB,EAAA56B,EAAA4G,QAGA9E,aAAA,WACA,MAAA/B,MAAAoE,iBAAApE,KAAA0D,iBAGAA,aAAA,WACA,GAAAzD,GAAAD,KACAkE,EAAAjE,EAAAiE,IACAC,EAAAlE,EAAAkE,GAEA,OAAAlE,GAAAyQ,YAAA,EACAxM,EAAA,GAAAC,EAAA,EAAAA,EACAD,EAAA,GAAAC,EAAA,EAAAD,EACA,GAKAqB,KAAA,SAAAQ,GACA,GAAA9F,GAAAD,KACAkB,EAAAjB,EAAAiB,OACA,IAAAA,EAAAwxB,QAAA,CAIA,GAOAqI,GAKAC,EAZA39B,EAAA4C,EAAA6F,IACA+wB,EAAA35B,EAAA0B,SAAA6S,OACAwpB,EAAA/5B,EAAAqD,MACAlF,EAAA6B,EAAA7B,UACAg4B,EAAAn2B,EAAAm2B,WAEA6D,EAAA,IAAAj7B,EAAAg5B,cAEAkC,EAAAF,EAAAvD,SACArI,EAAApvB,EAAAovB,cAIA4L,GAAAG,gBACAJ,EAAAC,EAAAG,cAGA,IAAAC,GAAAp8B,EAAA6N,kBAAAmuB,EAAA9F,UAAA0B,EAAA/H,kBACAkK,EAAApC,EAAAqE,GAEAK,EAAAj8B,EAAA43B,UAAA53B,EAAA63B,eAAA,EACAxpB,EAAAzO,EAAA6N,kBAAAzN,EAAAqO,WAAAmpB,EAAAnpB,YACAC,EAAA1O,EAAA6N,kBAAAzN,EAAAsO,iBAAAkpB,EAAAlpB,kBAEA4tB,EAAAt8B,EAAA6N,kBAAAuqB,EAAAlC,UAAA0B,EAAA/H,kBACA0M,EAAA5E,EAAAS,GAEAoE,EAAAx8B,EAAAwkB,UAAAxjB,EAAAg5B,eACAC,EAAAj1B,KAAAiH,IAAAuwB,GACAC,EAAAz7B,EAAA65B,kBAAAZ,CAGA77B,GAAA4L,UAAAoyB,CAEA,IAAAM,KAEA,IAAAtM,EAAA,CAeA,GAdA0L,GAAA,EAIAG,IACAQ,GAAA,IAGAA,EAAAT,EAAAtD,iBAAA13B,EAAAsE,MAAAxH,OAAAkD,EAAAiD,OAAAjD,EAAAypB,YAAAzpB,EAAA4pB,gBACAkR,EAAA,EAAA92B,KAAAyP,OAAAgoB,EAAAT,EAAAtD,iBAAA13B,EAAAsE,MAAAxH,QAAAkD,EAAAiD,OAAAjD,EAAAypB,YAAAzpB,EAAA4pB,iBAKAmR,GAAA/6B,EAAAsE,MAAAxH,OAAAi+B,EACA,MAAAD,GAAA96B,EAAAsE,MAAAxH,QAAAg+B,GAAA,GAAAC,GACAD,IACAA,EAAA,GAEAA,GAAA,CAIAI,KACAJ,GAAA,GAKA,GAAAa,GAAA,UAAA16B,EAAAhD,SAAA+B,EAAAwK,KAAAxK,EAAAuK,MAAA8wB,EACAO,EAAA,UAAA36B,EAAAhD,SAAA+B,EAAAwK,KAAA6wB,EAAAr7B,EAAAuK,MACAsxB,EAAA,WAAA56B,EAAAhD,SAAA+B,EAAA2K,IAAA3K,EAAA0K,OAAA2wB,EACAS,EAAA,WAAA76B,EAAAhD,SAAA+B,EAAA2K,IAAA0wB,EAAAr7B,EAAA0K,MAuJA,IArJA1L,EAAA2B,KAAAX,EAAAsE,MAAA,SAAA/F,EAAAkD,GAEA,GAAAL,SAAA7C,GAAA,OAAAA,EAAA,CAIA,GAAAw9B,GAAA/7B,EAAAsE,MAAAxH,SAAA2E,EAAA,CAIA,OADAq5B,EAAA,GAAAr5B,EAAAq5B,EAAA,GAAAr5B,EAAAq5B,GAAA,GAAAr5B,EAAAq5B,GAAA96B,EAAAsE,MAAAxH,SACAi/B,IAAA36B,SAAA7C,GAAA,OAAAA,EAAA,CAIA,GAAA2K,GAAA8yB,CACAv6B,MAAA,SAAAzB,EAAAi8B,cAAAj8B,EAAAi8B,cAAA,IAEA/yB,EAAA9J,EAAA83B,cACA8E,EAAA58B,EAAA+3B,gBAEAjuB,EAAAlK,EAAAoE,yBAAAhE,EAAA8J,UAAAzH,GACAu6B,EAAAh9B,EAAAoE,yBAAAhE,EAAAyf,MAAApd,GAIA,IAAAy6B,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACArI,EAAA,SACAC,EAAA,QAEA,IAAAnF,EAAA,CAEA,WAAAnuB,EAAAhD,UAEAs2B,EAAA0G,EAAA,SAAA,MACA3G,EAAA2G,EAAA,QAAA,SACA0B,EAAA38B,EAAA2K,IAAA0wB,IAGA9G,EAAA0G,EAAA,SAAA,SACA3G,EAAA2G,EAAA,OAAA,SACA0B,EAAA38B,EAAA0K,OAAA2wB,EAGA,IAAAuB,GAAA58B,EAAAo5B,gBAAA33B,GAAAzC,EAAAwlB,WAAAtb,EACAwzB,GAAA18B,EAAAo5B,gBAAA33B,EAAArC,EAAAC,iBAAA27B,EAAArD,YAEAuE,EAAAE,EAAAE,EAAAE,EAAAI,EACAT,EAAAN,EACAQ,EAAAP,EACAS,EAAAz2B,EAAA6E,IACA8xB,EAAA32B,EAAA4E,WACA,CACA,GAEAmyB,GAFAC,EAAA,SAAA77B,EAAAhD,SACA8+B,EAAA/B,EAAAlK,OAGAkK,GAAAxD,QACAlD,EAAAwI,EAAA,OAAA,QACAD,EAAAE,IAEAzI,EAAAwI,EAAA,QAAA,OACAD,EAAAxB,EAAA0B,GAGAL,EAAAI,EAAA98B,EAAAuK,MAAAsyB,EAAA78B,EAAAwK,KAAAqyB,CAEA,IAAAG,GAAAh9B,EAAAo5B,gBAAA33B,EACAu7B,IAAAh+B,EAAAwlB,WAAAtb,GACAyzB,EAAA38B,EAAAo5B,gBAAA33B,EAAArC,EAAAC,iBAEA68B,EAAAP,EACAS,EAAAR,EACAU,EAAAx2B,EAAA0E,KACAgyB,EAAA12B,EAAAyE,MACA4xB,EAAAE,EAAAE,EAAAE,EAAAO,EAGAtB,EAAAr6B,MACA66B,IAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,OAAAA,EACAC,OAAAA,EACAM,QAAA/zB,EACAg0B,QAAAlB,EACAmB,aAAA1vB,EACA2vB,mBAAA1vB,EACAlE,UAAA,EAAAgyB,EACAj9B,MAAAA,EACAg2B,aAAAA,EACAD,UAAAA,QAKAt1B,EAAA2B,KAAA+6B,EAAA,SAAA2B,GA0BA,GAzBAj+B,EAAAqzB,UACAr1B,EAAA0X,OACA1X,EAAA8L,UAAAm0B,EAAAJ,QACA7/B,EAAA6L,YAAAo0B,EAAAH,QACA9/B,EAAAi4B,cACAj4B,EAAAi4B,YAAAgI,EAAAF,cACA//B,EAAAy1B,eAAAwK,EAAAD,oBAGAhgC,EAAA6W,YAEA7U,EAAA43B,YACA55B,EAAAgX,OAAAipB,EAAAnB,IAAAmB,EAAAlB,KACA/+B,EAAAiX,OAAAgpB,EAAAjB,IAAAiB,EAAAhB,MAGAj9B,EAAA23B,kBACA35B,EAAAgX,OAAAipB,EAAAf,GAAAe,EAAAd,IACAn/B,EAAAiX,OAAAgpB,EAAAb,GAAAa,EAAAZ,KAGAr/B,EAAAyX,SACAzX,EAAA6X,WAGA+lB,EAAAvI,QAAA,CACAr1B,EAAA0X,OACA1X,EAAAkgC,UAAAD,EAAAX,OAAAW,EAAAV,QACAv/B,EAAAmgC,OAAAF,EAAA7zB,UACApM,EAAAsuB,KAAAqN,EAAArN,KACAtuB,EAAAm3B,aAAA8I,EAAA9I,aACAn3B,EAAAk3B,UAAA+I,EAAA/I,SAEA,IAAA/1B,GAAA8+B,EAAA9+B,KACA,IAAAS,EAAA4K,QAAArL,GACA,IAAA,GAAAhC,GAAA,EAAAmG,EAAA,EAAAnG,EAAAgC,EAAAzB,SAAAP,EAEAa,EAAAm4B,SAAA,GAAAh3B,EAAAhC,GAAA,EAAAmG,GAEAA,GAAA,IAAAq2B,EAAAttB,SAGArO,GAAAm4B,SAAAh3B,EAAA,EAAA,EAEAnB,GAAA6X,aAIAmiB,EAAA3E,QAAA,CAEA,GAAA+K,GACAC,EACAj0B,EAAA,CAEA,IAAA4lB,EACAoO,EAAAx9B,EAAAwK,MAAAxK,EAAAuK,MAAAvK,EAAAwK,MAAA,EACAizB,EAAA,WAAAx8B,EAAAhD,SAAA+B,EAAA0K,OAAA6wB,EAAA9vB,KAAA,EAAAzL,EAAA2K,IAAA4wB,EAAA9vB,KAAA,MACA,CACA,GAAAqxB,GAAA,SAAA77B,EAAAhD,QACAu/B,GAAAV,EAAA98B,EAAAwK,KAAA+wB,EAAA9vB,KAAA,EAAAzL,EAAAuK,MAAAgxB,EAAA9vB,KAAA,EACAgyB,EAAAz9B,EAAA2K,KAAA3K,EAAA0K,OAAA1K,EAAA2K,KAAA,EACAnB,EAAAszB,GAAA,GAAA94B,KAAAyF,GAAA,GAAAzF,KAAAyF,GAGArM,EAAA0X,OACA1X,EAAAkgC,UAAAE,EAAAC,GACArgC,EAAAmgC,OAAA/zB,GACApM,EAAAk3B,UAAA,SACAl3B,EAAAm3B,aAAA,SACAn3B,EAAA4L,UAAAsyB,EACAl+B,EAAAsuB,KAAA6P,EAAA7P,KACAtuB,EAAAm4B,SAAA6B,EAAAC,YAAA,EAAA,GACAj6B,EAAA6X,UAGA,GAAA7V,EAAA03B,WAAA,CAEA15B,EAAA8L,UAAAlK,EAAAoE,yBAAAhE,EAAA8J,UAAA,GACA9L,EAAA6L,YAAAjK,EAAAoE,yBAAAhE,EAAAyf,MAAA,EACA,IAAAyd,GAAAt8B,EAAAwK,KACAgyB,EAAAx8B,EAAAuK,MACAgyB,EAAAv8B,EAAA2K,IACA8xB,EAAAz8B,EAAA0K,OAEA8Z,EAAAxlB,EAAAwlB,WAAApnB,EAAA8L,UACAkmB,IACAmN,EAAAE,EAAA,QAAAx7B,EAAAhD,SAAA+B,EAAA0K,OAAA1K,EAAA2K,IACA4xB,GAAA/X,EACAiY,GAAAjY,IAEA8X,EAAAE,EAAA,SAAAv7B,EAAAhD,SAAA+B,EAAAuK,MAAAvK,EAAAwK,KACA8xB,GAAA9X,EACAgY,GAAAhY,GAGApnB,EAAA6W,YACA7W,EAAAgX,OAAAkoB,EAAAC,GACAn/B,EAAAiX,OAAAmoB,EAAAC,GACAr/B,EAAAyX,wCClvBA,YAEA7X,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,OAEA/B,GAAAsb,cAGAmlB,gBAKA/+B,YACAg/B,kBAAA,SAAArgC,EAAAsgC,EAAAj/B,GACAoB,KAAA29B,aAAApgC,GAAAsgC,EACA79B,KAAApB,SAAArB,GAAA0B,EAAA+K,MAAApL,IAEA6Z,oBAAA,SAAAlb,GACA,MAAAyC,MAAA29B,aAAA9e,eAAAthB,GAAAyC,KAAA29B,aAAApgC,GAAA8D,QAEAmgB,iBAAA,SAAAjkB,GAEA,MAAAyC,MAAApB,SAAAigB,eAAAthB,GAAA0B,EAAAsiB,WAAArkB,EAAA0B,SAAAwO,MAAApN,KAAApB,SAAArB,QAEAugC,oBAAA,SAAAvgC,EAAAwgC,GACA,GAAAn/B,GAAAoB,KAAApB,QACAA,GAAAigB,eAAAthB,KACAqB,EAAArB,GAAA0B,EAAAO,OAAAZ,EAAArB,GAAAwgC,KAGArlB,kBAAA,SAAA/F,GAEA1T,EAAA2B,KAAA+R,EAAA3U,OAAA,SAAAoP,GACAlQ,EAAAoc,cAAA4V,OAAAvc,EAAAvF,iCCnCA,YAEAnQ,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,OAMA/B,GAAA26B,OAKAmG,YAoCAxX,OAAA,SAAAyX,EAAAC,GACA,GAKAC,GALA55B,IAMA,IAAA05B,EAAAG,UAAAH,EAAAG,SAAA,EACAD,EAAAF,EAAAG,aACA,CACA,GAAAC,GAAAp/B,EAAAmnB,QAAA8X,EAAA/5B,IAAA+5B,EAAAh6B,KAAA,EACAi6B,GAAAl/B,EAAAmnB,QAAAiY,GAAAJ,EAAAjD,SAAA,IAAA,GAEA,GAAAsD,GAAAr6B,KAAAyP,MAAAwqB,EAAAh6B,IAAAi6B,GAAAA,EACAI,EAAAt6B,KAAAu6B,KAAAN,EAAA/5B,IAAAg6B,GAAAA,CAGAF,GAAA/5B,KAAA+5B,EAAA95B,KAAA85B,EAAAG,UAEAn/B,EAAA+jB,aAAAib,EAAA95B,IAAA85B,EAAA/5B,KAAA+5B,EAAAG,SAAAD,EAAA,OACAG,EAAAL,EAAA/5B,IACAq6B,EAAAN,EAAA95B,IAIA,IAAAs6B,IAAAF,EAAAD,GAAAH,CAGAM,GADAx/B,EAAA6jB,aAAA2b,EAAAx6B,KAAAif,MAAAub,GAAAN,EAAA,KACAl6B,KAAAif,MAAAub,GAEAx6B,KAAAu6B,KAAAC,GAIAl6B,EAAAjD,KAAAD,SAAA48B,EAAA/5B,IAAA+5B,EAAA/5B,IAAAo6B,EACA,KAAA,GAAAv5B,GAAA,EAAAA,EAAA05B,IAAA15B,EACAR,EAAAjD,KAAAg9B,EAAAv5B,EAAAo5B,EAIA,OAFA55B,GAAAjD,KAAAD,SAAA48B,EAAA95B,IAAA85B,EAAA95B,IAAAo6B,GAEAh6B,GAUAm6B,YAAA,SAAAT,EAAAC,GACA,GAWAS,GACAC,EAZAr6B,KACAuI,EAAA7N,EAAA6N,kBAMA+xB,EAAA/xB,EAAAmxB,EAAA/5B,IAAAD,KAAAugB,IAAA,GAAAvgB,KAAAyP,MAAAzU,EAAAqkB,MAAA4a,EAAAh6B,QAEA46B,EAAA76B,KAAAyP,MAAAzU,EAAAqkB,MAAA4a,EAAA/5B,MACA46B,EAAA96B,KAAAu6B,KAAAN,EAAA/5B,IAAAF,KAAAugB,IAAA,GAAAsa,GAIA,KAAAD,GACAF,EAAA16B,KAAAyP,MAAAzU,EAAAqkB,MAAA4a,EAAAc,aACAJ,EAAA36B,KAAAyP,MAAAwqB,EAAAc,WAAA/6B,KAAAugB,IAAA,GAAAma,IAEAp6B,EAAAjD,KAAAu9B,GACAA,EAAAD,EAAA36B,KAAAugB,IAAA,GAAAma,KAEAA,EAAA16B,KAAAyP,MAAAzU,EAAAqkB,MAAAub,IACAD,EAAA36B,KAAAyP,MAAAmrB,EAAA56B,KAAAugB,IAAA,GAAAma,IAGA,IACAp6B,EAAAjD,KAAAu9B,KAEAD,EACA,KAAAA,IACAA,EAAA,IACAD,GAGAE,EAAAD,EAAA36B,KAAAugB,IAAA,GAAAma,SACAA,EAAAG,GAAAH,IAAAG,GAAAF,EAAAG,EAEA,IAAA5E,GAAArtB,EAAAmxB,EAAA95B,IAAA06B,EAGA,OAFAt6B,GAAAjD,KAAA64B,GAEA51B,IAQAuzB,YAOAC,OAAA,SAAAn0B,GACA,MAAA3E,GAAA4K,QAAAjG,GAAAA,EAAA,GAAAA,GAWA4iB,OAAA,SAAAyY,EAAAv9B,EAAA6C,GAEA,GAAA26B,GAAA36B,EAAAxH,OAAA,EAAAwH,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,EAGAN,MAAAyI,IAAAwyB,GAAA,GACAD,IAAAh7B,KAAAyP,MAAAurB,KAEAC,EAAAD,EAAAh7B,KAAAyP,MAAAurB,GAIA,IAAAE,GAAAlgC,EAAAqkB,MAAArf,KAAAyI,IAAAwyB,IACAE,EAAA,EAEA,IAAA,IAAAH,EAAA,CACA,GAAAI,IAAA,EAAAp7B,KAAAyP,MAAAyrB,EACAE,GAAAp7B,KAAAE,IAAAF,KAAAC,IAAAm7B,EAAA,IAAA,GACAD,EAAAH,EAAAK,QAAAD,OAEAD,GAAA,GAGA,OAAAA,IAGAV,YAAA,SAAAO,EAAAv9B,EAAA6C,GACA,GAAAg7B,GAAAN,EAAAh7B,KAAAugB,IAAA,GAAAvgB,KAAAyP,MAAAzU,EAAAqkB,MAAA2b,IAEA,OAAA,KAAAA,EACA,IACA,IAAAM,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAA79B,GAAAA,IAAA6C,EAAAxH,OAAA,EACAkiC,EAAAO,gBAEA,gCC3MA,YAEAviC,GAAAJ,QAAA,SAAAK,GAqLA,QAAAuiC,GAAA9sB,EAAA+sB,GACA,GAAAnhC,GAAA,GAAArB,GAAAyiC,OACA75B,IAAA6M,EAAA9S,MAAAiG,IACA5E,QAAAw+B,EACA7/B,MAAA8S,GAEAA,GAAAitB,WAAArhC,EACArB,EAAAoc,cAAA4V,OAAAvc,EAAApU,GA1LA,GAAAU,GAAA/B,EAAA+B,OAEA/B,GAAA0B,SAAA6S,OAAAlT,OACAm0B,SAAA,EACAx0B,SAAA,MACAoxB,WAAA,EAEA9D,UAAA,OACAuF,QAAA,GAGAroB,KAAA,GAGA,IAAAyB,GAAAlL,EAAAkL,IACAjN,GAAAyiC,MAAAziC,EAAA6U,QAAAvS,QAEAI,WAAA,SAAAtC,GACA,GAAA2C,GAAAD,IACAf,GAAAO,OAAAS,EAAA3C,GAGA2C,EAAA+yB,mBAKAE,aAAA/oB,EACA5I,OAAA,SAAA4xB,EAAAC,EAAAC,GACA,GAAApzB,GAAAD,IA0BA,OAvBAC,GAAAizB,eAGAjzB,EAAAkzB,SAAAA,EACAlzB,EAAAmzB,UAAAA,EACAnzB,EAAAozB,QAAAA,EAGApzB,EAAAqzB,sBACArzB,EAAAszB,gBACAtzB,EAAAuzB,qBAEAvzB,EAAAwzB,oBACAxzB,EAAAyzB,cACAzzB,EAAA0zB,mBAGA1zB,EAAA2zB,YACA3zB,EAAA4zB,MACA5zB,EAAA6zB,WAEA7zB,EAAA8zB,cAEA9zB,EAAA4K,SAGAkpB,YAAA5pB,EAIAmpB,oBAAAnpB,EACAopB,cAAA,WACA,GAAAtzB,GAAAD,IAEAC,GAAAovB,gBAEApvB,EAAAiD,MAAAjD,EAAAkzB,SACAlzB,EAAAwK,KAAA,EACAxK,EAAAuK,MAAAvK,EAAAiD,QAEAjD,EAAA4G,OAAA5G,EAAAmzB,UAGAnzB,EAAA2K,IAAA,EACA3K,EAAA0K,OAAA1K,EAAA4G,QAIA5G,EAAAypB,YAAA,EACAzpB,EAAA2pB,WAAA,EACA3pB,EAAA4pB,aAAA,EACA5pB,EAAA6pB,cAAA,EAGA7pB,EAAA4K,SACA3H,MAAA,EACA2D,OAAA,IAGA2sB,mBAAArpB,EAIAspB,kBAAAtpB,EACAupB,YAAAvpB,EACAwpB,iBAAAxpB,EAIAypB,UAAAzpB,EACA0pB,IAAA,WACA,GAAA5zB,GAAAD,KACA8d,EAAA7e,EAAA6N,kBACAxC,EAAArK,EAAAiB,QACA21B,EAAA35B,EAAA0B,SAAA6S,OACAihB,EAAApoB,EAAAooB,QACAN,EAAAtU,EAAAxT,EAAA8nB,SAAAyE,EAAA7H,iBACAnkB,EAAA5K,EAAA4K,OAEA5K,GAAAovB,gBACAxkB,EAAA3H,MAAAjD,EAAAkzB,SACAtoB,EAAAhE,OAAA6rB,EAAAN,EAAA,EAAA9nB,EAAAymB,QAAA,IAEAlmB,EAAA3H,MAAAwvB,EAAAN,EAAA,EAAA9nB,EAAAymB,QAAA,EACAlmB,EAAAhE,OAAA5G,EAAAmzB,WAGAnzB,EAAAiD,MAAA2H,EAAA3H,MACAjD,EAAA4G,OAAAgE,EAAAhE,QAGAitB,SAAA3pB,EAGAklB,aAAA,WACA,GAAAwQ,GAAA7/B,KAAAkB,QAAAhD,QACA,OAAA,QAAA2hC,GAAA,WAAAA,GAIAt6B,KAAA,WACA,GAAAtF,GAAAD,KACA8F,EAAA7F,EAAA6F,IACAgY,EAAA7e,EAAA6N,kBACAxC,EAAArK,EAAAiB,QACA21B,EAAA35B,EAAA0B,SAAA6S,MAEA,IAAAnH,EAAAooB,QAAA,CACA,GAKAoN,GACAC,EAKA5M,EAXAf,EAAAtU,EAAAxT,EAAA8nB,SAAAyE,EAAA7H,iBACAxD,EAAA1N,EAAAxT,EAAAkhB,UAAAqL,EAAA5H,kBACAxD,EAAA3N,EAAAxT,EAAAmhB,WAAAoL,EAAA9H,mBACAiR,EAAA/gC,EAAAqsB,WAAA8G,EAAA5G,EAAAC,GACAhiB,EAAA,EAGAmB,EAAA3K,EAAA2K,IACAH,EAAAxK,EAAAwK,KACAE,EAAA1K,EAAA0K,OACAH,EAAAvK,EAAAuK,KAGA1E,GAAAmD,UAAA6U,EAAAxT,EAAA6qB,UAAA0B,EAAA/H,kBACAhpB,EAAA6lB,KAAAqU,EAGA//B,EAAAovB,gBACAyQ,EAAAr1B,GAAAD,EAAAC,GAAA,EACAs1B,EAAAn1B,GAAAD,EAAAC,GAAA,EACAuoB,EAAA3oB,EAAAC,IAEAq1B,EAAA,SAAAx1B,EAAApM,SAAAuM,EAAA2nB,EAAA,EAAA5nB,EAAA4nB,EAAA,EACA2N,EAAAn1B,GAAAD,EAAAC,GAAA,EACAuoB,EAAAxoB,EAAAC,EACAnB,EAAAxF,KAAAyF,IAAA,SAAAY,EAAApM,UAAA,GAAA,KAGA4H,EAAAiP,OACAjP,EAAAy3B,UAAAuC,EAAAC,GACAj6B,EAAA03B,OAAA/zB,GACA3D,EAAAyuB,UAAA,SACAzuB,EAAA0uB,aAAA,SACA1uB,EAAA0vB,SAAAlrB,EAAA5B,KAAA,EAAA,EAAAyqB,GACArtB,EAAAoP,cAgBAhY,EAAA0Y,QAAA+f,UACAC,WAAA,SAAAjjB,GACA,GAAA+sB,GAAA/sB,EAAAzR,QAAA3C,KAEAmhC,IACAD,EAAA9sB,EAAA+sB,IAGAxM,aAAA,SAAAvgB,GACA,GAAA+sB,GAAA/sB,EAAAzR,QAAA3C,KAEAmhC,IACAA,EAAAzgC,EAAAmW,YAAAlY,EAAA0B,SAAA6S,OAAAlT,MAAAmhC,GAEA/sB,EAAAitB,WACAjtB,EAAAitB,WAAA1+B,QAAAw+B,EAEAD,EAAA9sB,EAAA+sB,KAGAxiC,EAAAoc,cAAA6V,UAAAxc,EAAAA,EAAAitB,kBACAjtB,GAAAitB,yCCvNA,YAEA3iC,GAAAJ,QAAA,SAAAK,GAOA,QAAA+iC,GAAAC,EAAAC,GACA,GAAArhB,GAAA7f,EAAA6f,MAAAohB,EACA,OAAAphB,GAAAshB,MAAAD,EAAArhB,EAAAshB,SAAAC,aAmFA,QAAAC,GAAAt9B,EAAAu9B,GAUA,MATAA,KACAthC,EAAA4K,QAAA02B,GAEArjB,MAAAnd,UAAAuB,KAAA4Z,MAAAlY,EAAAu9B,GAEAv9B,EAAA1B,KAAAi/B,IAIAv9B,EAMA,QAAAw9B,GAAA/zB,GACA,GAAA7K,GAAA6K,EAAAvK,QACA1B,EAAAiM,EAAAtK,SAAAsK,EAAAc,OACA7L,EAAA+K,EAAApK,OACAvC,EAAA2M,EAAArK,aAEA,QACA1D,OAAAkD,EAAAA,EAAA24B,iBAAA74B,EAAA5B,GAAA,GACAnB,OAAA6B,EAAAA,EAAA+5B,iBAAA74B,EAAA5B,GAAA,GACA4B,MAAAA,EACA5B,aAAAA,EACA2C,EAAAgK,EAAAjK,OAAAC,EACAE,EAAA8J,EAAAjK,OAAAG,GAQA,QAAA89B,GAAAC,GACA,GAAA7J,GAAA35B,EAAA0B,SAAA6S,OACA3E,EAAA7N,EAAA6N,iBAEA,QAEA6zB,SAAAD,EAAAC,SACAC,SAAAF,EAAAE,SACAC,OAAAH,EAAAG,OACAC,OAAAJ,EAAAI,OAGAC,cAAAL,EAAAK,cACAC,gBAAAl0B,EAAA4zB,EAAAO,eAAApK,EAAA9H,mBACAmS,eAAAp0B,EAAA4zB,EAAAS,cAAAtK,EAAA5H,kBACAmS,WAAAV,EAAAW,UACAC,aAAAx0B,EAAA4zB,EAAAY,aAAAzK,EAAA7H,iBACAuS,YAAAb,EAAAa,YAGAC,eAAAd,EAAAc,eACAC,iBAAA30B,EAAA4zB,EAAAgB,gBAAA7K,EAAA9H,mBACA4S,gBAAA70B,EAAA4zB,EAAAkB,eAAA/K,EAAA5H,kBACA4S,cAAA/0B,EAAA4zB,EAAAmB,cAAAhL,EAAA7H,iBACA8S,YAAApB,EAAAqB,WACAC,aAAAtB,EAAAsB,aACAC,kBAAAvB,EAAAuB,kBAGAC,gBAAAxB,EAAAwB,gBACAC,kBAAAr1B,EAAA4zB,EAAA0B,iBAAAvL,EAAA9H,mBACAsT,iBAAAv1B,EAAA4zB,EAAA4B,gBAAAzL,EAAA5H,kBACAsT,eAAAz1B,EAAA4zB,EAAA6B,eAAA1L,EAAA7H,iBACAwT,aAAA9B,EAAA+B,YACAC,cAAAhC,EAAAgC,cACAC,gBAAAjC,EAAAiC,gBAGAC,UAAAlC,EAAAkC,UACAC,aAAAnC,EAAAmC,aACAz/B,gBAAAs9B,EAAAt9B,gBACA+8B,QAAA,EACA2C,sBAAApC,EAAAqC,mBACAC,cAAAtC,EAAAsC,eAOA,QAAAC,GAAAvtB,EAAArP,GACA,GAAAP,GAAA4P,EAAA9I,OAAA9G,IAEAe,EAAA,EAAAR,EAAAu6B,SACA19B,EAAA,EAGAggC,EAAA78B,EAAA68B,KACAC,EAAAD,EAAA/f,OAAA,SAAAxS,EAAAyyB,GACA,MAAAzyB,GAAAyyB,EAAAC,OAAAtmC,OAAAqmC,EAAAE,MAAAvmC,OAAAqmC,EAAAG,MAAAxmC,QACA,EACAomC,IAAA98B,EAAAm9B,WAAAzmC,OAAAsJ,EAAAo9B,UAAA1mC,MAEA,IAAA2mC,GAAAr9B,EAAA9H,MAAAxB,OACA4mC,EAAAt9B,EAAAu9B,OAAA7mC,OACA8kC,EAAAx7B,EAAAw7B,cACAP,EAAAj7B,EAAAi7B,aACAiB,EAAAl8B,EAAAk8B,cAEA17B,IAAA68B,EAAA7B,EACAh7B,GAAA68B,GAAAA,EAAA,GAAAr9B,EAAA27B,aAAA,EACAn7B,GAAA68B,EAAAr9B,EAAA47B,kBAAA,EACAp7B,GAAAs8B,EAAA7B,EACAz6B,GAAAs8B,GAAAA,EAAA,GAAA98B,EAAAk7B,YAAA,EACA16B,GAAA88B,EAAAt9B,EAAAs8B,gBAAA,EACA97B,GAAA88B,EAAA,EACA98B,GAAA88B,GAAAA,EAAA,GAAAt9B,EAAAq8B,cAAA,CAGA,IAAAmB,GAAA,EACAC,EAAA,SAAA/kC,GACAmE,EAAAe,KAAAE,IAAAjB,EAAA4C,EAAAomB,YAAAntB,GAAAmE,MAAA2gC,GA4BA,OAzBA/9B,GAAA6lB,KAAA1sB,EAAAqsB,WAAAuW,EAAAx7B,EAAAs7B,gBAAAt7B,EAAAo7B,kBACAxiC,EAAA2B,KAAAyF,EAAA9H,MAAAulC,GAGAh+B,EAAA6lB,KAAA1sB,EAAAqsB,WAAAgW,EAAAj7B,EAAA66B,eAAA76B,EAAA26B,iBACA/hC,EAAA2B,KAAAyF,EAAAm9B,WAAAjuB,OAAAlP,EAAAo9B,WAAAK,GAGAD,EAAAx9B,EAAA28B,cAAA1B,EAAA,EAAA,EACAriC,EAAA2B,KAAAsiC,EAAA,SAAAE,GACAnkC,EAAA2B,KAAAwiC,EAAAC,OAAAS,GACA7kC,EAAA2B,KAAAwiC,EAAAE,MAAAQ,GACA7kC,EAAA2B,KAAAwiC,EAAAG,MAAAO,KAIAD,EAAA,EAGA/9B,EAAA6lB,KAAA1sB,EAAAqsB,WAAAiX,EAAAl8B,EAAAg8B,iBAAAh8B,EAAA87B,mBACAljC,EAAA2B,KAAAyF,EAAAu9B,OAAAE,GAGA5gC,GAAA,EAAAmD,EAAAs6B,UAGAz9B,MAAAA,EACA2D,OAAAA,GAOA,QAAAk9B,GAAAruB,EAAAhK,GACA,GAAArF,GAAAqP,EAAAlT,OACA3C,EAAA6V,EAAA9I,OACA7G,EAAA2P,EAAA2F,eAAAtV,UACA86B,EAAA,SACAC,EAAA,QAEAz6B,GAAA1D,EAAA+I,EAAA7E,OACAi6B,EAAA,MACAz6B,EAAA1D,EAAA9C,EAAAgH,OAAA6E,EAAA7E,SACAi6B,EAAA,SAGA,IAAAkD,GAAAC,EACAC,EAAAC,EACAC,EACAC,GAAAt+B,EAAA0E,KAAA1E,EAAAyE,OAAA,EACA85B,GAAAv+B,EAAA6E,IAAA7E,EAAA4E,QAAA,CAEA,YAAAm2B,GACAkD,EAAA,SAAAvhC,GACA,MAAAA,IAAA4hC,GAEAJ,EAAA,SAAAxhC,GACA,MAAAA,GAAA4hC,KAGAL,EAAA,SAAAvhC,GACA,MAAAA,IAAAiJ,EAAAxI,MAAA,GAEA+gC,EAAA,SAAAxhC,GACA,MAAAA,IAAA5C,EAAAqD,MAAAwI,EAAAxI,MAAA,IAIAghC,EAAA,SAAAzhC,GACA,MAAAA,GAAAiJ,EAAAxI,MAAArD,EAAAqD,OAEAihC,EAAA,SAAA1hC,GACA,MAAAA,GAAAiJ,EAAAxI,MAAA,GAEAkhC,EAAA,SAAAzhC,GACA,MAAAA,IAAA2hC,EAAA,MAAA,UAGAN,EAAA39B,EAAA5D,IACAo+B,EAAA,OAGAqD,EAAA79B,EAAA5D,KACAo+B,EAAA,SACAC,EAAAsD,EAAA/9B,EAAA1D,KAEAshC,EAAA59B,EAAA5D,KACAo+B,EAAA,QAGAsD,EAAA99B,EAAA5D,KACAo+B,EAAA,SACAC,EAAAsD,EAAA/9B,EAAA1D,IAIA,IAAA2H,GAAAoL,EAAAC,QACA,QACAkrB,OAAAv2B,EAAAu2B,OAAAv2B,EAAAu2B,OAAAA,EACAC,OAAAx2B,EAAAw2B,OAAAx2B,EAAAw2B,OAAAA,GAOA,QAAAyD,GAAAC,EAAA94B,EAAA+4B,GAEA,GAAAhiC,GAAA+hC,EAAA/hC,EACAE,EAAA6hC,EAAA7hC,EAEAigC,EAAA4B,EAAA5B,UACA8B,EAAAF,EAAAE,aACA7B,EAAA2B,EAAA3B,aACAhC,EAAA4D,EAAA5D,OACAC,EAAA2D,EAAA3D,OACA6D,EAAA/B,EAAA8B,EACAE,EAAA/B,EAAA6B,CA4BA,OA1BA,UAAA7D,EACAp+B,GAAAiJ,EAAAxI,MACA,WAAA29B,IACAp+B,GAAAiJ,EAAAxI,MAAA,GAGA,QAAA49B,EACAn+B,GAAAgiC,EAEAhiC,GADA,WAAAm+B,EACAp1B,EAAA7E,OAAA89B,EAEAj5B,EAAA7E,OAAA,EAGA,WAAAi6B,EACA,SAAAD,EACAp+B,GAAAkiC,EACA,UAAA9D,IACAp+B,GAAAkiC,GAEA,SAAA9D,EACAp+B,GAAAmiC,EACA,UAAA/D,IACAp+B,GAAAmiC,IAIAniC,EAAAA,EACAE,EAAAA,GAtWA,GAAA1D,GAAA/B,EAAA+B,OAUA/B,GAAA0B,SAAA6S,OAAApT,UACAyd,SAAA,EACA7Z,OAAA,KACAlE,KAAA,UACAG,SAAA,UACAoc,WAAA,EACAlX,gBAAA,kBACAw+B,eAAA,OACAI,aAAA,EACAC,kBAAA,EACAT,eAAA,OACAO,WAAA,OACAR,YAAA,EACAR,cAAA,OACAM,UAAA,OACAiB,gBAAA,OACAI,cAAA,EACAC,gBAAA,EACAT,gBAAA,OACAO,YAAA,OACA7B,SAAA,EACAD,SAAA,EACAiC,UAAA,EACAC,aAAA,EACAE,mBAAA,OACAC,eAAA,EACA1kC,WAEAumC,YAAA5lC,EAAAkL,KACA5L,MAAA,SAAAqI,EAAA/F,GAEA,GAAAtC,GAAA,GACAsE,EAAAhC,EAAAgC,OACAiiC,EAAAjiC,EAAAA,EAAA9F,OAAA,CAEA,IAAA6J,EAAA7J,OAAA,EAAA,CACA,GAAAkZ,GAAArP,EAAA,EAEAqP,GAAAvX,OACAH,EAAA0X,EAAAvX,OACAomC,EAAA,GAAA7uB,EAAAvU,MAAAojC,IACAvmC,EAAAsE,EAAAoT,EAAAvU,QAIA,MAAAnD,IAEAwmC,WAAA9lC,EAAAkL,KAGAq5B,WAAAvkC,EAAAkL,KAGA66B,YAAA/lC,EAAAkL,KACA3L,MAAA,SAAAC,EAAAoC,GAEA,OADAA,EAAAC,SAAArC,EAAAqB,cAAAtB,OAAA,IACA,KAAAC,EAAAE,QAEAsmC,WAAA,SAAAxmC,EAAAkU,GACA,GAAAzS,GAAAyS,EAAA3R,eAAAvC,EAAAqB,cACAolC,EAAAhlC,EAAAW,KAAApC,EAAAiD,OACAwe,EAAAglB,EAAAvmB,KACA,QACApb,YAAA2c,EAAA3c,YACAH,gBAAA8c,EAAA9c,kBAGA+hC,WAAAlmC,EAAAkL,KAGAs5B,UAAAxkC,EAAAkL,KAGAi7B,aAAAnmC,EAAAkL,KACAy5B,OAAA3kC,EAAAkL,KACAk7B,YAAApmC,EAAAkL,OAqRAjN,EAAAke,QAAAle,EAAA6U,QAAAvS,QACAI,WAAA,WACAI,KAAAwC,OAAAi+B,EAAAzgC,KAAA2V,WAKA2vB,SAAA,WACA,GAAArlC,GAAAD,KACAsK,EAAArK,EAAA0V,SACArX,EAAAgM,EAAAhM,UAEAumC,EAAAvmC,EAAAumC,YAAA3pB,MAAAjb,EAAAkb,WACA5c,EAAAD,EAAAC,MAAA2c,MAAAjb,EAAAkb,WACA4pB,EAAAzmC,EAAAymC,WAAA7pB,MAAAjb,EAAAkb,WAEAmoB,IAKA,OAJAA,GAAAhD,EAAAgD,EAAAuB,GACAvB,EAAAhD,EAAAgD,EAAA/kC,GACA+kC,EAAAhD,EAAAgD,EAAAyB,IAMAQ,cAAA,WACA,GAAAjC,GAAAtjC,KAAA2V,SAAArX,UAAAklC,WAAAtoB,MAAAlb,KAAAmb,UACA,OAAAlc,GAAA4K,QAAAy5B,GAAAA,EAAAjiC,SAAAiiC,GAAAA,OAIAkC,QAAA,SAAA5+B,EAAA/F,GACA,GAAAZ,GAAAD,KACA1B,EAAA2B,EAAA0V,SAAArX,UACAmnC,IAeA,OAbAxmC,GAAA2B,KAAAgG,EAAA,SAAAnI,GACA,GAAA2kC,IACAC,UACAC,SACAC,SAEAjD,GAAA8C,EAAAC,OAAA/kC,EAAA0mC,YAAAloC,KAAAmD,EAAAxB,EAAAoC,IACAy/B,EAAA8C,EAAAE,MAAAhlC,EAAAE,MAAA1B,KAAAmD,EAAAxB,EAAAoC,IACAy/B,EAAA8C,EAAAG,MAAAjlC,EAAA6mC,WAAAroC,KAAAmD,EAAAxB,EAAAoC,IAEA4kC,EAAAnkC,KAAA8hC,KAGAqC,GAIAC,aAAA,WACA,GAAApC,GAAAtjC,KAAA2V,SAAArX,UAAAmlC,UAAAvoB,MAAAlb,KAAAmb,UACA,OAAAlc,GAAA4K,QAAAy5B,GAAAA,EAAAjiC,SAAAiiC,GAAAA,OAKAqC,UAAA,WACA,GAAA1lC,GAAAD,KACA1B,EAAA2B,EAAA0V,SAAArX,UAEA8mC,EAAA9mC,EAAA8mC,aAAAlqB,MAAAjb,EAAAkb,WACAyoB,EAAAtlC,EAAAslC,OAAA1oB,MAAAjb,EAAAkb,WACAkqB,EAAA/mC,EAAA+mC,YAAAnqB,MAAAjb,EAAAkb,WAEAmoB,IAKA,OAJAA,GAAAhD,EAAAgD,EAAA8B,GACA9B,EAAAhD,EAAAgD,EAAAM,GACAN,EAAAhD,EAAAgD,EAAA+B,IAKA9jC,OAAA,SAAAwa,GACA,GA+BAvf,GAAAiJ,EA/BAxF,EAAAD,KACAsK,EAAArK,EAAA0V,SAKAiwB,EAAA3lC,EAAAuC,OACA6D,EAAApG,EAAAuC,OAAAi+B,EAAAn2B,GACA8R,EAAAnc,EAAA4lC,QAEAhlC,EAAAZ,EAAAgZ,MACAtG,EAAA1S,EAAAob,eAGAopB,GACA5D,OAAA+E,EAAA/E,OACAC,OAAA8E,EAAA9E,QAEAgF,GACArjC,EAAAmjC,EAAAnjC,EACAE,EAAAijC,EAAAjjC,GAEAojC,GACA7iC,MAAA0iC,EAAA1iC,MACA2D,OAAA++B,EAAA/+B,QAEAsY,GACA1c,EAAAmjC,EAAAI,OACArjC,EAAAijC,EAAAK,OAKA,IAAA7pB,EAAArf,OAAA,CACAsJ,EAAA85B,QAAA,CAEA,IAAA+F,KACA/mB,GAAAjiB,EAAAke,QAAA+qB,YAAA77B,EAAApM,UAAAke,EAAAnc,EAAAmmC,eAEA,IAAAx/B,KACA,KAAApK,EAAA,EAAAiJ,EAAA2W,EAAArf,OAAAP,EAAAiJ,IAAAjJ,EACAoK,EAAAtF,KAAAk/B,EAAApkB,EAAA5f,IAIA8N,GAAAkF,SACA5I,EAAAA,EAAA4I,OAAA,SAAAlT,GACA,MAAAgO,GAAAkF,OAAAlT,EAAAuE,MAKAyJ,EAAA+7B,WACAz/B,EAAAA,EAAAynB,KAAA,SAAA/xB,EAAAgyB,GACA,MAAAhkB,GAAA+7B,SAAA/pC,EAAAgyB,EAAAztB,MAKA5B,EAAA2B,KAAAgG,EAAA,SAAAnI,GACAynC,EAAA5kC,KAAAgJ,EAAAhM,UAAA2mC,WAAAnoC,KAAAmD,EAAAxB,EAAAkU,MAIAtM,EAAA9H,MAAA0B,EAAAqlC,SAAA1+B,EAAA/F,GACAwF,EAAAm9B,WAAAvjC,EAAAslC,cAAA3+B,EAAA/F,GACAwF,EAAA68B,KAAAjjC,EAAAulC,QAAA5+B,EAAA/F,GACAwF,EAAAo9B,UAAAxjC,EAAAylC,aAAA9+B,EAAA/F,GACAwF,EAAAu9B,OAAA3jC,EAAA0lC,UAAA/+B,EAAA/F,GAGAwF,EAAA5D,EAAAwB,KAAAif,MAAA/D,EAAA1c;oBACA4D,EAAA1D,EAAAsB,KAAAif,MAAA/D,EAAAxc,GACA0D,EAAAq+B,aAAAzlC,EAAA6N,kBAAAqS,EAAA4R,QAAA,GACA1qB,EAAA6/B,YAAAA,EAGA7/B,EAAAigC,WAAA1/B,EAGAm/B,EAAA9C,EAAAjjC,KAAAqG,GACAo+B,EAAAV,EAAA/jC,KAAA+lC,GAEAD,EAAAvB,EAAAl+B,EAAA0/B,EAAAtB,OAEAp+B,GAAA85B,QAAA,CAoBA,OAjBA95B,GAAAw6B,OAAA4D,EAAA5D,OACAx6B,EAAAy6B,OAAA2D,EAAA3D,OACAz6B,EAAA5D,EAAAqjC,EAAArjC,EACA4D,EAAA1D,EAAAmjC,EAAAnjC,EACA0D,EAAAnD,MAAA6iC,EAAA7iC,MACAmD,EAAAQ,OAAAk/B,EAAAl/B,OAGAR,EAAA2/B,OAAA7mB,EAAA1c,EACA4D,EAAA4/B,OAAA9mB,EAAAxc,EAEA1C,EAAAuC,OAAA6D,EAEA0V,GAAAzR,EAAArI,QACAqI,EAAArI,OAAAnF,KAAAmD,EAAAoG,GAGApG,GAEAsmC,UAAA,SAAAC,EAAA96B,EAAAy0B,GACA,GAEA5D,GAAAE,EAAAgK,EACAjK,EAAAE,EAAAgK,EAHAlC,EAAAxkC,KAAA2e,MACA7Y,EAAA9F,KAAA4M,OAAA9G,IAGA88B,EAAA4B,EAAA5B,UACAC,EAAA2B,EAAA3B,aACAhC,EAAA2D,EAAA3D,OACAC,EAAA0D,EAAA1D,OACA6F,EAAAH,EAAA/jC,EACAmkC,EAAAJ,EAAA7jC,EACAO,EAAAwI,EAAAxI,MACA2D,EAAA6E,EAAA7E,MAEA,YAAAi6B,GAEA,SAAAD,GACAtE,EAAAoK,EACAlK,EAAAF,EAAAqG,EACA6D,EAAAlK,IAEAA,EAAAoK,EAAAzjC,EACAu5B,EAAAF,EAAAqG,EACA6D,EAAAlK,GAGAG,EAAAkK,EAAA//B,EAAA,EACA21B,EAAAE,EAAAkG,EACA8D,EAAAhK,EAAAkG,IAEA,SAAA/B,GACAtE,EAAAoK,EAAA9D,EACApG,EAAAF,EAAAqG,EACA6D,EAAAhK,EAAAmG,GACA,UAAA/B,GACAtE,EAAAoK,EAAAzjC,EAAA2/B,EACApG,EAAAF,EAAAqG,EACA6D,EAAAhK,EAAAmG,IAEAnG,EAAAkK,EAAAzjC,EAAA,EACAq5B,EAAAE,EAAAmG,EACA6D,EAAAhK,EAAAmG,GAGA,QAAA9B,GACAtE,EAAAoK,EACAlK,EAAAF,EAAAoG,EACA8D,EAAAlK,IAEAA,EAAAoK,EAAA//B,EACA61B,EAAAF,EAAAoG,EACA8D,EAAAlK,IAIA12B,EAAAmD,UAAAg3B,EAAAuE,EAAAphC,gBAAA+8B,GACAr6B,EAAAoO,YACApO,EAAAuO,OAAAkoB,EAAAC,GACA12B,EAAAwO,OAAAmoB,EAAAC,GACA52B,EAAAwO,OAAAmyB,EAAAC,GACA5gC,EAAAqO,YACArO,EAAA+H,QAEAg5B,UAAA,SAAAx3B,EAAAm1B,EAAA1+B,EAAAq6B,GACA,GAAA5hC,GAAAimC,EAAAjmC,KAEA,IAAAA,EAAAxB,OAAA,CACA+I,EAAAyuB,UAAAiQ,EAAA1C,YACAh8B,EAAA0uB,aAAA,KAEA,IAAAqN,GAAA2C,EAAA3C,cACAG,EAAAwC,EAAAxC,YAEAl8B,GAAAmD,UAAAg3B,EAAAuE,EAAAhD,eAAArB,GACAr6B,EAAA6lB,KAAA1sB,EAAAqsB,WAAAuW,EAAA2C,EAAA7C,gBAAA6C,EAAA/C,iBAEA,IAAAjlC,GAAAiJ,CACA,KAAAjJ,EAAA,EAAAiJ,EAAAlH,EAAAxB,OAAAP,EAAAiJ,IAAAjJ,EACAsJ,EAAA0vB,SAAAj3B,EAAA/B,GAAA6S,EAAA5M,EAAA4M,EAAA1M,GACA0M,EAAA1M,GAAAk/B,EAAAG,EAEAxlC,EAAA,IAAA+B,EAAAxB,SACAsS,EAAA1M,GAAA6hC,EAAAvC,kBAAAD,KAKA8E,SAAA,SAAAz3B,EAAAm1B,EAAA1+B,EAAAq6B,GACA,GAAAmB,GAAAkD,EAAAlD,aACAC,EAAAiD,EAAAjD,YACA2B,EAAAsB,EAAAtB,IAEAp9B,GAAAyuB,UAAAiQ,EAAApD,WACAt7B,EAAA0uB,aAAA,KAEA,IAAAuS,GAAA9G,EAAAuE,EAAAzD,cAAAZ,EACAr6B,GAAAmD,UAAA89B,EACAjhC,EAAA6lB,KAAA1sB,EAAAqsB,WAAAgW,EAAAkD,EAAAtD,eAAAsD,EAAAxD,gBAGA,IAAAgG,GAAA,EACAC,EAAA,SAAAloC,GACA+G,EAAA0vB,SAAAz2B,EAAAsQ,EAAA5M,EAAAukC,EAAA33B,EAAA1M,GACA0M,EAAA1M,GAAA2+B,EAAAC,EAIAtiC,GAAA2B,KAAA4jC,EAAAhB,WAAAyD,EAEA,IAAAC,GAAA1C,EAAAxB,aACAgE,GAAAE,EAAA5F,EAAA,EAAA,EAGAriC,EAAA2B,KAAAsiC,EAAA,SAAAE,EAAA5mC,GACAyC,EAAA2B,KAAAwiC,EAAAC,OAAA4D,GAEAhoC,EAAA2B,KAAAwiC,EAAAE,MAAA,SAAAvkC,GAEAmoC,IAEAphC,EAAAmD,UAAAg3B,EAAAuE,EAAA1B,sBAAA3C,GACAr6B,EAAA0O,SAAAnF,EAAA5M,EAAA4M,EAAA1M,EAAA2+B,EAAAA,GAGAx7B,EAAAoD,YAAA+2B,EAAAuE,EAAA0B,YAAA1pC,GAAA+G,YAAA48B,GACAr6B,EAAA2O,WAAApF,EAAA5M,EAAA4M,EAAA1M,EAAA2+B,EAAAA,GAGAx7B,EAAAmD,UAAAg3B,EAAAuE,EAAA0B,YAAA1pC,GAAA4G,gBAAA+8B,GACAr6B,EAAA0O,SAAAnF,EAAA5M,EAAA,EAAA4M,EAAA1M,EAAA,EAAA2+B,EAAA,EAAAA,EAAA,GAEAx7B,EAAAmD,UAAA89B,GAGAE,EAAAloC,KAGAE,EAAA2B,KAAAwiC,EAAAG,MAAA0D,KAIAD,EAAA,EAGA/nC,EAAA2B,KAAA4jC,EAAAf,UAAAwD,GACA53B,EAAA1M,GAAA4+B,GAEA4F,WAAA,SAAA93B,EAAAm1B,EAAA1+B,EAAAq6B,GACA,GAAAyD,GAAAY,EAAAZ,MAEAA,GAAA7mC,SACAsS,EAAA1M,GAAA6hC,EAAA7B,gBAEA78B,EAAAyuB,UAAAiQ,EAAAhC,aACA18B,EAAA0uB,aAAA,MAEA1uB,EAAAmD,UAAAg3B,EAAAuE,EAAAtC,gBAAA/B,GACAr6B,EAAA6lB,KAAA1sB,EAAAqsB,WAAAkZ,EAAAjC,eAAAiC,EAAAnC,iBAAAmC,EAAArC,mBAEAljC,EAAA2B,KAAAgjC,EAAA,SAAA7kC,GACA+G,EAAA0vB,SAAAz2B,EAAAsQ,EAAA5M,EAAA4M,EAAA1M,GACA0M,EAAA1M,GAAA6hC,EAAAjC,eAAAiC,EAAA9B,kBAIA0E,eAAA,SAAA/3B,EAAAm1B,EAAA1+B,EAAAigC,EAAA5F,GACAr6B,EAAAmD,UAAAg3B,EAAAuE,EAAAphC,gBAAA+8B,GACAlhC,EAAA4V,qBAAA/O,EAAAuJ,EAAA5M,EAAA4M,EAAA1M,EAAAojC,EAAA7iC,MAAA6iC,EAAAl/B,OAAA29B,EAAA3B,cACA/8B,EAAA+H,QAEAtI,KAAA,WACA,GAAAO,GAAA9F,KAAA4M,OAAA9G,IACA0+B,EAAAxkC,KAAA2e,KAEA,IAAA,IAAA6lB,EAAArE,QAAA,CAIA,GAAA4F,IACA7iC,MAAAshC,EAAAthC,MACA2D,OAAA29B,EAAA39B,QAEAwI,GACA5M,EAAA+hC,EAAA/hC,EACAE,EAAA6hC,EAAA7hC,GAIAw9B,EAAAl8B,KAAAyI,IAAA83B,EAAArE,QAAA,MAAA,EAAAqE,EAAArE,OAEAngC,MAAA2V,SAAAmG,UAEA9b,KAAAonC,eAAA/3B,EAAAm1B,EAAA1+B,EAAAigC,EAAA5F,GAGAngC,KAAAumC,UAAAl3B,EAAA02B,EAAA5F,GAGA9wB,EAAA5M,GAAA+hC,EAAA7D,SACAtxB,EAAA1M,GAAA6hC,EAAA5D,SAGA5gC,KAAA6mC,UAAAx3B,EAAAm1B,EAAA1+B,EAAAq6B,GAGAngC,KAAA8mC,SAAAz3B,EAAAm1B,EAAA1+B,EAAAq6B,GAGAngC,KAAAmnC,WAAA93B,EAAAm1B,EAAA1+B,EAAAq6B,MAUAnkB,YAAA,SAAAjgB,GACA,GAAAkE,GAAAD,KACAkB,EAAAjB,EAAA0V,SACAoG,GAAA,CAeA,IAbA9b,EAAAonC,YAAApnC,EAAAonC,gBAGA,aAAAtrC,EAAAwB,KACA0C,EAAA4lC,WAEA5lC,EAAA4lC,QAAA5lC,EAAAob,eAAAb,0BAAAze,EAAAmF,EAAAnD,KAAAmD,GAIA6a,GAAA9c,EAAAsd,YAAAtc,EAAA4lC,QAAA5lC,EAAAonC,aACApnC,EAAAonC,YAAApnC,EAAA4lC,QAEA3kC,EAAA4a,SAAA5a,EAAAe,OAAA,CACAhC,EAAAmmC,gBACA3jC,EAAA1G,EAAA0G,EACAE,EAAA5G,EAAA4G,EAGA,IAAA0D,GAAApG,EAAAuC,MACAvC,GAAAsB,QAAA,GACAtB,EAAAwD,QAGAsY,GAAA1V,EAAA5D,IAAAxC,EAAAuC,OAAAC,GAAA4D,EAAA1D,IAAA1C,EAAAuC,OAAAG,EAGA,MAAAoZ,MAOA7e,EAAAke,QAAA+qB,aAOAmB,QAAA,SAAA5nC,GACA,IAAAA,EAAA3C,OACA,OAAA,CAGA,IAAAP,GAAAiJ,EACAhD,EAAA,EACAE,EAAA,EACAgO,EAAA,CAEA,KAAAnU,EAAA,EAAAiJ,EAAA/F,EAAA3C,OAAAP,EAAAiJ,IAAAjJ,EAAA,CACA,GAAAuuB,GAAArrB,EAAAlD,EACA,IAAAuuB,GAAAA,EAAA3L,WAAA,CACA,GAAAygB,GAAA9U,EAAA5L,iBACA1c,IAAAo9B,EAAAp9B,EACAE,GAAAk9B,EAAAl9B,IACAgO,GAIA,OACAlO,EAAAwB,KAAAif,MAAAzgB,EAAAkO,GACAhO,EAAAsB,KAAAif,MAAAvgB,EAAAgO,KAWAyd,QAAA,SAAA1uB,EAAA6nC,GACA,GAGAC,GAEAhrC,EAAAiJ,EALAhD,EAAA8kC,EAAA9kC,EACAE,EAAA4kC,EAAA5kC,EAGAmrB,EAAAjqB,OAAA8c,iBAEA,KAAAnkB,EAAA,EAAAiJ,EAAA/F,EAAA3C,OAAAP,EAAAiJ,IAAAjJ,EAAA,CACA,GAAAuuB,GAAArrB,EAAAlD,EACA,IAAAuuB,GAAAA,EAAA3L,WAAA,CACA,GAAA4O,GAAAjD,EAAAkD,iBACAjoB,EAAA/G,EAAAolB,sBAAAkjB,EAAAvZ,EAEAhoB,GAAA8nB,IACAA,EAAA9nB,EACAwhC,EAAAzc,IAKA,GAAAyc,EAAA,CACA,GAAAC,GAAAD,EAAAroB,iBACA1c,GAAAglC,EAAAhlC,EACAE,EAAA8kC,EAAA9kC,EAGA,OACAF,EAAAA,EACAE,EAAAA,+BC32BA,YAEA1F,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,QACAyoC,EAAAxqC,EAAA0B,SAAA6S,MAEAi2B,GAAAhoC,SAAAqJ,KACA3F,gBAAAskC,EAAA9a,aACArpB,YAAA,OACAC,YAAA,GAGAtG,EAAAwC,SAAAuK,IAAA/M,EAAA6U,QAAAvS,QACAmoC,aAAA,SAAA3e,GACA,GAAAwb,GAAAxkC,KAAA2e,KAEA,SAAA6lB,GACAvgC,KAAAugB,IAAAwE,EAAAwb,EAAA/hC,EAAA,GAAAwB,KAAAugB,IAAAggB,EAAA18B,OAAA08B,EAAAt8B,YAAA,IAIAylB,QAAA,SAAAia,EAAAC,GACA,GAAArD,GAAAxkC,KAAA2e,KAEA,IAAA6lB,EAAA,CAWA,IAVA,GAAAsD,GAAA7oC,EAAA4kB,kBAAA2gB,GACA/hC,EAAAmlC,EACAjlC,EAAAklC,IAEA1jB,EAAA2jB,EAAA3jB,MACAlT,EAAA62B,EAAA72B,SAGAlG,EAAAy5B,EAAAz5B,WACAC,EAAAw5B,EAAAx5B,SACAA,EAAAD,GACAC,GAAA,EAAA/G,KAAAyF,EAEA,MAAAya,EAAAnZ,GACAmZ,GAAA,EAAAlgB,KAAAyF,EAEA,MAAAya,EAAApZ,GACAoZ,GAAA,EAAAlgB,KAAAyF,EAIA,IAAAq+B,GAAA5jB,GAAApZ,GAAAoZ,GAAAnZ,EACAg9B,EAAA/2B,GAAAuzB,EAAA34B,aAAAoF,GAAAuzB,EAAA54B,WAEA,OAAAm8B,IAAAC,EAEA,OAAA,GAEA/Z,eAAA,WACA,GAAAuW,GAAAxkC,KAAA2e,MACAspB,GAAAzD,EAAAz5B,WAAAy5B,EAAAx5B,UAAA,EACAk9B,GAAA1D,EAAA34B,YAAA24B,EAAA54B,aAAA,CACA,QACAnJ,EAAA+hC,EAAA/hC,EAAAwB,KAAAiH,IAAA+8B,GAAAC,EACAvlC,EAAA6hC,EAAA7hC,EAAAsB,KAAAkH,IAAA88B,GAAAC,IAGA1Z,QAAA,WACA,GAAAgW,GAAAxkC,KAAA2e,KACA,OAAA1a,MAAAyF,KAAA86B,EAAAx5B,SAAAw5B,EAAAz5B,aAAA,EAAA9G,KAAAyF,MAAAzF,KAAAugB,IAAAggB,EAAA54B,YAAA,GAAA3H,KAAAugB,IAAAggB,EAAA34B,YAAA,KAEAsT,gBAAA,WACA,GAAAqlB,GAAAxkC,KAAA2e,MAEAwpB,EAAA3D,EAAAz5B,YAAAy5B,EAAAx5B,SAAAw5B,EAAAz5B,YAAA,EACAq9B,GAAA5D,EAAA54B,YAAA44B,EAAA34B,aAAA,EAAA24B,EAAA34B,WACA,QACApJ,EAAA+hC,EAAA/hC,EAAAwB,KAAAiH,IAAAi9B,GAAAC,EACAzlC,EAAA6hC,EAAA7hC,EAAAsB,KAAAkH,IAAAg9B,GAAAC,IAGA7iC,KAAA,WAEA,GAAAO,GAAA9F,KAAA4M,OAAA9G,IACA0+B,EAAAxkC,KAAA2e,MACA0pB,EAAA7D,EAAAz5B,WACAu9B,EAAA9D,EAAAx5B,QAEAlF,GAAAoO,YAEApO,EAAAiD,IAAAy7B,EAAA/hC,EAAA+hC,EAAA7hC,EAAA6hC,EAAA54B,YAAAy8B,EAAAC,GACAxiC,EAAAiD,IAAAy7B,EAAA/hC,EAAA+hC,EAAA7hC,EAAA6hC,EAAA34B,YAAAy8B,EAAAD,GAAA,GAEAviC,EAAAqO,YACArO,EAAAoD,YAAAs7B,EAAAjhC,YACAuC,EAAAqD,UAAAq7B,EAAAhhC,YAEAsC,EAAAmD,UAAAu7B,EAAAphC,gBAEA0C,EAAA+H,OACA/H,EAAAitB,SAAA,QAEAyR,EAAAhhC,aACAsC,EAAAgP,sCCnGA,YAEA7X,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,QACA43B,EAAA35B,EAAA0B,SAAA6S,MAEAvU,GAAA0B,SAAA6S,OAAA/R,SAAAX,MACAsO,QAAA,GACAjK,gBAAAyzB,EAAAjK,aACAppB,YAAA,EACAD,YAAAszB,EAAAjK,aACAnf,eAAA,OACAC,cACAC,iBAAA,EACAC,gBAAA,QACAuC,iBAAA,EACAtC,MAAA,GAGA3Q,EAAAwC,SAAAhC,KAAAR,EAAA6U,QAAAvS,QACA+F,KAAA,WAoBA,QAAAgjC,GAAAC,EAAA/gC,GACA,GAAAghC,GAAAhhC,EAAAkX,KACAlX,GAAAkX,MAAA7Q,eAAA,GACAhI,EAAAwO,OAAAm0B,EAAAhmC,EAAA+lC,EAAA7pB,MAAAhc,GACAmD,EAAAwO,OAAAm0B,EAAAhmC,EAAAgmC,EAAA9lC,IACA,IAAA8E,EAAAkX,MAAAtR,QACAvH,EAAAwO,OAAAm0B,EAAAhmC,EAAAgmC,EAAA9lC,GAEAmD,EAAA4iC,cACAF,EAAA7pB,MAAA3O,kBACAw4B,EAAA7pB,MAAAzO,kBACAu4B,EAAA54B,sBACA44B,EAAA14B,sBACA04B,EAAAhmC,EACAgmC,EAAA9lC,GAjCA,GAAA1C,GAAAD,KACAwkC,EAAAvkC,EAAA0e,MACA1R,EAAAu3B,EAAAv3B,SACA07B,EAAAnE,EAAAr2B,UACAgY,EAAAlmB,EAAAoR,KAGA8U,KACA,QAAAqe,EAAA32B,KACA86B,EAAAnE,EAAAv2B,SACA,WAAAu2B,EAAA32B,OACA86B,EAAAnE,EAAAt2B,aAIA,IAAApI,GAAA7F,EAAA2M,OAAA9G,GACAA,GAAAiP,MAsBA,IAAAvN,GAAAvH,EAAAuN,UAAA1D,QACA8+B,GAAA,CAGAziB,IAAA3e,EAAAzK,QACAyK,EAAAlG,KAAAkG,EAAA,GAGA,IAAA9F,GAAAojB,EAAAhV,EAAA+4B,CAGA,IAAArhC,EAAAzK,QAAAynC,EAAA32B,KAAA,CAGA,IAFA/H,EAAAoO,YAEAxS,EAAA,EAAAA,EAAA8F,EAAAzK,SAAA2E,EACAojB,EAAAtd,EAAA9F,GACAoO,EAAA7Q,EAAA0Q,aAAAnI,EAAA9F,GACAmnC,EAAA/jB,EAAAnG,MAGA,IAAAjd,GACAykB,EACArgB,EAAAuO,OAAAs0B,EAAAlmC,EAAAkmC,EAAAhmC,GAEAmD,EAAAuO,OAAAw0B,EAAApmC,EAAAkmC,GAGAE,EAAA5gC,OACA2gC,EAAAlnC,EACAoE,EAAAwO,OAAAu0B,EAAApmC,EAAAomC,EAAAlmC,MAGAmN,EAAA84B,KAAA,EAAA94B,EAAAtI,EAAAohC,GAEAC,EAAA5gC,KAEAgF,GAAA27B,IAAAlnC,EAAA,IACAykB,EACArgB,EAAAwO,OAAAq0B,EAAAlmC,EAAAkmC,EAAAhmC,GAEAmD,EAAAwO,OAAAxE,EAAA6O,MAAAlc,EAAAkmC,KAIAC,IAAAlnC,EAAA,EAGAuL,GAAA27B,KAAA,EAEAL,EAAAz4B,EAAAgV,GACAqB,EACArgB,EAAAwO,OAAAu0B,EAAApmC,EAAAomC,EAAAlmC,IAEAmD,EAAAwO,OAAAu0B,EAAApmC,EAAAkmC,GACA7iC,EAAAwO,OAAAu0B,EAAApmC,EAAAomC,EAAAlmC,IAIA4lC,EAAAz4B,EAAAgV,GAEA8jB,EAAAlnC,GAKAykB,IAAAyiB,KAAA,GACA9iC,EAAAwO,OAAA9M,EAAAohC,GAAAjqB,MAAAlc,EAAAkmC,GAGA7iC,EAAAmD,UAAAu7B,EAAAphC,iBAAAyzB,EAAAjK,aACA9mB,EAAAqO,YACArO,EAAA+H,OAIA,GAAAi7B,GAAAjS,EAAAn3B,SAAAX,IAiBA,KAhBA+G,EAAA8sB,QAAA4R,EAAA/2B,gBAAAq7B,EAAAr7B,eAGA3H,EAAAwvB,aACAxvB,EAAAwvB,YAAAkP,EAAA92B,YAAAo7B,EAAAp7B,YAGA5H,EAAAgtB,eAAA0R,EAAA72B,kBAAAm7B,EAAAn7B,iBACA7H,EAAAitB,SAAAyR,EAAA52B,iBAAAk7B,EAAAl7B,gBACA9H,EAAAqD,UAAAq7B,EAAAhhC,aAAAslC,EAAAtlC,YACAsC,EAAAoD,YAAAs7B,EAAAjhC,aAAAszB,EAAAjK,aAGA9mB,EAAAoO,YACA00B,GAAA,EAEAlnC,EAAA,EAAAA,EAAA8F,EAAAzK,SAAA2E,EACAojB,EAAAtd,EAAA9F,GACAoO,EAAA7Q,EAAA0Q,aAAAnI,EAAA9F,GACAmnC,EAAA/jB,EAAAnG,MAGA,IAAAjd,EACAmnC,EAAA5gC,OACAnC,EAAAuO,OAAAw0B,EAAApmC,EAAAomC,EAAAlmC,GACAimC,EAAAlnC,IAGAoO,EAAA84B,KAAA,EAAA94B,EAAAtI,EAAAohC,GAEAC,EAAA5gC,OACA2gC,IAAAlnC,EAAA,IAAAuL,GAAA27B,KAAA,EAEA9iC,EAAAuO,OAAAw0B,EAAApmC,EAAAomC,EAAAlmC,GAGA4lC,EAAAz4B,EAAAgV,GAEA8jB,EAAAlnC,GAKAoE,GAAAgP,SACAhP,EAAAoP,uCCpLA,YAEAjY,GAAAJ,QAAA,SAAAK,GAkBA,QAAA6rC,GAAA/f,GACA,GAAAwb,GAAAxkC,KAAA2e,KACA,SAAA6lB,GAAAvgC,KAAAugB,IAAAwE,EAAAwb,EAAA/hC,EAAA,GAAAwB,KAAAugB,IAAAggB,EAAA18B,OAAA08B,EAAAx8B,UAAA,GAGA,QAAAghC,GAAA/f,GACA,GAAAub,GAAAxkC,KAAA2e,KACA,SAAA6lB,GAAAvgC,KAAAugB,IAAAyE,EAAAub,EAAA7hC,EAAA,GAAAsB,KAAAugB,IAAAggB,EAAA18B,OAAA08B,EAAAx8B,UAAA,GAvBA,GAAA/I,GAAA/B,EAAA+B,QACAyoC,EAAAxqC,EAAA0B,SAAA6S,OACAmb,EAAA8a,EAAA9a,YAEA8a,GAAAhoC,SAAA+H,OACAK,OAAA,EACAkH,WAAA,SACA5L,gBAAAwpB,EACAppB,YAAA,EACAD,YAAAqpB,EAEA5kB,UAAA,EACAE,YAAA,EACAzB,iBAAA,GAaAvJ,EAAAwC,SAAA6H,MAAArK,EAAA6U,QAAAvS,QACAmuB,QAAA,SAAA3E,EAAAC,GACA,GAAAub,GAAAxkC,KAAA2e,KACA,SAAA6lB,GAAAvgC,KAAAugB,IAAAwE,EAAAwb,EAAA/hC,EAAA,GAAAwB,KAAAugB,IAAAyE,EAAAub,EAAA7hC,EAAA,GAAAsB,KAAAugB,IAAAggB,EAAAx8B,UAAAw8B,EAAA18B,OAAA,IAGA6/B,aAAAoB,EACAna,SAAAma,EACAla,SAAAma,EAEA/a,eAAA,WACA,GAAAuW,GAAAxkC,KAAA2e,KACA,QACAlc,EAAA+hC,EAAA/hC,EACAE,EAAA6hC,EAAA7hC,IAGA6rB,QAAA,WACA,MAAAvqB,MAAAyF,GAAAzF,KAAAugB,IAAAxkB,KAAA2e,MAAA7W,OAAA,IAEAqX,gBAAA,WACA,GAAAqlB,GAAAxkC,KAAA2e,KACA,QACAlc,EAAA+hC,EAAA/hC,EACAE,EAAA6hC,EAAA7hC,EACAouB,QAAAyT,EAAA18B,OAAA08B,EAAAhhC,cAGA+B,KAAA,SAAAQ,GACA,GAAAy+B,GAAAxkC,KAAA2e,MACAtY,EAAArG,KAAAwC,OACAsD,EAAA9F,KAAA4M,OAAA9G,IACAkJ,EAAAw1B,EAAAx1B,WACAlH,EAAA08B,EAAA18B,OACArF,EAAA+hC,EAAA/hC,EACAE,EAAA6hC,EAAA7hC,EACAmc,EAAA5hB,EAAA+B,QAAA6f,MAEAmqB,EAAA,CAEAzE,GAAAv8B,OAIAnC,EAAAoD,YAAAs7B,EAAAjhC,aAAAqpB,EACA9mB,EAAAqD,UAAAlK,EAAA6N,kBAAA03B,EAAAhhC,YAAAkkC,EAAAhoC,SAAA+H,MAAAjE,aACAsC,EAAAmD,UAAAu7B,EAAAphC,iBAAAwpB,EAIAvrB,SAAA0E,IAAAM,EAAA5D,EAAAsD,EAAA0E,MAbA,KAaA1E,EAAAyE,MAAAnE,EAAA5D,GAAA4D,EAAA1D,EAAAoD,EAAA6E,KAbA,KAaA7E,EAAA4E,OAAAtE,EAAA1D,KAEA0D,EAAA5D,EAAAsD,EAAA0E,KACAw+B,GAAAxmC,EAAA4D,EAAA5D,IAAAsD,EAAA0E,KAAApE,EAAA5D,GAhBA,KAiBAsD,EAAAyE,MAAAnE,EAAA5D,EACAwmC,GAAA5iC,EAAA5D,EAAAA,IAAA4D,EAAA5D,EAAAsD,EAAAyE,OACAnE,EAAA1D,EAAAoD,EAAA6E,IACAq+B,GAAAtmC,EAAA0D,EAAA1D,IAAAoD,EAAA6E,IAAAvE,EAAA1D,GApBA,KAqBAoD,EAAA4E,OAAAtE,EAAA1D,IACAsmC,GAAA5iC,EAAA1D,EAAAA,IAAA0D,EAAA1D,EAAAoD,EAAA4E,SAEAs+B,EAAAhlC,KAAAif,MAAA,IAAA+lB,GAAA,IACAnjC,EAAAoD,YAAA4V,EAAAhZ,EAAAoD,aAAAk3B,MAAA6I,GAAAjqB,YACAlZ,EAAAmD,UAAA6V,EAAAhZ,EAAAmD,WAAAm3B,MAAA6I,GAAAjqB,aAGA9hB,EAAA0I,cAAAgO,UAAA9N,EAAAkJ,EAAAlH,EAAArF,EAAAE,iCChGA,YAEA1F,GAAAJ,QAAA,SAAAK,GAWA,QAAAgsC,GAAAhqC,GACA,MAAAmC,UAAAnC,EAAAyf,MAAAzb,MASA,QAAAimC,GAAAjqC,GACA,GACAq9B,GAAAE,EAAAD,EAAAE,EADA8H,EAAAtlC,EAAAyf,KAGA,IAAAuqB,EAAAhqC,GAAA,CAEA,GAAAkqC,GAAA5E,EAAAthC,MAAA,CACAq5B,GAAAiI,EAAA/hC,EAAA2mC,EACA3M,EAAA+H,EAAA/hC,EAAA2mC,EACA5M,EAAAv4B,KAAAC,IAAAsgC,EAAA7hC,EAAA6hC,EAAAxhC,MACA05B,EAAAz4B,KAAAE,IAAAqgC,EAAA7hC,EAAA6hC,EAAAxhC,UACA,CAEA,GAAAqmC,GAAA7E,EAAA39B,OAAA,CACA01B,GAAAt4B,KAAAC,IAAAsgC,EAAA/hC,EAAA+hC,EAAAxhC,MACAy5B,EAAAx4B,KAAAE,IAAAqgC,EAAA/hC,EAAA+hC,EAAAxhC,MACAw5B,EAAAgI,EAAA7hC,EAAA0mC,EACA3M,EAAA8H,EAAA7hC,EAAA0mC,EAGA,OACA5+B,KAAA8xB,EACA3xB,IAAA4xB,EACAhyB,MAAAiyB,EACA9xB,OAAA+xB,GA3CA,GAAAgL,GAAAxqC,EAAA0B,SAAA6S,MAEAi2B,GAAAhoC,SAAA+B,WACA2B,gBAAAskC,EAAA9a,aACAppB,YAAA,EACAD,YAAAmkC,EAAA9a,aACAtpB,cAAA,UAyCApG,EAAAwC,SAAAC,UAAAzC,EAAA6U,QAAAvS,QACA+F,KAAA,WAwEA,QAAA+jC,GAAA5nC,GACA,MAAA6nC,IAAAC,EAAA9nC,GAAA,GAxEA,GAEA+I,GAAAD,EAAAI,EAAAD,EAAA8+B,EAAAC,EAAApmC,EAFAwC,EAAA9F,KAAA4M,OAAA9G,IACA0+B,EAAAxkC,KAAA2e,MAEAnb,EAAAghC,EAAAhhC,WAwBA,IAtBAghC,EAAAzhC,YAWA0H,EAAA+5B,EAAAxhC,KACAwH,EAAAg6B,EAAA/hC,EACAmI,EAAA45B,EAAA7hC,EAAA6hC,EAAA39B,OAAA,EACA8D,EAAA65B,EAAA7hC,EAAA6hC,EAAA39B,OAAA,EACA4iC,EAAAj/B,EAAAC,EAAA,GAAA,EACAi/B,EAAA,EACApmC,EAAAkhC,EAAAlhC,eAAA,SAfAmH,EAAA+5B,EAAA/hC,EAAA+hC,EAAAthC,MAAA,EACAsH,EAAAg6B,EAAA/hC,EAAA+hC,EAAAthC,MAAA,EACA0H,EAAA45B,EAAA7hC,EACAgI,EAAA65B,EAAAxhC,KACAymC,EAAA,EACAC,EAAA/+B,EAAAC,EAAA,GAAA,EACAtH,EAAAkhC,EAAAlhC,eAAA,UAcAE,EAAA,CAEA,GAAAmmC,GAAA1lC,KAAAC,IAAAD,KAAAyI,IAAAjC,EAAAD,GAAAvG,KAAAyI,IAAA9B,EAAAD,GACAnH,GAAAA,EAAAmmC,EAAAA,EAAAnmC,CACA,IAAAomC,GAAApmC,EAAA,EAEAqmC,EAAAp/B,GAAA,SAAAnH,EAAAsmC,EAAAH,EAAA,GACAK,EAAAt/B,GAAA,UAAAlH,GAAAsmC,EAAAH,EAAA,GACAM,EAAAn/B,GAAA,QAAAtH,EAAAsmC,EAAAF,EAAA,GACAM,EAAAr/B,GAAA,WAAArH,GAAAsmC,EAAAF,EAAA,EAEAG,KAAAC,IACAl/B,EAAAm/B,EACAp/B,EAAAq/B,GAGAD,IAAAC,IACAv/B,EAAAo/B,EACAr/B,EAAAs/B,GAIAhkC,EAAAoO,YACApO,EAAAmD,UAAAu7B,EAAAphC,gBACA0C,EAAAoD,YAAAs7B,EAAAjhC,YACAuC,EAAAqD,UAAA3F,CAKA,IAAA+lC,KACA9+B,EAAAE,IACAF,EAAAG,IACAJ,EAAAI,IACAJ,EAAAG,IAIAs/B,GAAA,SAAA,OAAA,MAAA,SACAT,EAAAS,EAAA7oC,QAAAkC,EAAA,EACAkmC,MAAA,IACAA,EAAA,EAQA,IAAAU,GAAAZ,EAAA,EACAxjC,GAAAuO,OAAA61B,EAAA,GAAAA,EAAA,GAEA,KAAA,GAAA1tC,GAAA,EAAAA,EAAA,EAAAA,IACA0tC,EAAAZ,EAAA9sC,GACAsJ,EAAAwO,OAAA41B,EAAA,GAAAA,EAAA,GAGApkC,GAAA+H,OACArK,GACAsC,EAAAgP,UAGAjO,OAAA,WACA,GAAA29B,GAAAxkC,KAAA2e,KACA,OAAA6lB,GAAAxhC,KAAAwhC,EAAA7hC,GAEAgrB,QAAA,SAAA3E,EAAAC,GACA,GAAA0E,IAAA,CAEA,IAAA3tB,KAAA2e,MAAA,CACA,GAAAwrB,GAAAhB,EAAAnpC,KACA2tB,GAAA3E,GAAAmhB,EAAA1/B,MAAAue,GAAAmhB,EAAA3/B,OAAAye,GAAAkhB,EAAAv/B,KAAAqe,GAAAkhB,EAAAx/B,OAGA,MAAAgjB,IAEAga,aAAA,SAAA3e,EAAAC,GACA,GAAAhpB,GAAAD,IACA,KAAAC,EAAA0e,MACA,OAAA,CAGA,IACAwrB,GAAAhB,EAAAlpC,EAQA,OANAipC,GAAAjpC,GACA+oB,GAAAmhB,EAAA1/B,MAAAue,GAAAmhB,EAAA3/B,MAEAye,GAAAkhB,EAAAv/B,KAAAqe,GAAAkhB,EAAAx/B,QAKAikB,SAAA,SAAA5F,GACA,GAAAmhB,GAAAhB,EAAAnpC,KACA,OAAAgpB,IAAAmhB,EAAA1/B,MAAAue,GAAAmhB,EAAA3/B,OAEAqkB,SAAA,SAAA5F,GACA,GAAAkhB,GAAAhB,EAAAnpC,KACA,OAAAipB,IAAAkhB,EAAAv/B,KAAAqe,GAAAkhB,EAAAx/B,QAEAsjB,eAAA,WACA,GACAxrB,GAAAE,EADA6hC,EAAAxkC,KAAA2e,KAUA,OARAuqB,GAAAlpC,OACAyC,EAAA+hC,EAAA/hC,EACAE,GAAA6hC,EAAA7hC,EAAA6hC,EAAAxhC,MAAA,IAEAP,GAAA+hC,EAAA/hC,EAAA+hC,EAAAxhC,MAAA,EACAL,EAAA6hC,EAAA7hC,IAGAF,EAAAA,EAAAE,EAAAA,IAEA6rB,QAAA,WACA,GAAAgW,GAAAxkC,KAAA2e,KACA,OAAA6lB,GAAAthC,MAAAe,KAAAyI,IAAA83B,EAAA7hC,EAAA6hC,EAAAxhC,OAEAmc,gBAAA,WACA,GAAAqlB,GAAAxkC,KAAA2e,KACA,QACAlc,EAAA+hC,EAAA/hC,EACAE,EAAA6hC,EAAA7hC,gCC1MA,YAGA1F,GAAAJ,QAAA,SAAAK,GA8BA,QAAAktC,GAAA39B,EAAAue,GACA,GAAApnB,GAAA3E,EAAA0qB,SAAAld,EAAAue,GACAqf,EAAAzmC,GAAAA,EAAA0mC,MAAA,UACA,OAAAD,GAAAxmC,OAAAwmC,EAAA,IAAAhpC,OAQA,QAAAkpC,GAAAn0B,EAAA9Y,GACA,GAAAsa,GAAAxB,EAAAwB,MAIA4yB,EAAAp0B,EAAAq0B,aAAA,UACAC,EAAAt0B,EAAAq0B,aAAA,QAoBA,IAjBAr0B,EAAAsG,UACAiuB,SACA9jC,OAAA2jC,EACAtnC,MAAAwnC,EACA9yB,OACA8a,QAAA9a,EAAA8a,QACA7rB,OAAA+Q,EAAA/Q,OACA3D,MAAA0U,EAAA1U,SAQA0U,EAAA8a,QAAA9a,EAAA8a,SAAA,QAEA,OAAAgY,GAAA,KAAAA,EAAA,CACA,GAAAE,GAAAR,EAAAh0B,EAAA,QACA/U,UAAAupC,IACAx0B,EAAAlT,MAAA0nC,GAIA,GAAA,OAAAJ,GAAA,KAAAA,EACA,GAAA,KAAAp0B,EAAAwB,MAAA/Q,OAIAuP,EAAAvP,OAAAuP,EAAAlT,OAAA5F,EAAA4D,QAAAsH,aAAA,OACA,CACA,GAAAqiC,GAAAT,EAAAh0B,EAAA,SACA/U,UAAAupC,IACAx0B,EAAAvP,OAAAgkC,GAKA,MAAAz0B,GAGA,QAAA00B,GAAAvtC,EAAAsC,EAAA4C,EAAAE,EAAA2Z,GACA,OACA/e,KAAAA,EACAsC,MAAAA,EACAyc,OAAAA,GAAA,KACA7Z,EAAApB,SAAAoB,EAAAA,EAAA,KACAE,EAAAtB,SAAAsB,EAAAA,EAAA,MAIA,QAAAooC,GAAAC,EAAAnrC,GACA,GAAAtC,GAAA0tC,EAAAD,EAAAztC,OAAAytC,EAAAztC,KACAsiC,EAAA5gC,EAAA6pB,oBAAAkiB,EAAAnrC,EACA,OAAAirC,GAAAvtC,EAAAsC,EAAAggC,EAAAp9B,EAAAo9B,EAAAl9B,EAAAqoC,GAGA,QAAAE,GAAA9gB,GACA,GAAA+gB,GAAAhrB,SAAAirB,cAAA,SAgCA,OA/BAD,GAAAE,UAAA,wBACAF,EAAAvzB,MAAA0zB,QACA,yJAgBAH,EAAAI,UAAA,EAKAtsC,EAAA+qB,SAAAmhB,EAAA,OAAA,WACAlsC,EAAA+qB,SAAAmhB,EAAAK,eAAAL,EAAA,SAAA/gB,GAIAA,MAGA+gB,EAGA,QAAAM,GAAAjsB,EAAAhE,EAAA3b,GACA,GAAAyd,GAAAkC,EAAA9C,UACAgvB,SAAA,GAIA90B,EAAA,WACA0G,EAAAouB,UACApuB,EAAAouB,SAAA,EACAzsC,EAAAmU,iBAAAtW,KAAAK,OAAA,WACA,GAAAmgB,EAAAquB,QAEA,MADAruB,GAAAouB,SAAA,EACAlwB,EAAAsvB,EAAA,SAAAjrC,OAOAyd,GAAAquB,QAAAT,EAAAt0B,GAEA4I,EAAAosB,aAAAtuB,EAAAquB,QAAAnsB,EAAAqsB,YAGA,QAAAC,GAAAtsB,GACA,GAAAA,GAAAA,EAAA9C,SAAA,CAIA,GAAAivB,GAAAnsB,EAAA9C,SAAAivB,OACAA,KACAA,EAAA/rB,WAAAmsB,YAAAJ,GACAnsB,EAAA9C,SAAAivB,QAAA,YAGAnsB,GAAA9C,UAjLA,GAAAzd,GAAA/B,EAAA+B,QAKAgsC,GAEAe,WAAA,YACAC,UAAA,YACAC,SAAA,UAGAC,aAAA,aACAC,YAAA,YACAC,YAAA,YACAC,UAAA,UACAC,aAAA,WACAC,WAAA,WAmKA,QACAr2B,eAAA,SAAAF,EAAA3Y,GAaA,GAZA,gBAAA2Y,GACAA,EAAAkK,SAAAssB,eAAAx2B,GACAA,EAAAlZ,SAEAkZ,EAAAA,EAAA,IAGAA,GAAAA,EAAAG,SAEAH,EAAAA,EAAAG,QAGAH,YAAAy2B,mBAAA,CAIA,GAAArvC,GAAA4Y,EAAA02B,YAAA12B,EAAA02B,WAAA,KACA,IAAAtvC,YAAAuvC,0BAEA,MADArC,GAAAt0B,EAAA3Y,GACAD,EAIA,MAAA,OAGA0d,eAAA,SAAA1d,GACA,GAAA+Y,GAAA/Y,EAAA+Y,MACA,IAAAA,EAAAsG,SAAA,CAIA,GAAAiuB,GAAAv0B,EAAAsG,SAAAiuB,SACA,SAAA,SAAAn1B,QAAA,SAAAq3B,GACA,GAAAjpC,GAAA+mC,EAAAkC,EACAxrC,UAAAuC,GAAA,OAAAA,EACAwS,EAAA02B,gBAAAD,GAEAz2B,EAAA22B,aAAAF,EAAAjpC,KAIA3E,EAAA2B,KAAA+pC,EAAA/yB,UAAA,SAAAhU,EAAAkZ,GACA1G,EAAAwB,MAAAkF,GAAAlZ,IAOAwS,EAAAlT,MAAAkT,EAAAlT,YAEAkT,GAAAsG,WAGAf,iBAAA,SAAA9b,EAAAtC,EAAAie,GACA,GAAApF,GAAAvW,EAAAA,MAAAuW,MACA,IAAA,WAAA7Y,EAGA,WADAkuC,GAAAr1B,EAAAwJ,WAAApE,EAAA3b,EAAAA,MAIA,IAAAyd,GAAA9B,EAAAkB,WAAAlB,EAAAkB,aACAswB,EAAA1vB,EAAA0vB,UAAA1vB,EAAA0vB,YACAC,EAAAD,EAAAntC,EAAA1B,GAAA,IAAAZ,GAAA,SAAAytC,GACAxvB,EAAAuvB,EAAAC,EAAAnrC,EAAAA,QAGAZ,GAAA+qB,SAAA5T,EAAA7Y,EAAA0vC,IAGArxB,oBAAA,SAAA/b,EAAAtC,EAAAie,GACA,GAAApF,GAAAvW,EAAAA,MAAAuW,MACA,IAAA,WAAA7Y,EAGA,WADAuuC,GAAA11B,EAAAwJ,WAIA,IAAAtC,GAAA9B,EAAAkB,aACAswB,EAAA1vB,EAAA0vB,YACAC,EAAAD,EAAAntC,EAAA1B,GAAA,IAAAZ,EACA0vC,IAIAhuC,EAAAkrB,YAAA/T,EAAA7Y,EAAA0vC,+BCjRA,YAIA,IAAAC,GAAA3wC,EAAA,oBAEAU,GAAAJ,QAAA,SAAAK,GAMAA,EAAA2Y,UAQAM,eAAA,aAQA4E,eAAA,aASAY,iBAAA,aAQAC,oBAAA,cAsBA1e,EAAA+B,QAAAO,OAAAtC,EAAA2Y,SAAAq3B,EAAAhwC,oDCnEA,YAEAD,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,QAEApB,GACAK,SAAA,UAGAivC,EAAAjwC,EAAA86B,MAAAx4B,QAMA4tC,UAAA,WACA,GAAAvsC,GAAAb,KAAAH,MAAAgB,IACA,QAAAb,KAAAqvB,eAAAxuB,EAAAwsC,QAAAxsC,EAAAysC,UAAAzsC,EAAAgC,QAGAs1B,oBAAA,WACA,GAAAl4B,GAAAD,KACA6C,EAAA5C,EAAAmtC,WACAntC,GAAAstC,SAAA,EACAttC,EAAAutC,SAAA3qC,EAAA9F,OAAA,CACA,IAAAkW,EAEA5R,UAAApB,EAAAiB,QAAAqD,MAAAL,MAEA+O,EAAAhU,EAAAmC,QAAAyB,EAAA5C,EAAAiB,QAAAqD,MAAAL,KACAjE,EAAAstC,SAAAt6B,KAAA,EAAAA,EAAAhT,EAAAstC,UAGAlsC,SAAApB,EAAAiB,QAAAqD,MAAAJ,MAEA8O,EAAAhU,EAAAmC,QAAAyB,EAAA5C,EAAAiB,QAAAqD,MAAAJ,KACAlE,EAAAutC,SAAAv6B,KAAA,EAAAA,EAAAhT,EAAAutC,UAGAvtC,EAAAiE,IAAArB,EAAA5C,EAAAstC,UACAttC,EAAAkE,IAAAtB,EAAA5C,EAAAutC,WAGAlV,WAAA,WACA,GAAAr4B,GAAAD,KACA6C,EAAA5C,EAAAmtC,WAEAntC,GAAAsE,MAAA,IAAAtE,EAAAstC,UAAAttC,EAAAutC,WAAA3qC,EAAA9F,OAAA,EAAA8F,EAAAA,EAAAiH,MAAA7J,EAAAstC,SAAAttC,EAAAutC,SAAA,IAGAjT,iBAAA,SAAA74B,EAAA5B,GACA,GAAAG,GAAAD,KACAa,EAAAZ,EAAAJ,MAAAgB,KACAwuB,EAAApvB,EAAAovB,cAEA,OAAAxuB,GAAAysC,UAAAje,EACApvB,EAAAiP,cAAArO,EAAAC,SAAAhB,GAAAe,KAAAa,IAEAzB,EAAAsE,MAAA7C,EAAAzB,EAAAstC,WAIAnpC,iBAAA,SAAAR,EAAAlC,EAAA5B,EAAA8O,GACA,GAAA3O,GAAAD,KAEAytC,EAAAxpC,KAAAE,IAAAlE,EAAAutC,SAAA,EAAAvtC,EAAAstC,UAAAttC,EAAAiB,QAAA7B,UAAA,gBAAA,EAAA,GAAA,EAEA,IAAAgC,SAAAuC,GAAAqC,MAAAvE,GAAA,CACA,GAAAmB,GAAA5C,EAAAmtC,YACAlX,EAAArzB,EAAAzB,QAAAwC,EACAlC,GAAAw0B,KAAA,EAAAA,EAAAx0B,EAGA,GAAAzB,EAAAovB,eAAA,CACA,GAAAqe,GAAAztC,EAAAiD,MAAAuqC,EACAE,EAAAD,GAAAhsC,EAAAzB,EAAAstC,SAMA,QAJAttC,EAAAiB,QAAA7B,UAAAC,iBAAAsP,GAAA3O,EAAAutC,WAAAvtC,EAAAstC,UAAA3+B,KACA++B,GAAAD,EAAA,GAGAztC,EAAAwK,KAAAxG,KAAAif,MAAAyqB,GAEA,GAAAC,GAAA3tC,EAAA4G,OAAA4mC,EACAI,EAAAD,GAAAlsC,EAAAzB,EAAAstC,SAMA,OAJAttC,GAAAiB,QAAA7B,UAAAC,iBAAAsP,IACAi/B,GAAAD,EAAA,GAGA3tC,EAAA2K,IAAA3G,KAAAif,MAAA2qB,IAEAxU,gBAAA,SAAA33B,EAAAkN,GACA,MAAA5O,MAAAoE,iBAAApE,KAAAuE,MAAA7C,GAAAA,EAAA1B,KAAAutC,SAAA,KAAA3+B,IAEA4rB,iBAAA,SAAAE,GACA,GAAAz6B,GAAAD,KAEAytC,EAAAxpC,KAAAE,IAAAlE,EAAAsE,MAAAxH,QAAAkD,EAAAiB,QAAA7B,UAAA,gBAAA,EAAA,GAAA,GACAyuC,EAAA7tC,EAAAovB,eACA0e,GAAAD,EAAA7tC,EAAAiD,MAAAjD,EAAA4G,QAAA4mC,CAcA,OAZA/S,IAAAoT,EAAA7tC,EAAAwK,KAAAxK,EAAA2K,IAEA3K,EAAAiB,QAAA7B,UAAAC,kBACAo7B,GAAAqT,EAAA,GAGArT,GAAA,EACA,EAEAz2B,KAAAif,MAAAwX,EAAAqT,IAKAhsC,aAAA,WACA,MAAA/B,MAAA2K,SAIAzN,GAAAsb,aAAAolB,kBAAA,WAAAuP,EAAAtvC,6BC1HA,YAEAZ,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,QAEApB,GACAK,SAAA,OACAqG,OACAiV,SAAAtc,EAAA26B,MAAAC,WAAAtR,SAIAwnB,EAAA9wC,EAAA+wC,gBAAAzuC,QACA24B,oBAAA,WAQA,QAAA+V,GAAAhuC,GACA,MAAAmvB,GAAAnvB,EAAA2B,UAAA5B,EAAA9B,GAAA+B,EAAAQ,UAAAT,EAAA9B,GARA,GAAA8B,GAAAD,KACAsK,EAAArK,EAAAiB,QACArB,EAAAI,EAAAJ,MACAgB,EAAAhB,EAAAgB,KACAC,EAAAD,EAAAC,SACAuuB,EAAApvB,EAAAovB,cAOApvB,GAAAiE,IAAA,KACAjE,EAAAkE,IAAA,IAEA,IAAAgqC,GAAA7jC,EAAAnJ,OAeA,IAdAE,SAAA8sC,GACAlvC,EAAA2B,KAAAE,EAAA,SAAAV,EAAAN,GACA,IAAAquC,EAAA,CAIA,GAAAjuC,GAAAL,EAAAmB,eAAAlB,EACAD,GAAAoB,iBAAAnB,IAAAouC,EAAAhuC,IACAmB,SAAAnB,EAAAI,QACA6tC,GAAA,MAKA7jC,EAAAnJ,SAAAgtC,EAAA,CACA,GAAAC,KAEAnvC,GAAA2B,KAAAE,EAAA,SAAAV,EAAAN,GACA,GAAAI,GAAAL,EAAAmB,eAAAlB,GACAgd,GACA5c,EAAA3C,KAEA8D,SAAAiJ,EAAAnJ,SAAAE,SAAAnB,EAAAI,MAAAR,EAAA,GACAI,EAAAI,OACAqI,KAAA,IAEAtH,UAAA+sC,EAAAtxB,KACAsxB,EAAAtxB,IACAuxB,kBACAC,mBAKA,IAAAD,GAAAD,EAAAtxB,GAAAuxB,eACAC,EAAAF,EAAAtxB,GAAAwxB,cAEAzuC,GAAAoB,iBAAAnB,IAAAouC,EAAAhuC,IACAjB,EAAA2B,KAAAR,EAAAS,KAAA,SAAAy5B,EAAA54B,GACA,GAAAkC,IAAA3D,EAAAiP,cAAAorB,EACAr0B,OAAArC,IAAA1D,EAAAW,KAAAa,GAAA0H,SAIAilC,EAAA3sC,GAAA2sC,EAAA3sC,IAAA,EACA4sC,EAAA5sC,GAAA4sC,EAAA5sC,IAAA,EAEA4I,EAAAikC,eACAF,EAAA3sC,GAAA,IACAkC,EAAA,EACA0qC,EAAA5sC,IAAAkC,EAEAyqC,EAAA3sC,IAAAkC,OAMA3E,EAAA2B,KAAAwtC,EAAA,SAAAI,GACA,GAAAzW,GAAAyW,EAAAH,eAAA94B,OAAAi5B,EAAAF,gBACAG,EAAAxvC,EAAAiF,IAAA6zB,GACA2W,EAAAzvC,EAAAkF,IAAA4zB,EACA93B,GAAAiE,IAAA,OAAAjE,EAAAiE,IAAAuqC,EAAAxqC,KAAAC,IAAAjE,EAAAiE,IAAAuqC,GACAxuC,EAAAkE,IAAA,OAAAlE,EAAAkE,IAAAuqC,EAAAzqC,KAAAE,IAAAlE,EAAAkE,IAAAuqC,SAIAzvC,GAAA2B,KAAAE,EAAA,SAAAV,EAAAN,GACA,GAAAI,GAAAL,EAAAmB,eAAAlB,EACAD,GAAAoB,iBAAAnB,IAAAouC,EAAAhuC,IACAjB,EAAA2B,KAAAR,EAAAS,KAAA,SAAAy5B,EAAA54B,GACA,GAAAkC,IAAA3D,EAAAiP,cAAAorB,EACAr0B,OAAArC,IAAA1D,EAAAW,KAAAa,GAAA0H,SAIA,OAAAnJ,EAAAiE,IACAjE,EAAAiE,IAAAN,EACAA,EAAA3D,EAAAiE,MACAjE,EAAAiE,IAAAN,GAGA,OAAA3D,EAAAkE,IACAlE,EAAAkE,IAAAP,EACAA,EAAA3D,EAAAkE,MACAlE,EAAAkE,IAAAP,OAQA5D,MAAA2uC,0BAEAC,aAAA,WACA,GAAA5T,GACA/6B,EAAAD,KACA84B,EAAA74B,EAAAiB,QAAAqD,KAEA,IAAAtE,EAAAovB,eACA2L,EAAA/2B,KAAAC,IAAA40B,EAAAsC,cAAAtC,EAAAsC,cAAA,GAAAn3B,KAAAu6B,KAAAv+B,EAAAiD,MAAA,SACA,CAEA,GAAA2rC,GAAA5vC,EAAA6N,kBAAAgsB,EAAA1G,SAAAl1B,EAAA0B,SAAA6S,OAAAud,gBACAgM,GAAA/2B,KAAAC,IAAA40B,EAAAsC,cAAAtC,EAAAsC,cAAA,GAAAn3B,KAAAu6B,KAAAv+B,EAAA4G,QAAA,EAAAgoC,KAGA,MAAA7T,IAGA8T,yBAAA,WACA9uC,KAAAqvB,gBAEArvB,KAAAuE,MAAAuc,WAGAyZ,iBAAA,SAAA74B,EAAA5B,GACA,OAAAE,KAAAkP,cAAAlP,KAAAH,MAAAgB,KAAAC,SAAAhB,GAAAe,KAAAa,KAGA0C,iBAAA,SAAAR,GAGA,GAIA82B,GAJAz6B,EAAAD,KACAiL,EAAAhL,EAAAgL,MAEAkE,GAAAlP,EAAAiP,cAAAtL,GAEAyiB,EAAApmB,EAAAmL,IAAAH,CAEA,OAAAhL,GAAAovB,gBACAqL,EAAAz6B,EAAAwK,KAAAxK,EAAAiD,MAAAmjB,GAAAlX,EAAAlE,GACAhH,KAAAif,MAAAwX,KAGAA,EAAAz6B,EAAA0K,OAAA1K,EAAA4G,OAAAwf,GAAAlX,EAAAlE,GACAhH,KAAAif,MAAAwX,KAEAF,iBAAA,SAAAE,GACA,GAAAz6B,GAAAD,KACAqvB,EAAApvB,EAAAovB,eACA0f,EAAA1f,EAAApvB,EAAAiD,MAAAjD,EAAA4G,OACAiE,GAAAukB,EAAAqL,EAAAz6B,EAAAwK,KAAAxK,EAAA0K,OAAA+vB,GAAAqU,CACA,OAAA9uC,GAAAgL,OAAAhL,EAAAmL,IAAAnL,EAAAgL,OAAAH,GAEAuuB,gBAAA,SAAA33B,GACA,MAAA1B,MAAAoE,iBAAApE,KAAAgvC,eAAAttC,MAGAxE,GAAAsb,aAAAolB,kBAAA,SAAAoQ,EAAAnwC,6BCrLA,YAEAZ,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,QACAkL,EAAAlL,EAAAkL,IAEAjN,GAAA+wC,gBAAA/wC,EAAA86B,MAAAx4B,QACAmvC,uBAAA,WACA,GAAA1uC,GAAAD,KACAsK,EAAArK,EAAAiB,QACA43B,EAAAxuB,EAAA/F,KAKA,IAAAu0B,EAAApoB,YAAA,CACA,GAAAu+B,GAAAhwC,EAAAokB,KAAApjB,EAAAiE,KACAgrC,EAAAjwC,EAAAokB,KAAApjB,EAAAkE,IAEA8qC,GAAA,GAAAC,EAAA,EAEAjvC,EAAAkE,IAAA,EACA8qC,EAAA,GAAAC,EAAA,IAEAjvC,EAAAiE,IAAA,GAIA7C,SAAAy3B,EAAA50B,IACAjE,EAAAiE,IAAA40B,EAAA50B,IACA7C,SAAAy3B,EAAAqW,eACAlvC,EAAAiE,IAAAD,KAAAC,IAAAjE,EAAAiE,IAAA40B,EAAAqW,eAGA9tC,SAAAy3B,EAAA30B,IACAlE,EAAAkE,IAAA20B,EAAA30B,IACA9C,SAAAy3B,EAAAsW,eACAnvC,EAAAkE,IAAAF,KAAAE,IAAAlE,EAAAkE,IAAA20B,EAAAsW,eAGAnvC,EAAAiE,MAAAjE,EAAAkE,MACAlE,EAAAkE,MAEA20B,EAAApoB,aACAzQ,EAAAiE,QAIA0qC,aAAAzkC,EACA2kC,yBAAA3kC,EAEAmuB,WAAA,WACA,GAAAr4B,GAAAD,KACAsK,EAAArK,EAAAiB,QACA43B,EAAAxuB,EAAA/F,MAMAy2B,EAAA/6B,EAAA2uC,cACA5T,GAAA/2B,KAAAE,IAAA,EAAA62B,EAEA,IAAAqU,IACArU,SAAAA,EACA92B,IAAA40B,EAAA50B,IACAC,IAAA20B,EAAA30B,IACAi6B,SAAAn/B,EAAA6N,kBAAAgsB,EAAAwW,cAAAxW,EAAAsF,WAEA75B,EAAAtE,EAAAsE,MAAArH,EAAA26B,MAAAmG,WAAAxX,OAAA6oB,EAAApvC,EAEAA,GAAA6uC,2BAIA7uC,EAAAkE,IAAAlF,EAAAkF,IAAAI,GACAtE,EAAAiE,IAAAjF,EAAAiF,IAAAK,GAEAu0B,EAAAhY,SACAvc,EAAAuc,UAEA7gB,EAAAgL,MAAAhL,EAAAkE,IACAlE,EAAAmL,IAAAnL,EAAAiE,MAEAjE,EAAAgL,MAAAhL,EAAAiE,IACAjE,EAAAmL,IAAAnL,EAAAkE,MAGAs0B,qBAAA,WACA,GAAAx4B,GAAAD,IACAC,GAAA+uC,eAAA/uC,EAAAsE,MAAAuF,QACA7J,EAAAi8B,cAAAj8B,EAAAsE,MAAAnD,QAAA,GAEAlE,EAAA86B,MAAAj4B,UAAA04B,qBAAA37B,KAAAmD,gCC9FA,YAEAhD,GAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,QAEApB,GACAK,SAAA,OAGAqG,OACAiV,SAAAtc,EAAA26B,MAAAC,WAAA4G,cAIA6Q,EAAAryC,EAAA86B,MAAAx4B,QACA24B,oBAAA,WASA,QAAA+V,GAAAhuC,GACA,MAAAmvB,GAAAnvB,EAAA2B,UAAA5B,EAAA9B,GAAA+B,EAAAQ,UAAAT,EAAA9B,GATA,GAAA8B,GAAAD,KACAsK,EAAArK,EAAAiB,QACA43B,EAAAxuB,EAAA/F,MACA1E,EAAAI,EAAAJ,MACAgB,EAAAhB,EAAAgB,KACAC,EAAAD,EAAAC,SACAgM,EAAA7N,EAAA6N,kBACAuiB,EAAApvB,EAAAovB,cAMApvB,GAAAiE,IAAA,KACAjE,EAAAkE,IAAA,KACAlE,EAAA++B,WAAA,IAEA,IAAAmP,GAAA7jC,EAAAnJ,OAeA,IAdAE,SAAA8sC,GACAlvC,EAAA2B,KAAAE,EAAA,SAAAV,EAAAN,GACA,IAAAquC,EAAA,CAIA,GAAAjuC,GAAAL,EAAAmB,eAAAlB,EACAD,GAAAoB,iBAAAnB,IAAAouC,EAAAhuC,IACAmB,SAAAnB,EAAAI,QACA6tC,GAAA,MAKA7jC,EAAAnJ,SAAAgtC,EAAA,CACA,GAAAC,KAEAnvC,GAAA2B,KAAAE,EAAA,SAAAV,EAAAN,GACA,GAAAI,GAAAL,EAAAmB,eAAAlB,GACAgd,GACA5c,EAAA3C,KAEA8D,SAAAiJ,EAAAnJ,SAAAE,SAAAnB,EAAAI,MAAAR,EAAA,GACAI,EAAAI,OACAqI,KAAA,IAEA9I,GAAAoB,iBAAAnB,IAAAouC,EAAAhuC,KACAmB,SAAA+sC,EAAAtxB,KACAsxB,EAAAtxB,OAGA7d,EAAA2B,KAAAR,EAAAS,KAAA,SAAAy5B,EAAA54B,GACA,GAAAq2B,GAAAqW,EAAAtxB,GACAlZ,GAAA3D,EAAAiP,cAAAorB,EACAr0B,OAAArC,IAAA1D,EAAAW,KAAAa,GAAA0H,SAIA2uB,EAAAr2B,GAAAq2B,EAAAr2B,IAAA,EAEA4I,EAAAikC,eACAxW,EAAAr2B,GAAA,IAGAq2B,EAAAr2B,IAAAkC,QAMA3E,EAAA2B,KAAAwtC,EAAA,SAAAI,GACA,GAAAC,GAAAxvC,EAAAiF,IAAAsqC,GACAE,EAAAzvC,EAAAkF,IAAAqqC,EACAvuC,GAAAiE,IAAA,OAAAjE,EAAAiE,IAAAuqC,EAAAxqC,KAAAC,IAAAjE,EAAAiE,IAAAuqC,GACAxuC,EAAAkE,IAAA,OAAAlE,EAAAkE,IAAAuqC,EAAAzqC,KAAAE,IAAAlE,EAAAkE,IAAAuqC,SAIAzvC,GAAA2B,KAAAE,EAAA,SAAAV,EAAAN,GACA,GAAAI,GAAAL,EAAAmB,eAAAlB,EACAD,GAAAoB,iBAAAnB,IAAAouC,EAAAhuC,IACAjB,EAAA2B,KAAAR,EAAAS,KAAA,SAAAy5B,EAAA54B,GACA,GAAAkC,IAAA3D,EAAAiP,cAAAorB,EACAr0B,OAAArC,IAAA1D,EAAAW,KAAAa,GAAA0H,SAIA,OAAAnJ,EAAAiE,IACAjE,EAAAiE,IAAAN,EACAA,EAAA3D,EAAAiE,MACAjE,EAAAiE,IAAAN,GAGA,OAAA3D,EAAAkE,IACAlE,EAAAkE,IAAAP,EACAA,EAAA3D,EAAAkE,MACAlE,EAAAkE,IAAAP,GAGA,IAAAA,IAAA,OAAA3D,EAAA++B,YAAAp7B,EAAA3D,EAAA++B,cACA/+B,EAAA++B,WAAAp7B,OAOA3D,GAAAiE,IAAA4I,EAAAgsB,EAAA50B,IAAAjE,EAAAiE,KACAjE,EAAAkE,IAAA2I,EAAAgsB,EAAA30B,IAAAlE,EAAAkE,KAEAlE,EAAAiE,MAAAjE,EAAAkE,MACA,IAAAlE,EAAAiE,KAAA,OAAAjE,EAAAiE,KACAjE,EAAAiE,IAAAD,KAAAugB,IAAA,GAAAvgB,KAAAyP,MAAAzU,EAAAqkB,MAAArjB,EAAAiE,MAAA,GACAjE,EAAAkE,IAAAF,KAAAugB,IAAA,GAAAvgB,KAAAyP,MAAAzU,EAAAqkB,MAAArjB,EAAAkE,MAAA,KAEAlE,EAAAiE,IAAA,EACAjE,EAAAkE,IAAA,MAIAm0B,WAAA,WACA,GAAAr4B,GAAAD,KACAsK,EAAArK,EAAAiB,QACA43B,EAAAxuB,EAAA/F,MAEA05B,GACA/5B,IAAA40B,EAAA50B,IACAC,IAAA20B,EAAA30B,KAEAI,EAAAtE,EAAAsE,MAAArH,EAAA26B,MAAAmG,WAAAU,YAAAT,EAAAh+B,EAEAA,GAAAovB,gBAEA9qB,EAAAuc,UAKA7gB,EAAAkE,IAAAlF,EAAAkF,IAAAI,GACAtE,EAAAiE,IAAAjF,EAAAiF,IAAAK,GAEAu0B,EAAAhY,SACAvc,EAAAuc,UAEA7gB,EAAAgL,MAAAhL,EAAAkE,IACAlE,EAAAmL,IAAAnL,EAAAiE,MAEAjE,EAAAgL,MAAAhL,EAAAiE,IACAjE,EAAAmL,IAAAnL,EAAAkE,MAGAs0B,qBAAA,WACAz4B,KAAAwvC,WAAAxvC,KAAAuE,MAAAuF,QAEA5M,EAAA86B,MAAAj4B,UAAA04B,qBAAA37B,KAAAkD,OAGAu6B,iBAAA,SAAA74B,EAAA5B,GACA,OAAAE,KAAAkP,cAAAlP,KAAAH,MAAAgB,KAAAC,SAAAhB,GAAAe,KAAAa,KAEA23B,gBAAA,SAAA33B,GACA,MAAA1B,MAAAoE,iBAAApE,KAAAwvC,WAAA9tC,KAEA0C,iBAAA,SAAAR,GACA,GACAmrC,GACArU,EAIArU,EANApmB,EAAAD,KAIAiL,EAAAhL,EAAAgL,MACAwkC,GAAAxvC,EAAAiP,cAAAtL,GAEA0G,EAAArK,EAAAiB,QACA43B,EAAAxuB,EAAA/F,KAqCA,OAnCAtE,GAAAovB,gBACAhJ,EAAApnB,EAAAqkB,MAAArjB,EAAAmL,KAAAnM,EAAAqkB,MAAArY,GACA,IAAAwkC,EACA/U,EAAAz6B,EAAAwK,MAEAskC,EAAA9uC,EAAAiD,MACAw3B,EAAAz6B,EAAAwK,KAAAskC,EAAA1oB,GAAApnB,EAAAqkB,MAAAmsB,GAAAxwC,EAAAqkB,MAAArY,OAIA8jC,EAAA9uC,EAAA4G,OACA,IAAAoE,GAAA6tB,EAAAhY,QASA,IAAA7gB,EAAAmL,KAAA0tB,EAAAhY,SACAuF,EAAApnB,EAAAqkB,MAAArjB,EAAAgL,OAAAhM,EAAAqkB,MAAArjB,EAAA++B,YAEAtE,EADA+U,IAAAxvC,EAAAmL,IACAnL,EAAA2K,IACA6kC,IAAAxvC,EAAA++B,WACA/+B,EAAA2K,IAAA,IAAAmkC,EAEA9uC,EAAA2K,IAAA,IAAAmkC,EAAA,IAAAA,EAAA1oB,GAAApnB,EAAAqkB,MAAAmsB,GAAAxwC,EAAAqkB,MAAArjB,EAAA++B,eAGA3Y,EAAApnB,EAAAqkB,MAAArjB,EAAAmL,KAAAnM,EAAAqkB,MAAArY,GACA8jC,EAAA9uC,EAAA4G,OACA6zB,EAAAz6B,EAAA0K,OAAAokC,EAAA1oB,GAAApnB,EAAAqkB,MAAAmsB,GAAAxwC,EAAAqkB,MAAArY,MApBAob,EAAApnB,EAAAqkB,MAAArjB,EAAAmL,KAAAnM,EAAAqkB,MAAArjB,EAAA++B,YAEAtE,EADA+U,IAAAxkC,EACAhL,EAAA0K,OACA8kC,IAAAxvC,EAAA++B,WACA/+B,EAAA0K,OAAA,IAAAokC,EAEA9uC,EAAA0K,OAAA,IAAAokC,EAAA,IAAAA,EAAA1oB,GAAApnB,EAAAqkB,MAAAmsB,GAAAxwC,EAAAqkB,MAAArjB,EAAA++B,eAiBAtE,GAEAF,iBAAA,SAAAE,GACA,GAEA92B,GAAAmrC,EAFA9uC,EAAAD,KACAqmB,EAAApnB,EAAAqkB,MAAArjB,EAAAmL,KAAAnM,EAAAqkB,MAAArjB,EAAAgL,MAUA,OAPAhL,GAAAovB,gBACA0f,EAAA9uC,EAAAiD,MACAU,EAAA3D,EAAAgL,MAAAhH,KAAAugB,IAAA,IAAAkW,EAAAz6B,EAAAwK,MAAA4b,EAAA0oB,KAEAA,EAAA9uC,EAAA4G,OACAjD,EAAAK,KAAAugB,IAAA,IAAAvkB,EAAA0K,OAAA+vB,GAAArU,EAAA0oB,GAAA9uC,EAAAgL,OAEArH,IAGA1G,GAAAsb,aAAAolB,kBAAA,cAAA2R,EAAA1xC,6BCjPA,YAEAZ,GAAAJ,QAAA,SAAAK,GA+CA,QAAAwyC,GAAAtiC,GACA,MAAAA,GAAAlM,QAAAuP,QAAA,EAAArD,EAAAvN,MAAAgB,KAAAgC,OAAA9F,OAGA,QAAA4yC,GAAAviC,GACA,GAAAwiC,GAAAxiC,EAAAlM,QAAA2uC,YACAzd,EAAAnzB,EAAA6N,kBAAA8iC,EAAAxd,SAAAyE,EAAA7H,iBACAxD,EAAAvsB,EAAA6N,kBAAA8iC,EAAApkB,UAAAqL,EAAA5H,kBACAxD,EAAAxsB,EAAA6N,kBAAA8iC,EAAAnkB,WAAAoL,EAAA9H,kBAGA,QACArjB,KAAA0mB,EACAxa,MAAA4T,EACAsL,OAAArL,EACAE,KANA1sB,EAAAqsB,WAAA8G,EAAA5G,EAAAC,IAUA,QAAAqkB,GAAAhqC,EAAAssB,EAAA5zB,GACA,MAAAS,GAAA4K,QAAArL,IAEAisB,EAAAxrB,EAAAysB,YAAA5lB,EAAAA,EAAA6lB,KAAAntB,GACAosB,EAAApsB,EAAAzB,OAAAq1B,EAAA,KAAA5zB,EAAAzB,OAAA,GAAAq1B,IAKA3H,EAAA3kB,EAAAomB,YAAA1tB,GAAA0E,MACA0nB,EAAAwH,GAIA,QAAA2d,GAAA5rB,EAAA0b,EAAAn0B,EAAAxH,EAAAC,GACA,MAAAggB,KAAAjgB,GAAAigB,IAAAhgB,GAEA8G,MAAA40B,EAAAn0B,EAAA,EACAN,IAAAy0B,EAAAn0B,EAAA,GAEAyY,EAAAjgB,GAAAigB,EAAAhgB,GAEA8G,MAAA40B,EAAAn0B,EAAA,EACAN,IAAAy0B,IAKA50B,MAAA40B,EACAz0B,IAAAy0B,EAAAn0B,EAAA,GAOA,QAAAskC,GAAA5iC,GA6BA,GAYA5Q,GACAyzC,EACA1+B,EAdA2+B,EAAAP,EAAAviC,GAIA+iC,EAAAlsC,KAAAC,IAAAkJ,EAAAvG,OAAA,EAAAuG,EAAAlK,MAAA,GACAktC,GACAxzC,EAAAwQ,EAAAlK,MACAhH,EAAA,EACAF,EAAAoR,EAAAvG,OACAynB,EAAA,GAEA+hB,IAKAjjC,GAAAtH,IAAA6lB,KAAAukB,EAAAvkB,KACAve,EAAAkjC,mBAEA,IAAAC,GAAAb,EAAAtiC,EACA,KAAA5Q,EAAA,EAAAA,EAAA+zC,EAAA/zC,IAAA,CACA+U,EAAAnE,EAAAojC,iBAAAh0C,EAAA2zC,GACAF,EAAAH,EAAA1iC,EAAAtH,IAAAoqC,EAAAxkC,KAAA0B,EAAAyiC,YAAArzC,IAAA,IACA4Q,EAAAkjC,iBAAA9zC,GAAAyzC,CAGA,IAAA3W,GAAAlsB,EAAAqjC,cAAAj0C,GACA2nB,EAAAllB,EAAA0kB,UAAA2V,GAAA,IACAoX,EAAAX,EAAA5rB,EAAA5S,EAAA9O,EAAAwtC,EAAAxlB,EAAA,EAAA,KACAkmB,EAAAZ,EAAA5rB,EAAA5S,EAAA5O,EAAAstC,EAAArlB,EAAA,GAAA,IAEA8lB,GAAAzlC,MAAAmlC,EAAAxzC,IACAwzC,EAAAxzC,EAAA8zC,EAAAzlC,MACAolC,EAAAzzC,EAAA08B,GAGAoX,EAAAtlC,IAAAglC,EAAAl0C,IACAk0C,EAAAl0C,EAAAw0C,EAAAtlC,IACAilC,EAAAn0C,EAAAo9B,GAGAqX,EAAA1lC,MAAAmlC,EAAAp0C,IACAo0C,EAAAp0C,EAAA20C,EAAA1lC,MACAolC,EAAAr0C,EAAAs9B,GAGAqX,EAAAvlC,IAAAglC,EAAA9hB,IACA8hB,EAAA9hB,EAAAqiB,EAAAvlC,IACAilC,EAAA/hB,EAAAgL,GAIAlsB,EAAAwjC,cAAAT,EAAAC,EAAAC,GAMA,QAAAxc,GAAAzmB,GACA,GAAA+iC,GAAAlsC,KAAAC,IAAAkJ,EAAAvG,OAAA,EAAAuG,EAAAlK,MAAA,EACAkK,GAAAyjC,YAAA5sC,KAAAif,MAAAitB,GACA/iC,EAAA0jC,eAAA,EAAA,EAAA,EAAA,GAGA,QAAAC,GAAA5sB,GACA,MAAA,KAAAA,GAAA,MAAAA,EACA,SACAA,EAAA,IACA,OAGA,QAGA,QAAAqR,GAAA1vB,EAAA4C,EAAAxK,EAAAk0B,GACA,GAAAnzB,EAAA4K,QAAAnB,GAIA,IAAA,GAHA/F,GAAAzE,EAAAyE,EACAw7B,EAAA,IAAA/L,EAEA51B,EAAA,EAAAA,EAAAkM,EAAA3L,SAAAP,EACAsJ,EAAA0vB,SAAA9sB,EAAAlM,GAAA0B,EAAAuE,EAAAE,GACAA,GAAAw7B,MAGAr4B,GAAA0vB,SAAA9sB,EAAAxK,EAAAuE,EAAAvE,EAAAyE,GAIA,QAAAquC,GAAA7sB,EAAA8rB,EAAA/xC,GACA,KAAAimB,GAAA,MAAAA,EACAjmB,EAAAyE,GAAAstC,EAAArlB,EAAA,GACAzG,EAAA,KAAAA,EAAA,MACAjmB,EAAAyE,GAAAstC,EAAArlB,GAIA,QAAAqmB,GAAA7jC,GACA,GAAAtH,GAAAsH,EAAAtH,IACAgH,EAAA7N,EAAA6N,kBACAxC,EAAA8C,EAAAlM,QACAgwC,EAAA5mC,EAAA6mC,WACAC,EAAA9mC,EAAAulC,WAEA/pC,GAAAqD,UAAA+nC,EAAA/nC,UACArD,EAAAoD,YAAAgoC,EAAApyB,KAEA,IAAAuyB,GAAAjkC,EAAA8D,8BAAA5G,EAAAwW,QAAA1T,EAAAlJ,IAAAkJ,EAAAjJ,KAGA+rC,EAAAP,EAAAviC,EAEAtH,GAAA0uB,aAAA,KAEA,KAAA,GAAAh4B,GAAAkzC,EAAAtiC,GAAA,EAAA5Q,GAAA,EAAAA,IAAA,CACA,GAAA00C,EAAAxe,QAAA,CACA,GAAA4e,GAAAlkC,EAAAojC,iBAAAh0C,EAAA60C,EACAvrC,GAAAoO,YACApO,EAAAuO,OAAAjH,EAAAyD,QAAAzD,EAAA0D,SACAhL,EAAAwO,OAAAg9B,EAAA7uC,EAAA6uC,EAAA3uC,GACAmD,EAAAgP,SACAhP,EAAAqO,YAGA,GAAAo9B,GAAAnkC,EAAAojC,iBAAAh0C,EAAA60C,EAAA,GAGAG,EAAA1kC,EAAAskC,EAAAjc,UAAA0B,EAAA/H,iBACAhpB,GAAA6lB,KAAAukB,EAAAvkB,KACA7lB,EAAAmD,UAAAuoC,CAEA,IAAAlY,GAAAlsB,EAAAqjC,cAAAj0C,GACA2nB,EAAAllB,EAAA0kB,UAAA2V,EACAxzB,GAAAyuB,UAAAwc,EAAA5sB,GACA6sB,EAAA7sB,EAAA/W,EAAAkjC,iBAAA9zC,GAAA+0C,GACA/b,EAAA1vB,EAAAsH,EAAAyiC,YAAArzC,IAAA,GAAA+0C,EAAArB,EAAAxkC,OAIA,QAAA+lC,GAAArkC,EAAAosB,EAAA1xB,EAAApG,GACA,GAAAoE,GAAAsH,EAAAtH,GAIA,IAHAA,EAAAoD,YAAAjK,EAAAoE,yBAAAm2B,EAAA1a,MAAApd,EAAA,GACAoE,EAAAqD,UAAAlK,EAAAoE,yBAAAm2B,EAAArwB,UAAAzH,EAAA,GAEA0L,EAAAlM,QAAAuP,QAEA3K,EAAAoO,YACApO,EAAAiD,IAAAqE,EAAAyD,QAAAzD,EAAA0D,QAAAhJ,EAAA,EAAA,EAAA7D,KAAAyF,IACA5D,EAAAqO,YACArO,EAAAgP,aACA,CAEA,GAAAy7B,GAAAb,EAAAtiC,EAEA,IAAA,IAAAmjC,EACA,MAGAzqC,GAAAoO,WACA,IAAA3C,GAAAnE,EAAAojC,iBAAA,EAAA1oC,EACAhC,GAAAuO,OAAA9C,EAAA9O,EAAA8O,EAAA5O,EAEA,KAAA,GAAAnG,GAAA,EAAAA,EAAA+zC,EAAA/zC,IACA+U,EAAAnE,EAAAojC,iBAAAh0C,EAAAsL,GACAhC,EAAAwO,OAAA/C,EAAA9O,EAAA8O,EAAA5O,EAGAmD,GAAAqO,YACArO,EAAAgP,UAIA,QAAA48B,GAAAC,GACA,MAAA1yC,GAAAogB,SAAAsyB,GAAAA,EAAA,EA7SA,GAAA1yC,GAAA/B,EAAA+B,QACA43B,EAAA35B,EAAA0B,SAAA6S,OAEA5T,GACA60B,SAAA,EAGAkf,SAAA,EACAnhC,SAAA,EACAvS,SAAA,YAEAizC,YACAze,SAAA,EACA5T,MAAA,qBACA3V,UAAA,GAIA5E,OAEAstC,mBAAA,EAGAC,cAAA,yBAGAC,iBAAA,EAGAC,iBAAA,EAEAx4B,SAAAtc,EAAA26B,MAAAC,WAAAtR,QAGAqpB,aAEAzd,SAAA,GAGA5Y,SAAA,SAAAhb,GACA,MAAAA,MAwQAyzC,EAAA/0C,EAAA+wC,gBAAAzuC,QACA+zB,cAAA,WACA,GAAAtzB,GAAAD,KACAsK,EAAArK,EAAAiB,QACA43B,EAAAxuB,EAAA/F,KAEAtE,GAAAiD,MAAAjD,EAAAkzB,SACAlzB,EAAA4G,OAAA5G,EAAAmzB,UACAnzB,EAAA4Q,QAAA5M,KAAAif,MAAAjjB,EAAAiD,MAAA,GACAjD,EAAA6Q,QAAA7M,KAAAif,MAAAjjB,EAAA4G,OAAA,EAEA,IAAAgE,GAAA5L,EAAAiF,KAAAjE,EAAA4G,OAAA5G,EAAAiD,QACA2rC,EAAA5vC,EAAA6N,kBAAAgsB,EAAA1G,SAAAyE,EAAA7H,gBACA/uB,GAAA4wC,YAAAvmC,EAAAooB,QAAA7nB,EAAA,GAAAgkC,EAAA,EAAA/V,EAAAiZ,kBAAAlnC,EAAA,GAEAstB,oBAAA,WACA,GAAAl4B,GAAAD,KACAH,EAAAI,EAAAJ,MACAqE,EAAAL,OAAA8c,kBACAxc,EAAAN,OAAAuf,iBAEAnkB,GAAA2B,KAAAf,EAAAgB,KAAAC,SAAA,SAAAV,EAAAN,GACA,GAAAD,EAAAoB,iBAAAnB,GAAA,CACA,GAAAI,GAAAL,EAAAmB,eAAAlB,EAEAb,GAAA2B,KAAAR,EAAAS,KAAA,SAAAy5B,EAAA54B,GACA,GAAAkC,IAAA3D,EAAAiP,cAAAorB,EACAr0B,OAAArC,IAAA1D,EAAAW,KAAAa,GAAA0H,SAIAlF,EAAAD,KAAAC,IAAAN,EAAAM,GACAC,EAAAF,KAAAE,IAAAP,EAAAO,SAKAlE,EAAAiE,IAAAA,IAAAL,OAAA8c,kBAAA,EAAAzc,EACAjE,EAAAkE,IAAAA,IAAAN,OAAAuf,kBAAA,EAAAjf,EAGAlE,EAAA0uC,0BAEAC,aAAA,WACA,GAAA9V,GAAA94B,KAAAkB,QAAAqD,MACAsqC,EAAA5vC,EAAA6N,kBAAAgsB,EAAA1G,SAAAyE,EAAA7H,gBACA,OAAA/qB,MAAAC,IAAA40B,EAAAsC,cAAAtC,EAAAsC,cAAA,GAAAn3B,KAAAu6B,KAAAx+B,KAAA6wC,aAAA,IAAAhC,MAEApW,qBAAA,WACA,GAAAx4B,GAAAD,IACA9C,GAAA+wC,gBAAAluC,UAAA04B,qBAAA37B,KAAAmD,GAGAA,EAAA4vC,YAAA5vC,EAAAJ,MAAAgB,KAAAgC,OAAAiG,IAAA7I,EAAAiB,QAAA2uC,YAAAr2B,SAAAvZ,IAEAs6B,iBAAA,SAAA74B,EAAA5B,GACA,OAAAE,KAAAkP,cAAAlP,KAAAH,MAAAgB,KAAAC,SAAAhB,GAAAe,KAAAa,KAEAmyB,IAAA,WACA7zB,KAAAkB,QAAAuP,QACAojB,EAAA7zB,MAEAgwC,EAAAhwC,OAOA4wC,cAAA,SAAAT,EAAAC,EAAAC,GACA,GAAApwC,GAAAD,KACAkyC,EAAA9B,EAAAxzC,EAAAqH,KAAAkH,IAAAklC,EAAAzzC,GACAu1C,EAAAluC,KAAAE,IAAAisC,EAAAl0C,EAAA+D,EAAAiD,MAAA,GAAAe,KAAAkH,IAAAklC,EAAAn0C,GACAk2C,GAAAhC,EAAAp0C,EAAAiI,KAAAiH,IAAAmlC,EAAAr0C,GACAq2C,GAAApuC,KAAAE,IAAAisC,EAAA9hB,EAAAruB,EAAA4G,OAAA,GAAA5C,KAAAiH,IAAAmlC,EAAA/hB,EAEA4jB,GAAAR,EAAAQ,GACAC,EAAAT,EAAAS,GACAC,EAAAV,EAAAU,GACAC,EAAAX,EAAAW,GAEApyC,EAAA4wC,YAAA5sC,KAAAC,IACAD,KAAAif,MAAAitB,GAAA+B,EAAAC,GAAA,GACAluC,KAAAif,MAAAitB,GAAAiC,EAAAC,GAAA,IACApyC,EAAA6wC,eAAAoB,EAAAC,EAAAC,EAAAC,IAEAvB,eAAA,SAAAwB,EAAAC,EAAAC,EAAAC,GACA,GAAAxyC,GAAAD,KACA0yC,EAAAzyC,EAAAiD,MAAAqvC,EAAAtyC,EAAA4wC,YACA8B,EAAAL,EAAAryC,EAAA4wC,YACA+B,EAAAJ,EAAAvyC,EAAA4wC,YACAgC,EAAA5yC,EAAA4G,OAAA4rC,EAAAxyC,EAAA4wC,WAEA5wC,GAAA4Q,QAAA5M,KAAAif,OAAAyvB,EAAAD,GAAA,EAAAzyC,EAAAwK,MACAxK,EAAA6Q,QAAA7M,KAAAif,OAAA0vB,EAAAC,GAAA,EAAA5yC,EAAA2K,MAGA6lC,cAAA,SAAA/uC,GASA,MAAAA,IARA,EAAAuC,KAAAyF,GAAAgmC,EAAA1vC,QACAA,KAAAH,MAAAqB,SAAAlB,KAAAH,MAAAqB,QAAA6J,WACA/K,KAAAH,MAAAqB,QAAA6J,WACA,GAEA9G,KAAAyF,GAAA,EAAA,KAKAwH,8BAAA,SAAAtN,GACA,GAAA3D,GAAAD,IAEA,IAAA,OAAA4D,EACA,MAAA,EAIA,IAAAkvC,GAAA7yC,EAAA4wC,aAAA5wC,EAAAkE,IAAAlE,EAAAiE,IACA,OAAAjE,GAAAiB,QAAA4f,SACA7gB,EAAAkE,IAAAP,GAAAkvC,GAEAlvC,EAAA3D,EAAAiE,KAAA4uC,GAEAtC,iBAAA,SAAA9uC,EAAAqxC,GACA,GAAA9yC,GAAAD,KACAgzC,EAAA/yC,EAAAwwC,cAAA/uC,GAAAuC,KAAAyF,GAAA,CACA,QACAjH,EAAAwB,KAAAif,MAAAjf,KAAAiH,IAAA8nC,GAAAD,GAAA9yC,EAAA4Q,QACAlO,EAAAsB,KAAAif,MAAAjf,KAAAkH,IAAA6nC,GAAAD,GAAA9yC,EAAA6Q,UAGAU,yBAAA,SAAA9P,EAAAkC,GACA,MAAA5D,MAAAwwC,iBAAA9uC,EAAA1B,KAAAkR,8BAAAtN,KAGA0N,gBAAA,WACA,GAAArR,GAAAD,KACAkE,EAAAjE,EAAAiE,IACAC,EAAAlE,EAAAkE,GAEA,OAAAlE,GAAAuR,yBAAA,EACAvR,EAAAyQ,YAAA,EACAxM,EAAA,GAAAC,EAAA,EAAAA,EACAD,EAAA,GAAAC,EAAA,EAAAD,EACA,IAGAqB,KAAA,WACA,GAAAtF,GAAAD,KACAsK,EAAArK,EAAAiB,QACAs4B,EAAAlvB,EAAAjL,UACAy5B,EAAAxuB,EAAA/F,MACAuI,EAAA7N,EAAA6N,iBAEA,IAAAxC,EAAAooB,QAAA,CACA,GAAA5sB,GAAA7F,EAAA6F,IAGA+oC,EAAA/hC,EAAAgsB,EAAA1G,SAAAyE,EAAA7H,iBACAikB,EAAAnmC,EAAAgsB,EAAAtN,UAAAqL,EAAA5H,kBACAikB,EAAApmC,EAAAgsB,EAAArN,WAAAoL,EAAA9H,mBACAokB,EAAAl0C,EAAAqsB,WAAAujB,EAAAoE,EAAAC,EAEAj0C,GAAA2B,KAAAX,EAAAsE,MAAA,SAAA/F,EAAAkD,GAEA,GAAAA,EAAA,GAAA4I,EAAAwW,QAAA,CACA,GAAAsyB,GAAAnzC,EAAAiR,8BAAAjR,EAAA+uC,eAAAttC,IACA2xC,EAAApzC,EAAA6Q,QAAAsiC,CAOA,IAJA5Z,EAAA9G,SAAA,IAAAhxB,GACA+vC,EAAAxxC,EAAAu5B,EAAA4Z,EAAA1xC,GAGAo3B,EAAApG,QAAA,CACA,GAAA2I,GAAAvuB,EAAAgsB,EAAA3D,UAAA0B,EAAA/H,iBAGA,IAFAhpB,EAAA6lB,KAAAwnB,EAEAra,EAAA+Y,kBAAA,CACA,GAAAzY,GAAAtzB,EAAAomB,YAAA1tB,GAAA0E,KACA4C,GAAAmD,UAAA6vB,EAAAgZ,cACAhsC,EAAA0O,SACAvU,EAAA4Q,QAAAuoB,EAAA,EAAAN,EAAAkZ,iBACAqB,EAAAxE,EAAA,EAAA/V,EAAAiZ,iBACA3Y,EAAA,EAAAN,EAAAkZ,iBACAnD,EAAA,EAAA/V,EAAAiZ,kBAIAjsC,EAAAyuB,UAAA,SACAzuB,EAAA0uB,aAAA,SACA1uB,EAAAmD,UAAAoyB,EACAv1B,EAAA0vB,SAAAh3B,EAAAyB,EAAA4Q,QAAAwiC,OAKA/oC,EAAAmG,SACAwgC,EAAAhxC,MAKA/C,GAAAsb,aAAAolB,kBAAA,eAAAqU,EAAAp0C,6BC7fA,YAEA,IAAAy1C,GAAA/2C,EAAA,SACA+2C,GAAA,kBAAA,GAAAA,EAAAn2C,OAAAm2C,OAEAr2C,EAAAJ,QAAA,SAAAK,GAEA,GAAA+B,GAAA/B,EAAA+B,QACAs0C,GACAC,QACAC,KAAA,cACAC,OAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,IAAA,IAAA,OAEAD,KAAA,SACAC,OAAA,EAAA,EAAA,EAAA,GAAA,MAEAD,KAAA,SACAC,OAAA,EAAA,EAAA,EAAA,GAAA,MAEAD,KAAA,OACAC,OAAA,EAAA,EAAA,EAAA,EAAA,MAEAD,KAAA,MACAC,OAAA,EAAA,EAAA,KAEAD,KAAA,OACAE,QAAA,IAEAF,KAAA,QACAE,QAAA,IAEAF,KAAA,UACAE,QAAA,IAEAF,KAAA,OACAE,SAAA,KAIA91C,GACAK,SAAA,SAEAq1C,MACAK,QAAA,EACAC,QAAA,EACAC,MAAA,EACA5wB,OAAA,EACA6wB,eAAA,EACAC,YAAA,EACAC,QAAA,cAGAC,gBACAC,YAAA,gBACAC,OAAA,YACAC,OAAA,YACAC,KAAA,YACAC,IAAA,KACAC,KAAA,KACAC,MAAA,WACAC,QAAA,cACAC,KAAA,SAGApwC,OACAmzB,UAAA,IAIAkd,EAAA13C,EAAA86B,MAAAx4B,QACAI,WAAA,WACA,IAAA0zC,EACA,KAAA,IAAA52C,OAAA,uIAGAQ,GAAA86B,MAAAj4B,UAAAH,WAAA9C,KAAAkD,OAEA60C,eAAA,SAAA/0C,EAAA4B,GACA,MAAA,QAAA5B,GAAA,OAAA4B,EACA,KAGA,SAAA1B,KAAA80C,aAAAh1C,GACAE,KAAA80C,aAAAh1C,GAAA4B,GAGA,MAEAqzC,aAAA,SAAAj1C,EAAA4B,GACA,GAAAzB,GAAAD,IACA,OAAA,QAAAF,GAAA,OAAA4B,EACA,MAGAL,SAAApB,EAAA+0C,YACA/0C,EAAAg1C,kBAGA,SAAAh1C,EAAA+0C,WAAAl1C,GACAG,EAAA+0C,WAAAl1C,GAAA4B,GAGA,OAEAwzC,iBAAA,SAAAve,GACA,GAAA12B,GAAAD,IACA,OAAA,SAAAC,EAAAiB,QAAAqyC,KAAAO,MAAA7zC,EAAAiB,QAAAqyC,KAAAS,cAAA,EACArd,EAAA3sB,QAAAmrC,QAAA,WAAAnB,WAAA/zC,EAAAiB,QAAAqyC,KAAAS,YAEArd,EAAA3sB,QAAAmrC,QAAAl1C,EAAAm1C,WAEAjd,oBAAA,WACA,GAAAl4B,GAAAD,IACAC,GAAA60C,eAIA,IAAAO,KACAp1C,GAAAJ,MAAAgB,KAAAgC,QAAA5C,EAAAJ,MAAAgB,KAAAgC,OAAA9F,OAAA,GACAkC,EAAA2B,KAAAX,EAAAJ,MAAAgB,KAAAgC,OAAA,SAAArE,GACA,GAAA82C,GAAAr1C,EAAAs1C,UAAA/2C,EAEA82C,GAAAE,YACAv1C,EAAAiB,QAAAqyC,KAAArwB,OACAoyB,EAAAH,QAAAl1C,EAAAiB,QAAAqyC,KAAArwB,OAEAmyB,EAAA/zC,KAAAg0C,KAEAr1C,GAEAA,EAAAg6B,UAAAqZ,EAAApvC,IAAApH,KAAAmD,EAAAo1C,GACAp1C,EAAAk6B,SAAAmZ,EAAAnvC,IAAArH,KAAAmD,EAAAo1C,KAEAp1C,EAAAg6B,UAAA,KACAh6B,EAAAk6B,SAAA,MAGAl7B,EAAA2B,KAAAX,EAAAJ,MAAAgB,KAAAC,SAAA,SAAAV,EAAAN,GACA,GAAA21C,MACAC,EAAAz1C,EAAAJ,MAAAoB,iBAAAnB,EAEA,iBAAAM,GAAAS,KAAA,IAAA,OAAAT,EAAAS,KAAA,GACA5B,EAAA2B,KAAAR,EAAAS,KAAA,SAAA+C,GACA,GAAA0xC,GAAAr1C,EAAAs1C,UAAAt1C,EAAAiP,cAAAtL,GAEA0xC,GAAAE,YACAv1C,EAAAiB,QAAAqyC,KAAArwB,OACAoyB,EAAAH,QAAAl1C,EAAAiB,QAAAqyC,KAAArwB,OAEAuyB,EAAAn0C,KAAAg0C,GAEAI,IAEAz1C,EAAAg6B,UAAA,OAAAh6B,EAAAg6B,UAAAqZ,EAAApvC,IAAAjE,EAAAg6B,UAAAqb,GAAAA,EACAr1C,EAAAk6B,SAAA,OAAAl6B,EAAAk6B,SAAAmZ,EAAAnvC,IAAAlE,EAAAk6B,SAAAmb,GAAAA,KAGAr1C,GAGAw1C,EAAAJ,EAGAp1C,EAAA60C,aAAAxzC,KAAAm0C,IACAx1C,GAGAA,EAAAiB,QAAAqyC,KAAArvC,MACAjE,EAAAg6B,UAAAh6B,EAAAs1C,UAAAt1C,EAAAiB,QAAAqyC,KAAArvC,MAGAjE,EAAAiB,QAAAqyC,KAAApvC,MACAlE,EAAAk6B,SAAAl6B,EAAAs1C,UAAAt1C,EAAAiB,QAAAqyC,KAAApvC,MAIAlE,EAAAg6B,WAAAh6B,EAAAg6B,WAAAqZ,KAAAtpC,QACA/J,EAAAk6B,UAAAl6B,EAAAk6B,UAAAmZ,KAAAtpC,SAEAirC,gBAAA,WACA,GAAAh1C,GAAAD,IACAC,GAAA+0C,aACA,IAAAW,KAEA11C,GAAAJ,MAAAgB,KAAAgC,QAAA5C,EAAAJ,MAAAgB,KAAAgC,OAAA9F,OAAA,GACAkC,EAAA2B,KAAAX,EAAAJ,MAAAgB,KAAAgC,OAAA,SAAArE,GACA,GAAA82C,GAAAr1C,EAAAs1C,UAAA/2C,EAEA82C,GAAAE,YACAv1C,EAAAiB,QAAAqyC,KAAArwB,OACAoyB,EAAAH,QAAAl1C,EAAAiB,QAAAqyC,KAAArwB,OAEAyyB,EAAAr0C,KAAAg0C,EAAAM,KAAA31C,EAAAg6B,UAAAh6B,EAAAm1C,UAAA,MAEAn1C,GAGAhB,EAAA2B,KAAAX,EAAAJ,MAAAgB,KAAAC,SAAA,SAAAV,GACA,GAAAy1C,KAEA,iBAAAz1C,GAAAS,KAAA,IAAA,OAAAT,EAAAS,KAAA,GACA5B,EAAA2B,KAAAR,EAAAS,KAAA,SAAA+C,GACA,GAAA0xC,GAAAr1C,EAAAs1C,UAAAt1C,EAAAiP,cAAAtL,GAEA0xC,GAAAE,YACAv1C,EAAAiB,QAAAqyC,KAAArwB,OACAoyB,EAAAH,QAAAl1C,EAAAiB,QAAAqyC,KAAArwB,OAEA2yB,EAAAv0C,KAAAg0C,EAAAM,KAAA31C,EAAAg6B,UAAAh6B,EAAAm1C,UAAA,MAEAn1C,GAGA41C,EAAAF,EAGA11C,EAAA+0C,WAAA1zC,KAAAu0C,IACA51C,IAEAq4B,WAAA,WACA,GAAAr4B,GAAAD,IAEAC,GAAA6F,IAAAiP,MACA,IAAA85B,GAAA5vC,EAAA6N,kBAAA7M,EAAAiB,QAAAqD,MAAA6tB,SAAAl1B,EAAA0B,SAAA6S,OAAAud,iBACAikB,EAAAh0C,EAAA6N,kBAAA7M,EAAAiB,QAAAqD,MAAAinB,UAAAtuB,EAAA0B,SAAA6S,OAAAwd,kBACAikB,EAAAj0C,EAAA6N,kBAAA7M,EAAAiB,QAAAqD,MAAAknB,WAAAvuB,EAAA0B,SAAA6S,OAAAsd,mBACAokB,EAAAl0C,EAAAqsB,WAAAujB,EAAAoE,EAAAC,EAQA,IAPAjzC,EAAA6F,IAAA6lB,KAAAwnB,EAEAlzC,EAAAsE,SACAtE,EAAA61C,UAAA,EACA71C,EAAA81C,iBAAA,EAGA91C,EAAAiB,QAAAqyC,KAAAO,KACA7zC,EAAAm1C,SAAAn1C,EAAAiB,QAAAqyC,KAAAO,MAAA,MACA7zC,EAAA8zC,cAAA9zC,EAAAiB,QAAAqyC,KAAAW,eAAAj0C,EAAAm1C,UACAn1C,EAAA81C,iBAAA91C,EAAAk6B,SAAAyb,KAAA31C,EAAAg6B,UAAAh6B,EAAAm1C,UAAA,GACAn1C,EAAA61C,UAAA72C,EAAA6N,kBAAA7M,EAAAiB,QAAAqyC,KAAAyC,aAAA,OACA,CAEA,GAAAvb,GAAAx6B,EAAAovB,eAAApvB,EAAAiD,MAAAjD,EAAA4G,OAGAovC,EAAAh2C,EAAAi2C,mBAAAj2C,EAAAg6B,UAAA,MACAkc,EAAAl2C,EAAA6F,IAAAomB,YAAA+pB,GAAA/yC,KAGAizC,GAAAA,EAFAlyC,KAAAiH,IAAAjM,EAAAwkB,UAAAxjB,EAAAiB,QAAAqD,MAAAizB,cAEAqX,EADA5qC,KAAAkH,IAAAlM,EAAAwkB,UAAAxjB,EAAAiB,QAAAqD,MAAAizB,aAEA,IAAA4e,GAAA3b,EAAA,CAGAx6B,GAAAm1C,SAAAn1C,EAAAiB,QAAAqyC,KAAAU,QACAh0C,EAAA81C,iBAAA91C,EAAAk6B,SAAAyb,KAAA31C,EAAAg6B,UAAAh6B,EAAAm1C,UAAA,GACAn1C,EAAA8zC,cAAA9zC,EAAAiB,QAAAqyC,KAAAW,eAAAj0C,EAAAm1C,SAMA,KAJA,GAAAiB,GAAA,EACAC,EAAA/C,EAAAC,MAAA6C,GAGAA,EAAA9C,EAAAC,MAAAz2C,QAAA,CAIA,GAFAkD,EAAA61C,UAAA,EAEA72C,EAAA4K,QAAAysC,EAAA5C,QAAAzvC,KAAAu6B,KAAAv+B,EAAA81C,iBAAAK,GAAAn3C,EAAAkF,IAAAmyC,EAAA5C,OAAA,CAEA,IAAA,GAAAxd,GAAA,EAAAA,EAAAogB,EAAA5C,MAAA32C,SAAAm5B,EACA,GAAAogB,EAAA5C,MAAAxd,IAAAjyB,KAAAu6B,KAAAv+B,EAAA81C,iBAAAK,GAAA,CACAn2C,EAAA61C,UAAA72C,EAAA6N,kBAAA7M,EAAAiB,QAAAqyC,KAAAyC,aAAAM,EAAA5C,MAAAxd;uEACA,OAIA,MACA,GAAAogB,EAAA3C,WAAA,GAAA1vC,KAAAu6B,KAAAv+B,EAAA81C,iBAAAK,GAAAE,EAAA3C,QAAA,CAEA1zC,EAAA61C,UAAA72C,EAAA6N,kBAAA7M,EAAAiB,QAAAqyC,KAAAyC,aAAA/xC,KAAAu6B,KAAAv+B,EAAA81C,iBAAAK,GACA,SAGAC,EACAC,EAAA/C,EAAAC,MAAA6C,GAEAp2C,EAAAm1C,SAAAkB,EAAA7C,IACA,IAAA8C,GAAAt2C,EAAAg6B,UAAA2b,KAAA31C,EAAAi1C,iBAAAj1C,EAAAg6B,WAAAh6B,EAAAm1C,UAAA,GACAoB,EAAAv2C,EAAAi1C,iBAAAj1C,EAAAk6B,SAAAnwB,QAAAysC,IAAA,EAAAx2C,EAAAm1C,WAAAQ,KAAA31C,EAAAk6B,SAAAl6B,EAAAm1C,UAAA,EACAn1C,GAAA81C,iBAAA91C,EAAAk6B,SAAAyb,KAAA31C,EAAAg6B,UAAAh6B,EAAAm1C,UAAA,GAAAmB,EAAAC,EACAv2C,EAAA8zC,cAAA9zC,EAAAiB,QAAAqyC,KAAAW,eAAAoC,EAAA7C,OAKA,GAAAiD,EAWA,IARAz2C,EAAAiB,QAAAqyC,KAAArvC,IAIAwyC,EAAAz2C,EAAAi1C,iBAAAj1C,EAAAg6B,YAHAh6B,EAAAg6B,UAAAh6B,EAAAi1C,iBAAAj1C,EAAAg6B,WACAyc,EAAAz2C,EAAAg6B,YAMAh6B,EAAAiB,QAAAqyC,KAAApvC,IAAA,CACA,GAAAwyC,GAAA12C,EAAAi1C,iBAAAj1C,EAAAk6B,UACA+E,EAAAyX,EAAAf,KAAA31C,EAAAk6B,SAAAl6B,EAAAm1C,UAAA,EACAlW,GAAA,EAEAj/B,EAAAk6B,SAAAl6B,EAAAi1C,iBAAAj1C,EAAAk6B,SAAAsc,IAAA,EAAAx2C,EAAAm1C,WACAlW,GAAA,IACAj/B,EAAAk6B,SAAAwc,GAGA12C,EAAA81C,iBAAA91C,EAAAk6B,SAAAyb,KAAA31C,EAAAg6B,UAAAh6B,EAAAm1C,UAAA,GAIAn1C,EAAAiB,QAAAqyC,KAAAQ,gBACA9zC,EAAA8zC,cAAA9zC,EAAAiB,QAAAqyC,KAAAQ,eAIA9zC,EAAAsE,MAAAjD,KAAArB,EAAAg6B,UAAAjwB,QAGA,KAAA,GAAAxN,GAAAyD,EAAA61C,UAAAt5C,GAAAyD,EAAA81C,iBAAAv5C,GAAAyD,EAAA61C,UAAA,CACA,GAAAc,GAAAF,EAAA1sC,QAAAysC,IAAAj6C,EAAAyD,EAAAm1C,SAGA,IAAAn1C,EAAAiB,QAAAqyC,KAAApvC,KAAAyyC,EAAAhB,KAAA31C,EAAAk6B,SAAAl6B,EAAAm1C,UAAA,IAAA,EACA,KAGAn1C,GAAAsE,MAAAjD,KAAAs1C,GAKA,IADA32C,EAAAsE,MAAAtE,EAAAsE,MAAAxH,OAAA,GAAA64C,KAAA31C,EAAAk6B,SAAAl6B,EAAAm1C,WACA,IAAAn1C,EAAA81C,mBAGA91C,EAAAiB,QAAAqyC,KAAApvC,KACAlE,EAAAsE,MAAAjD,KAAArB,EAAAk6B,SAAAnwB,SACA/J,EAAA81C,iBAAA91C,EAAAk6B,SAAAyb,KAAA31C,EAAAsE,MAAA,GAAAtE,EAAAm1C,UAAA,KAEAn1C,EAAAsE,MAAAjD,KAAArB,EAAAk6B,SAAAnwB,SACA/J,EAAA81C,iBAAA91C,EAAAk6B,SAAAyb,KAAA31C,EAAAg6B,UAAAh6B,EAAAm1C,UAAA,KAIAn1C,EAAA6F,IAAAoP,UAGAjV,EAAA+0C,WAAA3zC,QAGAk5B,iBAAA,SAAA74B,EAAA5B,GACA,GAAAG,GAAAD,KACAxB,EAAAyB,EAAAJ,MAAAgB,KAAAgC,QAAAnB,EAAAzB,EAAAJ,MAAAgB,KAAAgC,OAAA9F,OAAAkD,EAAAJ,MAAAgB,KAAAgC,OAAAnB,GAAA,GACAkC,EAAA3D,EAAAJ,MAAAgB,KAAAC,SAAAhB,GAAAe,KAAAa,EAWA,OATA,QAAAkC,GAAA,gBAAAA,KACApF,EAAAyB,EAAAiP,cAAAtL,IAIA3D,EAAAiB,QAAAqyC,KAAAsD,gBACAr4C,EAAAyB,EAAAs1C,UAAA/2C,GAAAq1C,OAAA5zC,EAAAiB,QAAAqyC,KAAAsD,gBAGAr4C,GAGA03C,mBAAA,SAAAvf,EAAAj1B,EAAA6C,GACA,GAAAuyC,GAAAngB,EAAAkd,OAAA7zC,KAAA+zC,eACAjb,EAAA94B,KAAAkB,QAAAqD,MACAiV,EAAAva,EAAA6N,kBAAAgsB,EAAAtf,SAAAsf,EAAAC,aAEA,OAAAvf,GACAA,EAAAs9B,EAAAp1C,EAAA6C,GAEAuyC,GAEAre,qBAAA,WACA,GAAAx4B,GAAAD,IACAC,GAAA82C,YAAA92C,EAAAsE,MACAtE,EAAAsE,MAAAtE,EAAAsE,MAAAuE,IAAA7I,EAAAi2C,mBAAAj2C,IAEAmE,iBAAA,SAAAR,EAAAlC,EAAA5B,GACA,GAAAG,GAAAD,KACA8K,EAAA,IAeA,IAdAzJ,SAAAK,GAAAL,SAAAvB,IACAgL,EAAA7K,EAAA80C,aAAAj1C,EAAA4B,IAGA,OAAAoJ,IACAlH,GAAAA,EAAA4xC,UAEA5xC,EAAA3D,EAAAs1C,UAAAt1C,EAAAiP,cAAAtL,KAEAA,GAAAA,EAAA4xC,SAAA5xC,EAAA4xC,YACA1qC,EAAAlH,EAAAgyC,KAAA31C,EAAAg6B,UAAAh6B,EAAAm1C,UAAA,KAIA,OAAAtqC,EAAA,CACA,GAAA+vB,GAAA,IAAA/vB,EAAAA,EAAA7K,EAAA81C,iBAAAjrC,CAEA,IAAA7K,EAAAovB,eAAA,CACA,GAAAyL,GAAA76B,EAAAiD,MAAA23B,CACA,OAAA56B,GAAAwK,KAAAxG,KAAAif,MAAA4X,GAGA,GAAA+S,GAAA5tC,EAAA4G,OAAAg0B,CACA,OAAA56B,GAAA2K,IAAA3G,KAAAif,MAAA2qB,KAGAxU,gBAAA,SAAA33B,GACA,MAAA1B,MAAAoE,iBAAApE,KAAA+2C,YAAAr1C,GAAA,KAAA,OAEA84B,iBAAA,SAAAE,GACA,GAAAz6B,GAAAD,KACA+uC,EAAA9uC,EAAAovB,eAAApvB,EAAAiD,MAAAjD,EAAA4G,OACAiE,GAAA4vB,GAAAz6B,EAAAovB,eAAApvB,EAAAwK,KAAAxK,EAAA2K,MAAAmkC,CAEA,OADAjkC,IAAA7K,EAAA81C,iBACA91C,EAAAg6B,UAAAjwB,QAAAysC,IAAAnD,EAAA5hC,SAAA5G,EAAA7K,EAAAm1C,UAAA4B,YAAA,YAEAzB,UAAA,SAAA/2C,GACA,GAAAyB,GAAAD,IACA,OAAA,gBAAAC,GAAAiB,QAAAqyC,KAAAK,OACAN,EAAA90C,EAAAyB,EAAAiB,QAAAqyC,KAAAK,QAEA,kBAAA3zC,GAAAiB,QAAAqyC,KAAAK,OACA3zC,EAAAiB,QAAAqyC,KAAAK,OAAAp1C,GAGA,kBAAAA,GAAAy4C,UAAA,gBAAAz4C,GACA80C,EAAA90C,GAGAA,EAAAg3C,SAAAh3C,EAAAg3C,UACAh3C,EAGA,gBAAAyB,GAAAiB,QAAAqyC,KAAAM,QAAA5zC,EAAAiB,QAAAqyC,KAAAM,OAAA/2C,MACA4Z,QAAAwgC,KAAA,0IACAj3C,EAAAiB,QAAAqyC,KAAAM,OAAAr1C,IAGA80C,EAAA90C,EAAAyB,EAAAiB,QAAAqyC,KAAAM,UAGA32C,GAAAsb,aAAAolB,kBAAA,OAAAgX,EAAA/2C,sCC/aA,QAAAs5C,GAAA9qB,GACA,GAAAA,EAAA,CAGA,GAMA+qB,IAAA,EAAA,EAAA,GACA96C,EAAA,EACAguC,EAAAje,EAAAie,MARA,sBASA,IAAAA,EAAA,CACAA,EAAAA,EAAA,EACA,KAAA,GAAA9tC,GAAA,EAAAA,EAAA46C,EAAAr6C,OAAAP,IACA46C,EAAA56C,GAAAmjB,SAAA2qB,EAAA9tC,GAAA8tC,EAAA9tC,GAAA,QAGA,IAAA8tC,EAAAje,EAAAie,MAdA,uBAcA,CACAA,EAAAA,EAAA,EACA,KAAA,GAAA9tC,GAAA,EAAAA,EAAA46C,EAAAr6C,OAAAP,IACA46C,EAAA56C,GAAAmjB,SAAA2qB,EAAAxgC,MAAA,EAAAtN,EAAA,EAAAA,EAAA,GAAA,QAGA,IAAA8tC,EAAAje,EAAAie,MAnBA,2FAmBA,CACA,IAAA,GAAA9tC,GAAA,EAAAA,EAAA46C,EAAAr6C,OAAAP,IACA46C,EAAA56C,GAAAmjB,SAAA2qB,EAAA9tC,EAAA,GAEAF,GAAAsmB,WAAA0nB,EAAA,QAEA,IAAAA,EAAAje,EAAAie,MAxBA,6GAwBA,CACA,IAAA,GAAA9tC,GAAA,EAAAA,EAAA46C,EAAAr6C,OAAAP,IACA46C,EAAA56C,GAAAyH,KAAAif,MAAA,KAAAN,WAAA0nB,EAAA9tC,EAAA,IAEAF,GAAAsmB,WAAA0nB,EAAA,QAEA,IAAAA,EAAAje,EAAAie,MA7BA,SA6BA,CACA,GAAA,eAAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAGA,MADA8M,EAAAC,EAAA/M,EAAA,KAEA,OAIA,IAAA,GAAA9tC,GAAA,EAAAA,EAAA46C,EAAAr6C,OAAAP,IACA46C,EAAA56C,GAAA4Q,EAAAgqC,EAAA56C,GAAA,EAAA,IASA,OAHAF,GAJAA,GAAA,GAAAA,EAIA8Q,EAAA9Q,EAAA,EAAA,GAHA,EAKA86C,EAAA,GAAA96C,EACA86C,GAGA,QAAAE,GAAAjrB,GACA,GAAAA,EAAA,CAGA,GACAie,GAAAje,EAAAie,MADA,2GAEA,IAAAA,EAAA,CACA,GAAAlK,GAAAxd,WAAA0nB,EAAA,GAKA,QAJAl9B,EAAAuS,SAAA2qB,EAAA,IAAA,EAAA,KACAl9B,EAAAwV,WAAA0nB,EAAA,IAAA,EAAA,KACAl9B,EAAAwV,WAAA0nB,EAAA,IAAA,EAAA,KACAl9B,EAAAnH,MAAAm6B,GAAA,EAAAA,EAAA,EAAA,MAKA,QAAAmX,GAAAlrB,GACA,GAAAA,EAAA,CAGA,GACAie,GAAAje,EAAAie,MADA,yGAEA,IAAAA,EAAA,CACA,GAAAlK,GAAAxd,WAAA0nB,EAAA,GAKA,QAJAl9B,EAAAuS,SAAA2qB,EAAA,IAAA,EAAA,KACAl9B,EAAAwV,WAAA0nB,EAAA,IAAA,EAAA,KACAl9B,EAAAwV,WAAA0nB,EAAA,IAAA,EAAA,KACAl9B,EAAAnH,MAAAm6B,GAAA,EAAAA,EAAA,EAAA,MAKA,QAAAoX,GAAAnrB,GACA,GAAAorB,GAAAN,EAAA9qB,EACA,OAAAorB,IAAAA,EAAA3tC,MAAA,EAAA,GAGA,QAAA4tC,GAAArrB,GACA,GAAAsrB,GAAAL,EAAAjrB,EACA,OAAAsrB,IAAAA,EAAA7tC,MAAA,EAAA,GAGA,QAAA8tC,GAAAvrB,GACA,GAAAwrB,GAAAV,EAAA9qB,EACA,OAAAwrB,GACAA,EAAA,IAEAA,EAAAP,EAAAjrB,IACAwrB,EAAA,IAEAA,EAAAN,EAAAlrB,IACAwrB,EAAA,GADA,OAMA,QAAAC,GAAAV,GACA,MAAA,IAAAW,EAAAX,EAAA,IAAAW,EAAAX,EAAA,IACAW,EAAAX,EAAA,IAGA,QAAAp4B,GAAAy4B,EAAArX,GACA,MAAAA,GAAA,GAAAqX,EAAA,IAAAA,EAAA,GAAA,EACApX,EAAAoX,EAAArX,GAEA,OAAAqX,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,IAGA,QAAApX,GAAAoX,EAAArX,GAIA,MAHA/+B,UAAA++B,IACAA,EAAA/+B,SAAAo2C,EAAA,GAAAA,EAAA,GAAA,GAEA,QAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,KAAAA,EAAA,GACA,KAAArX,EAAA,IAGA,QAAA4X,GAAAP,EAAArX,GACA,MAAAA,GAAA,GAAAqX,EAAA,IAAAA,EAAA,GAAA,EACAQ,EAAAR,EAAArX,GAMA,OAJAn8B,KAAAif,MAAAu0B,EAAA,GAAA,IAAA,KAIA,MAHAxzC,KAAAif,MAAAu0B,EAAA,GAAA,IAAA,KAGA,MAFAxzC,KAAAif,MAAAu0B,EAAA,GAAA,IAAA,KAEA,KAGA,QAAAQ,GAAAR,EAAArX,GAIA,MAAA,QAHAn8B,KAAAif,MAAAu0B,EAAA,GAAA,IAAA,KAGA,MAFAxzC,KAAAif,MAAAu0B,EAAA,GAAA,IAAA,KAEA,MADAxzC,KAAAif,MAAAu0B,EAAA,GAAA,IAAA,KACA,OAAArX,GAAAqX,EAAA,IAAA,GAAA,IAGA,QAAAS,GAAAP,EAAAvX,GACA,MAAAA,GAAA,GAAAuX,EAAA,IAAAA,EAAA,GAAA,EACAQ,EAAAR,EAAAvX,GAEA,OAAAuX,EAAA,GAAA,KAAAA,EAAA,GAAA,MAAAA,EAAA,GAAA,KAGA,QAAAQ,GAAAR,EAAAvX,GAIA,MAHA/+B,UAAA++B,IACAA,EAAA/+B,SAAAs2C,EAAA,GAAAA,EAAA,GAAA,GAEA,QAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,MAAAA,EAAA,GAAA,MACAvX,EAAA,IAKA,QAAAgY,GAAAC,EAAAjY,GAIA,MAHA/+B,UAAA++B,IACAA,EAAA/+B,SAAAg3C,EAAA,GAAAA,EAAA,GAAA,GAEA,OAAAA,EAAA,GAAA,KAAAA,EAAA,GAAA,MAAAA,EAAA,GAAA,KACAh3C,SAAA++B,GAAA,IAAAA,EAAA,KAAAA,EAAA,IAAA,IAGA,QAAAkY,GAAAlB,GACA,MAAAmB,GAAAnB,EAAAttC,MAAA,EAAA,IAIA,QAAAsD,GAAAorC,EAAAt0C,EAAAC,GACA,MAAAF,MAAAC,IAAAD,KAAAE,IAAAD,EAAAs0C,GAAAr0C,GAGA,QAAA4zC,GAAAS,GACA,GAAAC,GAAAD,EAAAxkC,SAAA,IAAAgJ,aACA,OAAAy7B,GAAA17C,OAAA,EAAA,IAAA07C,EAAAA,EAnNA,GAAApB,GAAA96C,EAAA,aAEAU,GAAAJ,SACAs6C,QAAAA,EACAG,QAAAA,EACAE,OAAAA,EACAE,OAAAA,EACAH,OAAAA,EACAK,SAAAA,EAEAE,UAAAA,EACA94B,UAAAA,EACAqhB,WAAAA,EACA2X,cAAAA,EACAC,eAAAA,EACAC,UAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAE,QAAAA,EAsMA,IAAAC,KACA,KAAA,GAAA9E,KAAA4D,GACAkB,EAAAlB,EAAA5D,IAAAA,0CC1NA,GAAAiF,GAAAn8C,EAAA,iBACA8vB,EAAA9vB,EAAA,wBAEAo8C,EAAA,SAAA33B,GACA,GAAAA,YAAA23B,GACA,MAAA33B,EAEA,MAAAhhB,eAAA24C,IACA,MAAA,IAAAA,GAAA33B,EAGAhhB,MAAA44C,OAAA,EACA54C,KAAA+3B,QACAqf,KAAA,EAAA,EAAA,GACAyB,KAAA,EAAA,EAAA,GACAC,KAAA,EAAA,EAAA,GACAT,KAAA,EAAA,EAAA,GACAU,MAAA,EAAA,EAAA,EAAA,GACA3Y,MAAA,EAIA,IAAAyX,EACA,iBAAA72B,IACA62B,EAAAxrB,EAAA8qB,QAAAn2B,GACA62B,EACA73C,KAAAg5C,UAAA,MAAAnB,IACAA,EAAAxrB,EAAAirB,QAAAt2B,IACAhhB,KAAAg5C,UAAA,MAAAnB,IACAA,EAAAxrB,EAAAkrB,OAAAv2B,KACAhhB,KAAAg5C,UAAA,MAAAnB,IAEA,gBAAA72B,KACA62B,EAAA72B,EACA3f,SAAAw2C,EAAA37C,GAAAmF,SAAAw2C,EAAAoB,IACAj5C,KAAAg5C,UAAA,MAAAnB,GACAx2C,SAAAw2C,EAAAj7C,GAAAyE,SAAAw2C,EAAAqB,UACAl5C,KAAAg5C,UAAA,MAAAnB,GACAx2C,SAAAw2C,EAAAsB,GAAA93C,SAAAw2C,EAAAj0C,MACA5D,KAAAg5C,UAAA,MAAAnB,GACAx2C,SAAAw2C,EAAAptB,GAAAppB,SAAAw2C,EAAAuB,UACAp5C,KAAAg5C,UAAA,MAAAnB,GACAx2C,SAAAw2C,EAAAnrB,GAAArrB,SAAAw2C,EAAAwB,MACAr5C,KAAAg5C,UAAA,OAAAnB,IAKAc,GAAA54C,WACAy1C,QAAA,WACA,MAAAx1C,MAAA44C,OAEAxB,IAAA,WACA,MAAAp3C,MAAAs5C,SAAA,MAAAn+B,YAEA09B,IAAA,WACA,MAAA74C,MAAAs5C,SAAA,MAAAn+B,YAEA29B,IAAA,WACA,MAAA94C,MAAAs5C,SAAA,MAAAn+B,YAEAk9B,IAAA,WACA,MAAAr4C,MAAAs5C,SAAA,MAAAn+B,YAEA49B,KAAA,WACA,MAAA/4C,MAAAs5C,SAAA,OAAAn+B,YAGAo+B,SAAA,WACA,MAAAv5C,MAAA+3B,OAAAqf,KAEAoC,SAAA,WACA,MAAAx5C,MAAA+3B,OAAA8gB,KAEAY,SAAA,WACA,MAAAz5C,MAAA+3B,OAAA+gB,KAEAY,SAAA,WACA,GAAA3hB,GAAA/3B,KAAA+3B,MACA,OAAA,KAAAA,EAAAqI,MACArI,EAAAsgB,IAAA9iC,QAAAwiB,EAAAqI,QAEArI,EAAAsgB,KAEAsB,UAAA,WACA,MAAA35C,MAAA+3B,OAAAghB,MAEAa,UAAA,WACA,GAAA7hB,GAAA/3B,KAAA+3B,MACA,OAAAA,GAAAqf,IAAA7hC,QAAAwiB,EAAAqI,SAEAyZ,UAAA,WACA,GAAA9hB,GAAA/3B,KAAA+3B,MACA,OAAAA,GAAA8gB,IAAAtjC,QAAAwiB,EAAAqI,SAEAA,MAAA,SAAA0Z,GACA,MAAAz4C,UAAAy4C,EACA95C,KAAA+3B,OAAAqI,OAEApgC,KAAAg5C,UAAA,QAAAc,GACA95C,OAGAi5C,IAAA,SAAAa,GACA,MAAA95C,MAAA+5C,WAAA,MAAA,EAAAD,IAEAE,MAAA,SAAAF,GACA,MAAA95C,MAAA+5C,WAAA,MAAA,EAAAD,IAEAG,KAAA,SAAAH,GACA,MAAA95C,MAAA+5C,WAAA,MAAA,EAAAD,IAEAI,IAAA,SAAAJ,GAKA,MAJAA,KACAA,GAAA,IACAA,EAAAA,EAAA,EAAA,IAAAA,EAAAA,GAEA95C,KAAA+5C,WAAA,MAAA,EAAAD,IAEAK,WAAA,SAAAL,GACA,MAAA95C,MAAA+5C,WAAA,MAAA,EAAAD,IAEAZ,UAAA,SAAAY,GACA,MAAA95C,MAAA+5C,WAAA,MAAA,EAAAD,IAEAM,YAAA,SAAAN,GACA,MAAA95C,MAAA+5C,WAAA,MAAA,EAAAD,IAEAV,UAAA,SAAAU,GACA,MAAA95C,MAAA+5C,WAAA,MAAA,EAAAD,IAEAO,UAAA,SAAAP,GACA,MAAA95C,MAAA+5C,WAAA,MAAA,EAAAD,IAEAl2C,MAAA,SAAAk2C,GACA,MAAA95C,MAAA+5C,WAAA,MAAA,EAAAD,IAEAT,KAAA,SAAAS,GACA,MAAA95C,MAAA+5C,WAAA,OAAA,EAAAD,IAEAQ,QAAA,SAAAR,GACA,MAAA95C,MAAA+5C,WAAA,OAAA,EAAAD,IAEAS,OAAA,SAAAT,GACA,MAAA95C,MAAA+5C,WAAA,OAAA,EAAAD,IAEAU,MAAA,SAAAV,GACA,MAAA95C,MAAA+5C,WAAA,OAAA,EAAAD,IAGAhC,UAAA,WACA,MAAAzrB,GAAAyrB,UAAA93C,KAAA+3B,OAAAqf,MAEAp4B,UAAA,WACA,MAAAqN,GAAArN,UAAAhf,KAAA+3B,OAAAqf,IAAAp3C,KAAA+3B,OAAAqI,QAEAC,WAAA,WACA,MAAAhU,GAAAgU,WAAArgC,KAAA+3B,OAAAqf,IAAAp3C,KAAA+3B,OAAAqI,QAEA4X,cAAA,WACA,MAAA3rB,GAAA2rB,cAAAh4C,KAAA+3B,OAAAqf,IAAAp3C,KAAA+3B,OAAAqI,QAEA8X,UAAA,WACA,MAAA7rB,GAAA6rB,UAAAl4C,KAAA+3B,OAAA8gB,IAAA74C,KAAA+3B,OAAAqI,QAEA+X,WAAA,WACA,MAAA9rB,GAAA8rB,WAAAn4C,KAAA+3B,OAAA8gB,IAAA74C,KAAA+3B,OAAAqI,QAEAgY,UAAA,WACA,MAAA/rB,GAAA+rB,UAAAp4C,KAAA+3B,OAAAsgB,IAAAr4C,KAAA+3B,OAAAqI,QAEAkY,QAAA,WACA,MAAAjsB,GAAAisB,QAAAt4C,KAAA+3B,OAAAqf,IAAAp3C,KAAA+3B,OAAAqI,QAGAqa,UAAA,WACA,GAAArD,GAAAp3C,KAAA+3B,OAAAqf,GACA,OAAAA,GAAA,IAAA,GAAAA,EAAA,IAAA,EAAAA,EAAA,IAGAsD,WAAA,WAIA,IAAA,GAFAtD,GAAAp3C,KAAA+3B,OAAAqf,IACAuD,KACAn+C,EAAA,EAAAA,EAAA46C,EAAAr6C,OAAAP,IAAA,CACA,GAAAo+C,GAAAxD,EAAA56C,GAAA,GACAm+C,GAAAn+C,GAAAo+C,GAAA,OAAAA,EAAA,MAAA32C,KAAAugB,KAAAo2B,EAAA,MAAA,MAAA,KAEA,MAAA,MAAAD,EAAA,GAAA,MAAAA,EAAA,GAAA,MAAAA,EAAA,IAGAE,SAAA,SAAAC,GAEA,GAAAC,GAAA/6C,KAAA06C,aACAM,EAAAF,EAAAJ,YACA,OAAAK,GAAAC,GACAD,EAAA,MAAAC,EAAA,MAEAA,EAAA,MAAAD,EAAA,MAGAE,MAAA,SAAAH,GACA,GAAAI,GAAAl7C,KAAA66C,SAAAC,EACA,OAAAI,IAAA,IACA,MAGAA,GAAA,IAAA,KAAA,IAGAC,KAAA,WAEA,GAAA/D,GAAAp3C,KAAA+3B,OAAAqf,GAEA,QADA,IAAAA,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,IACA,KAGAgE,MAAA,WACA,OAAAp7C,KAAAm7C,QAGAE,OAAA,WAEA,IAAA,GADAjE,MACA56C,EAAA,EAAAA,EAAA,EAAAA,IACA46C,EAAA56C,GAAA,IAAAwD,KAAA+3B,OAAAqf,IAAA56C,EAGA,OADAwD,MAAAg5C,UAAA,MAAA5B,GACAp3C,MAGAs7C,QAAA,SAAArS,GACA,GAAA4P,GAAA74C,KAAA+3B,OAAA8gB,GAGA,OAFAA,GAAA,IAAAA,EAAA,GAAA5P,EACAjpC,KAAAg5C,UAAA,MAAAH,GACA74C,MAGAutB,OAAA,SAAA0b,GACA,GAAA4P,GAAA74C,KAAA+3B,OAAA8gB,GAGA,OAFAA,GAAA,IAAAA,EAAA,GAAA5P,EACAjpC,KAAAg5C,UAAA,MAAAH,GACA74C,MAGAstB,SAAA,SAAA2b,GACA,GAAA4P,GAAA74C,KAAA+3B,OAAA8gB,GAGA,OAFAA,GAAA,IAAAA,EAAA,GAAA5P,EACAjpC,KAAAg5C,UAAA,MAAAH,GACA74C,MAGAu7C,WAAA,SAAAtS,GACA,GAAA4P,GAAA74C,KAAA+3B,OAAA8gB,GAGA,OAFAA,GAAA,IAAAA,EAAA,GAAA5P,EACAjpC,KAAAg5C,UAAA,MAAAH,GACA74C,MAGAw7C,OAAA,SAAAvS,GACA,GAAAoP,GAAAr4C,KAAA+3B,OAAAsgB,GAGA,OAFAA,GAAA,IAAAA,EAAA,GAAApP,EACAjpC,KAAAg5C,UAAA,MAAAX,GACAr4C,MAGAy7C,QAAA,SAAAxS,GACA,GAAAoP,GAAAr4C,KAAA+3B,OAAAsgB,GAGA,OAFAA,GAAA,IAAAA,EAAA,GAAApP,EACAjpC,KAAAg5C,UAAA,MAAAX,GACAr4C,MAGA07C,UAAA,WACA,GAAAtE,GAAAp3C,KAAA+3B,OAAAqf,IAEA0C,EAAA,GAAA1C,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,EAEA,OADAp3C,MAAAg5C,UAAA,OAAAc,EAAAA,EAAAA,IACA95C,MAGA27C,QAAA,SAAA1S,GACA,GAAA7I,GAAApgC,KAAA+3B,OAAAqI,KAEA,OADApgC,MAAAg5C,UAAA,QAAA5Y,EAAAA,EAAA6I,GACAjpC,MAGA47C,QAAA,SAAA3S,GACA,GAAA7I,GAAApgC,KAAA+3B,OAAAqI,KAEA,OADApgC,MAAAg5C,UAAA,QAAA5Y,EAAAA,EAAA6I,GACAjpC,MAGAw9B,OAAA,SAAA9Z,GACA,GAAAm1B,GAAA74C,KAAA+3B,OAAA8gB,IACAqB,GAAArB,EAAA,GAAAn1B,GAAA,GAGA,OAFAm1B,GAAA,GAAAqB,EAAA,EAAA,IAAAA,EAAAA,EACAl6C,KAAAg5C,UAAA,MAAAH,GACA74C,MAOA+e,IAAA,SAAA88B,EAAAC,GACA,GAAAC,GAAA/7C,KACA86C,EAAAe,EACA9zB,EAAA1mB,SAAAy6C,EAAA,GAAAA,EAEArxB,EAAA,EAAA1C,EAAA,EACAzrB,EAAAy/C,EAAA3b,QAAA0a,EAAA1a,QAEA4b,IAAAvxB,EAAAnuB,IAAA,EAAAmuB,GAAAA,EAAAnuB,IAAA,EAAAmuB,EAAAnuB,IAAA,GAAA,EACA2/C,EAAA,EAAAD,CAEA,OAAAh8C,MACAo3C,IACA4E,EAAAD,EAAA9C,MAAAgD,EAAAnB,EAAA7B,MACA+C,EAAAD,EAAA/B,QAAAiC,EAAAnB,EAAAd,QACAgC,EAAAD,EAAA9B,OAAAgC,EAAAnB,EAAAb,QAEA7Z,MAAA2b,EAAA3b,QAAArY,EAAA+yB,EAAA1a,SAAA,EAAArY,KAGAm0B,OAAA,WACA,MAAAl8C,MAAAo3C,OAGAptC,MAAA,WAKA,GAGApG,GAAArG,EAHA4+C,EAAA,GAAAxD,GACAyD,EAAAp8C,KAAA+3B,OACAskB,EAAAF,EAAApkB,MAGA,KAAA,GAAA8U,KAAAuP,GACAA,EAAAv9B,eAAAguB,KACAjpC,EAAAw4C,EAAAvP,GACAtvC,KAAAyW,SAAAlX,KAAA8G,GACA,mBAAArG,EACA8+C,EAAAxP,GAAAjpC,EAAAkG,MAAA,GACA,oBAAAvM,EACA8+C,EAAAxP,GAAAjpC,EAEA8S,QAAAC,MAAA,0BAAA/S,GAKA,OAAAu4C,KAIAxD,EAAA54C,UAAAu8C,QACAlF,KAAA,MAAA,QAAA,QACAyB,KAAA,MAAA,aAAA,aACAC,KAAA,MAAA,aAAA,SACAT,KAAA,MAAA,YAAA,aACAU,MAAA,OAAA,UAAA,SAAA,UAGAJ,EAAA54C,UAAAw8C,OACAnF,KAAA,IAAA,IAAA,KACAyB,KAAA,IAAA,IAAA,KACAC,KAAA,IAAA,IAAA,KACAT,KAAA,IAAA,IAAA,KACAU,MAAA,IAAA,IAAA,IAAA,MAGAJ,EAAA54C,UAAAy8C,UAAA,SAAAC,GAIA,IAAA,GAHA1kB,GAAA/3B,KAAA+3B,OACA8f,KAEAr7C,EAAA,EAAAA,EAAAigD,EAAA1/C,OAAAP,IACAq7C,EAAA4E,EAAA1/B,OAAAvgB,IAAAu7B,EAAA0kB,GAAAjgD,EAQA,OALA,KAAAu7B,EAAAqI,QACAyX,EAAAv7C,EAAAy7B,EAAAqI,OAIAyX,GAGAc,EAAA54C,UAAAi5C,UAAA,SAAAyD,EAAA5E,GACA,GAIAr7C,GAJAu7B,EAAA/3B,KAAA+3B,OACAukB,EAAAt8C,KAAAs8C,OACAC,EAAAv8C,KAAAu8C,MACAnc,EAAA,CAKA,IAFApgC,KAAA44C,OAAA,EAEA,UAAA6D,EACArc,EAAAyX,MACA,IAAAA,EAAA96C,OAEAg7B,EAAA0kB,GAAA5E,EAAA/tC,MAAA,EAAA2yC,EAAA1/C,QACAqjC,EAAAyX,EAAA4E,EAAA1/C,YACA,IAAAsE,SAAAw2C,EAAA4E,EAAA1/B,OAAA,IAAA,CAEA,IAAAvgB,EAAA,EAAAA,EAAAigD,EAAA1/C,OAAAP,IACAu7B,EAAA0kB,GAAAjgD,GAAAq7C,EAAA4E,EAAA1/B,OAAAvgB,GAGA4jC,GAAAyX,EAAAv7C,MACA,IAAA+E,SAAAw2C,EAAAyE,EAAAG,GAAA,IAAA,CAEA,GAAAC,GAAAJ,EAAAG,EAEA,KAAAjgD,EAAA,EAAAA,EAAAigD,EAAA1/C,OAAAP,IACAu7B,EAAA0kB,GAAAjgD,GAAAq7C,EAAA6E,EAAAlgD,GAGA4jC,GAAAyX,EAAAzX,MAKA,GAFArI,EAAAqI,MAAAn8B,KAAAE,IAAA,EAAAF,KAAAC,IAAA,EAAA7C,SAAA++B,EAAArI,EAAAqI,MAAAA,IAEA,UAAAqc,EACA,OAAA,CAGA,IAAAE,EAGA,KAAAngD,EAAA,EAAAA,EAAAigD,EAAA1/C,OAAAP,IACAmgD,EAAA14C,KAAAE,IAAA,EAAAF,KAAAC,IAAAq4C,EAAAE,GAAAjgD,GAAAu7B,EAAA0kB,GAAAjgD,KACAu7B,EAAA0kB,GAAAjgD,GAAAyH,KAAAif,MAAAy5B,EAIA,KAAA,GAAAC,KAAAN,GACAM,IAAAH,IACA1kB,EAAA6kB,GAAAlE,EAAA+D,GAAAG,GAAA7kB,EAAA0kB,IAIA,QAAA,GAGA9D,EAAA54C,UAAAu5C,SAAA,SAAAmD,EAAAx/B,GACA,GAAA46B,GAAA56B,EAAA,EAEA,OAAA5b,UAAAw2C,EAEA73C,KAAAw8C,UAAAC,IAIA,gBAAA5E,KACAA,EAAA36B,MAAAnd,UAAA+J,MAAAhN,KAAAmgB,IAGAjd,KAAAg5C,UAAAyD,EAAA5E,GACA73C,OAGA24C,EAAA54C,UAAAg6C,WAAA,SAAA0C,EAAA/6C,EAAAo4C,GACA,GAAA+C,GAAA78C,KAAA+3B,OAAA0kB,EACA,OAAAp7C,UAAAy4C,EAEA+C,EAAAn7C,GACAo4C,IAAA+C,EAAAn7C,GAEA1B,MAIA68C,EAAAn7C,GAAAo4C,EACA95C,KAAAg5C,UAAAyD,EAAAI,GAEA78C,OAGA,mBAAA7C,UACAA,OAAAw7C,MAAAA,GAGA17C,EAAAJ,QAAA87C,uEC1aA,QAAAmE,GAAA1F,GACA,GAMAxsB,GAAAzuB,EAAAS,EANAV,EAAAk7C,EAAA,GAAA,IACA2F,EAAA3F,EAAA,GAAA,IACA9oB,EAAA8oB,EAAA,GAAA,IACAlzC,EAAAD,KAAAC,IAAAhI,EAAA6gD,EAAAzuB,GACAnqB,EAAAF,KAAAE,IAAAjI,EAAA6gD,EAAAzuB,GACA4Q,EAAA/6B,EAAAD,CA0BA,OAvBAC,IAAAD,EACA0mB,EAAA,EACA1uB,GAAAiI,EACAymB,GAAAmyB,EAAAzuB,GAAA4Q,EACA6d,GAAA54C,EACAymB,EAAA,GAAA0D,EAAApyB,GAAAgjC,EACA5Q,GAAAnqB,IACAymB,EAAA,GAAA1uB,EAAA6gD,GAAA7d,GAEAtU,EAAA3mB,KAAAC,IAAA,GAAA0mB,EAAA,KAEAA,EAAA,IACAA,GAAA,KAEAhuB,GAAAsH,EAAAC,GAAA,EAGAhI,EADAgI,GAAAD,EACA,EACAtH,GAAA,GACAsiC,GAAA/6B,EAAAD,GAEAg7B,GAAA,EAAA/6B,EAAAD,IAEA0mB,EAAA,IAAAzuB,EAAA,IAAAS,GAGA,QAAAogD,GAAA5F,GACA,GAMAxsB,GAAAzuB,EAAAg9C,EANAj9C,EAAAk7C,EAAA,GACA2F,EAAA3F,EAAA,GACA9oB,EAAA8oB,EAAA,GACAlzC,EAAAD,KAAAC,IAAAhI,EAAA6gD,EAAAzuB,GACAnqB,EAAAF,KAAAE,IAAAjI,EAAA6gD,EAAAzuB,GACA4Q,EAAA/6B,EAAAD,CAwBA,OApBA/H,GADA,GAAAgI,EACA,EAEA+6B,EAAA/6B,EAAA,IAAA,GAEAA,GAAAD,EACA0mB,EAAA,EACA1uB,GAAAiI,EACAymB,GAAAmyB,EAAAzuB,GAAA4Q,EACA6d,GAAA54C,EACAymB,EAAA,GAAA0D,EAAApyB,GAAAgjC,EACA5Q,GAAAnqB,IACAymB,EAAA,GAAA1uB,EAAA6gD,GAAA7d,GAEAtU,EAAA3mB,KAAAC,IAAA,GAAA0mB,EAAA,KAEAA,EAAA,IACAA,GAAA,KAEAuuB,EAAAh1C,EAAA,IAAA,IAAA,IAEAymB,EAAAzuB,EAAAg9C,GAGA,QAAA8D,GAAA7F,GACA,GAAAl7C,GAAAk7C,EAAA,GACA2F,EAAA3F,EAAA,GACA9oB,EAAA8oB,EAAA,GACAxsB,EAAAkyB,EAAA1F,GAAA,GACA3sB,EAAA,EAAA,IAAAxmB,KAAAC,IAAAhI,EAAA+H,KAAAC,IAAA64C,EAAAzuB,IACAA,EAAA,EAAA,EAAA,IAAArqB,KAAAE,IAAAjI,EAAA+H,KAAAE,IAAA44C,EAAAzuB,GAEA,QAAA1D,EAAA,IAAAH,EAAA,IAAA6D,GAGA,QAAA4uB,GAAA9F,GACA,GAGA1qB,GAAAywB,EAAAx6C,EAAAy6C,EAHAlhD,EAAAk7C,EAAA,GAAA,IACA2F,EAAA3F,EAAA,GAAA,IACA9oB,EAAA8oB,EAAA,GAAA,GAOA,OAJAgG,GAAAn5C,KAAAC,IAAA,EAAAhI,EAAA,EAAA6gD,EAAA,EAAAzuB,GACA5B,GAAA,EAAAxwB,EAAAkhD,IAAA,EAAAA,IAAA,EACAD,GAAA,EAAAJ,EAAAK,IAAA,EAAAA,IAAA,EACAz6C,GAAA,EAAA2rB,EAAA8uB,IAAA,EAAAA,IAAA,GACA,IAAA1wB,EAAA,IAAAywB,EAAA,IAAAx6C,EAAA,IAAAy6C,GAGA,QAAAC,GAAAjG,GACA,MAAAkG,GAAAC,KAAAC,UAAApG,IAGA,QAAAqG,GAAArG,GACA,GAAAl7C,GAAAk7C,EAAA,GAAA,IACA2F,EAAA3F,EAAA,GAAA,IACA9oB,EAAA8oB,EAAA,GAAA,GAWA,OARAl7C,GAAAA,EAAA,OAAA+H,KAAAugB,KAAAtoB,EAAA,MAAA,MAAA,KAAAA,EAAA,MACA6gD,EAAAA,EAAA,OAAA94C,KAAAugB,KAAAu4B,EAAA,MAAA,MAAA,KAAAA,EAAA,MACAzuB,EAAAA,EAAA,OAAArqB,KAAAugB,KAAA8J,EAAA,MAAA,MAAA,KAAAA,EAAA,OAMA,KAJA,MAAApyB,EAAA,MAAA6gD,EAAA,MAAAzuB,GAIA,KAHA,MAAApyB,EAAA,MAAA6gD,EAAA,MAAAzuB,GAGA,KAFA,MAAApyB,EAAA,MAAA6gD,EAAA,MAAAzuB,IAKA,QAAAovB,GAAAtG,GACA,GAIAx6C,GAAAN,EAAAgyB,EAJAqvB,EAAAF,EAAArG,GACA30C,EAAAk7C,EAAA,GACAh7C,EAAAg7C,EAAA,GACAC,EAAAD,EAAA,EAeA,OAZAl7C,IAAA,OACAE,GAAA,IACAi7C,GAAA,QAEAn7C,EAAAA,EAAA,QAAAwB,KAAAugB,IAAA/hB,EAAA,EAAA,GAAA,MAAAA,EAAA,GAAA,IACAE,EAAAA,EAAA,QAAAsB,KAAAugB,IAAA7hB,EAAA,EAAA,GAAA,MAAAA,EAAA,GAAA,IACAi7C,EAAAA,EAAA,QAAA35C,KAAAugB,IAAAo5B,EAAA,EAAA,GAAA,MAAAA,EAAA,GAAA,IAEAhhD,EAAA,IAAA+F,EAAA,GACArG,EAAA,KAAAmG,EAAAE,GACA2rB,EAAA,KAAA3rB,EAAAi7C,IAEAhhD,EAAAN,EAAAgyB,GAGA,QAAAuvB,GAAA5gC,GACA,MAAA6gC,GAAAJ,EAAAzgC,IAGA,QAAA8gC,GAAAlF,GACA,GAGAmF,GAAAC,EAAAC,EAAA9G,EAAA0C,EAHAlvB,EAAAiuB,EAAA,GAAA,IACA18C,EAAA08C,EAAA,GAAA,IACAj8C,EAAAi8C,EAAA,GAAA,GAGA,IAAA,GAAA18C,EAEA,MADA29C,GAAA,IAAAl9C,GACAk9C,EAAAA,EAAAA,EAIAmE,GADArhD,EAAA,GACAA,GAAA,EAAAT,GAEAS,EAAAT,EAAAS,EAAAT,EACA6hD,EAAA,EAAAphD,EAAAqhD,EAEA7G,GAAA,EAAA,EAAA,EACA,KAAA,GAAA56C,GAAA,EAAAA,EAAA,EAAAA,IACA0hD,EAAAtzB,EAAA,EAAA,IAAApuB,EAAA,GACA0hD,EAAA,GAAAA,IACAA,EAAA,GAAAA,IAGApE,EADA,EAAAoE,EAAA,EACAF,EAAA,GAAAC,EAAAD,GAAAE,EACA,EAAAA,EAAA,EACAD,EACA,EAAAC,EAAA,EACAF,GAAAC,EAAAD,IAAA,EAAA,EAAAE,GAAA,EAEAF,EAEA5G,EAAA56C,GAAA,IAAAs9C,CAGA,OAAA1C,GAGA,QAAA+G,GAAAtF,GACA,GAGAuF,GAAAjF,EAHAvuB,EAAAiuB,EAAA,GACA18C,EAAA08C,EAAA,GAAA,IACAj8C,EAAAi8C,EAAA,GAAA,GAGA,OAAA,KAAAj8C,GAGA,EAAA,EAAA,IAGAA,GAAA,EACAT,GAAAS,GAAA,EAAAA,EAAA,EAAAA,EACAu8C,GAAAv8C,EAAAT,GAAA,EACAiiD,EAAA,EAAAjiD,GAAAS,EAAAT,IACAyuB,EAAA,IAAAwzB,EAAA,IAAAjF,IAGA,QAAAkF,GAAAphC,GACA,MAAAggC,GAAAc,EAAA9gC,IAGA,QAAAqhC,GAAArhC,GACA,MAAAigC,GAAAa,EAAA9gC,IAGA,QAAAshC,GAAAthC,GACA,MAAAogC,GAAAU,EAAA9gC,IAIA,QAAAuhC,GAAA1F,GACA,GAAAluB,GAAAkuB,EAAA,GAAA,GACA38C,EAAA28C,EAAA,GAAA,IACAK,EAAAL,EAAA,GAAA,IACA2F,EAAAx6C,KAAAyP,MAAAkX,GAAA,EAEAnuB,EAAAmuB,EAAA3mB,KAAAyP,MAAAkX,GACA7C,EAAA,IAAAoxB,GAAA,EAAAh9C,GACAuiD,EAAA,IAAAvF,GAAA,EAAAh9C,EAAAM,GACAT,EAAA,IAAAm9C,GAAA,EAAAh9C,GAAA,EAAAM,IACA08C,EAAA,IAAAA,CAEA,QAAAsF,GACA,IAAA,GACA,OAAAtF,EAAAn9C,EAAA+rB,EACA,KAAA,GACA,OAAA22B,EAAAvF,EAAApxB,EACA,KAAA,GACA,OAAAA,EAAAoxB,EAAAn9C,EACA,KAAA,GACA,OAAA+rB,EAAA22B,EAAAvF,EACA,KAAA,GACA,OAAAn9C,EAAA+rB,EAAAoxB,EACA,KAAA,GACA,OAAAA,EAAApxB,EAAA22B,IAIA,QAAAC,GAAA7F,GACA,GAGA8F,GAAAhiD,EAHAguB,EAAAkuB,EAAA,GACA38C,EAAA28C,EAAA,GAAA,IACAK,EAAAL,EAAA,GAAA,GAQA,OALAl8C,IAAA,EAAAT,GAAAg9C,EACAyF,EAAAziD,EAAAg9C,EACAyF,GAAAhiD,GAAA,EAAAA,EAAA,EAAAA,EACAgiD,EAAAA,GAAA,EACAhiD,GAAA,GACAguB,EAAA,IAAAg0B,EAAA,IAAAhiD,GAGA,QAAAiiD,GAAA5hC,GACA,MAAAggC,GAAAuB,EAAAvhC,IAGA,QAAA6hC,GAAA7hC,GACA,MAAAigC,GAAAsB,EAAAvhC,IAGA,QAAA8hC,GAAA9hC,GACA,MAAAogC,GAAAmB,EAAAvhC,IAIA,QAAA+hC,GAAA3G,GACA,GAIA77C,GAAA28C,EAAA18C,EAAAR,EAJA2uB,EAAAytB,EAAA,GAAA,IACA4G,EAAA5G,EAAA,GAAA,IACA6G,EAAA7G,EAAA,GAAA,IACApP,EAAAgW,EAAAC,CAiBA,QAbAjW,EAAA,IACAgW,GAAAhW,EACAiW,GAAAjW,GAGAzsC,EAAAyH,KAAAyP,MAAA,EAAAkX,GACAuuB,EAAA,EAAA+F,EACAziD,EAAA,EAAAmuB,EAAApuB,EACA,IAAA,EAAAA,KACAC,EAAA,EAAAA,GAEAR,EAAAgjD,EAAAxiD,GAAA08C,EAAA8F,GAEAziD,GACA,QACA,IAAA,GACA,IAAA,GAAAN,EAAAi9C,EAAA4D,EAAA9gD,EAAAqyB,EAAA2wB,CAAA,MACA,KAAA,GAAA/iD,EAAAD,EAAA8gD,EAAA5D,EAAA7qB,EAAA2wB,CAAA,MACA,KAAA,GAAA/iD,EAAA+iD,EAAAlC,EAAA5D,EAAA7qB,EAAAryB,CAAA,MACA,KAAA,GAAAC,EAAA+iD,EAAAlC,EAAA9gD,EAAAqyB,EAAA6qB,CAAA,MACA,KAAA,GAAAj9C,EAAAD,EAAA8gD,EAAAkC,EAAA3wB,EAAA6qB,CAAA,MACA,KAAA,GAAAj9C,EAAAi9C,EAAA4D,EAAAkC,EAAA3wB,EAAAryB,EAGA,OAAA,IAAAC,EAAA,IAAA6gD,EAAA,IAAAzuB,GAGA,QAAA6wB,GAAAliC,GACA,MAAA6/B,GAAAkC,EAAA/hC,IAGA,QAAAmiC,GAAAniC,GACA,MAAA+/B,GAAAgC,EAAA/hC,IAGA,QAAAoiC,GAAApiC,GACA,MAAAigC,GAAA8B,EAAA/hC,IAGA,QAAAqiC,GAAAriC,GACA,MAAAogC,GAAA2B,EAAA/hC,IAGA,QAAAsiC,GAAAxG,GACA,GAIA78C,GAAA6gD,EAAAzuB,EAJA5B,EAAAqsB,EAAA,GAAA,IACAoE,EAAApE,EAAA,GAAA,IACAp2C,EAAAo2C,EAAA,GAAA,IACAqE,EAAArE,EAAA,GAAA,GAMA,OAHA78C,GAAA,EAAA+H,KAAAC,IAAA,EAAAwoB,GAAA,EAAA0wB,GAAAA,GACAL,EAAA,EAAA94C,KAAAC,IAAA,EAAAi5C,GAAA,EAAAC,GAAAA,GACA9uB,EAAA,EAAArqB,KAAAC,IAAA,EAAAvB,GAAA,EAAAy6C,GAAAA,IACA,IAAAlhD,EAAA,IAAA6gD,EAAA,IAAAzuB,GAGA,QAAAkxB,GAAAviC,GACA,MAAA6/B,GAAAyC,EAAAtiC,IAGA,QAAAwiC,GAAAxiC,GACA,MAAA+/B,GAAAuC,EAAAtiC,IAGA,QAAAyiC,GAAAziC,GACA,MAAAggC,GAAAsC,EAAAtiC,IAGA,QAAA0iC,GAAA1iC,GACA,MAAAogC,GAAAkC,EAAAtiC,IAIA,QAAA2iC,GAAAjC,GACA,GAGAzhD,GAAA6gD,EAAAzuB,EAHA7rB,EAAAk7C,EAAA,GAAA,IACAh7C,EAAAg7C,EAAA,GAAA,IACAC,EAAAD,EAAA,GAAA,GAqBA,OAlBAzhD,GAAA,OAAAuG,EAAAE,GAAA,OAAAi7C,GAAA,MACAb,EAAAt6C,GAAA,MAAA,OAAAE,EAAA,MAAAi7C,EACAtvB,EAAA,MAAA7rB,EAAAE,GAAA,KAAA,MAAAi7C,EAGA1hD,EAAAA,EAAA,SAAA,MAAA+H,KAAAugB,IAAAtoB,EAAA,EAAA,KAAA,KACAA,GAAA,MAEA6gD,EAAAA,EAAA,SAAA,MAAA94C,KAAAugB,IAAAu4B,EAAA,EAAA,KAAA,KACAA,GAAA,MAEAzuB,EAAAA,EAAA,SAAA,MAAArqB,KAAAugB,IAAA8J,EAAA,EAAA,KAAA,KACAA,GAAA,MAEApyB,EAAA+H,KAAAC,IAAAD,KAAAE,IAAA,EAAAjI,GAAA,GACA6gD,EAAA94C,KAAAC,IAAAD,KAAAE,IAAA,EAAA44C,GAAA,GACAzuB,EAAArqB,KAAAC,IAAAD,KAAAE,IAAA,EAAAmqB,GAAA,IAEA,IAAApyB,EAAA,IAAA6gD,EAAA,IAAAzuB,GAGA,QAAAuxB,GAAAlC,GACA,GAGA/gD,GAAAN,EAAAgyB,EAHA7rB,EAAAk7C,EAAA,GACAh7C,EAAAg7C,EAAA,GACAC,EAAAD,EAAA,EAeA,OAZAl7C,IAAA,OACAE,GAAA,IACAi7C,GAAA,QAEAn7C,EAAAA,EAAA,QAAAwB,KAAAugB,IAAA/hB,EAAA,EAAA,GAAA,MAAAA,EAAA,GAAA,IACAE,EAAAA,EAAA,QAAAsB,KAAAugB,IAAA7hB,EAAA,EAAA,GAAA,MAAAA,EAAA,GAAA,IACAi7C,EAAAA,EAAA,QAAA35C,KAAAugB,IAAAo5B,EAAA,EAAA,GAAA,MAAAA,EAAA,GAAA,IAEAhhD,EAAA,IAAA+F,EAAA,GACArG,EAAA,KAAAmG,EAAAE,GACA2rB,EAAA,KAAA3rB,EAAAi7C,IAEAhhD,EAAAN,EAAAgyB,GAGA,QAAAwxB,GAAA7iC,GACA,MAAA6gC,GAAA+B,EAAA5iC,IAGA,QAAA8iC,GAAAC,GACA,GAGAv9C,GAAAE,EAAAi7C,EAAAlhB,EAHA9/B,EAAAojD,EAAA,GACA1jD,EAAA0jD,EAAA,GACA1xB,EAAA0xB,EAAA,EAeA,OAZApjD,IAAA,GACA+F,EAAA,IAAA/F,EAAA,MACA8/B,EAAA/5B,EAAA,IAAA,MAAA,GAAA,MAEAA,EAAA,IAAAsB,KAAAugB,KAAA5nB,EAAA,IAAA,IAAA,GACA8/B,EAAAz4B,KAAAugB,IAAA7hB,EAAA,IAAA,EAAA,IAGAF,EAAAA,EAAA,QAAA,QAAAA,EAAA,QAAAnG,EAAA,IAAAogC,EAAA,GAAA,KAAA,MAAA,OAAAz4B,KAAAugB,IAAAloB,EAAA,IAAAogC,EAAA,GAEAkhB,EAAAA,EAAA,SAAA,QAAAA,EAAA,SAAAlhB,EAAApO,EAAA,IAAA,GAAA,KAAA,MAAA,QAAArqB,KAAAugB,IAAAkY,EAAApO,EAAA,IAAA,IAEA7rB,EAAAE,EAAAi7C,GAGA,QAAAE,GAAAkC,GACA,GAGAC,GAAAr1B,EAAA8B,EAHA9vB,EAAAojD,EAAA,GACA1jD,EAAA0jD,EAAA,GACA1xB,EAAA0xB,EAAA,EASA,OANAC,GAAAh8C,KAAAmgB,MAAAkK,EAAAhyB,GACAsuB,EAAA,IAAAq1B,EAAA,EAAAh8C,KAAAyF,GACAkhB,EAAA,IACAA,GAAA,KAEA8B,EAAAzoB,KAAAmQ,KAAA9X,EAAAA,EAAAgyB,EAAAA,IACA1xB,EAAA8vB,EAAA9B,GAGA,QAAAs1B,GAAAjjC,GACA,MAAA2iC,GAAAG,EAAA9iC,IAGA,QAAAkjC,GAAAC,GACA,GAGA9jD,GAAAgyB,EAAA2xB,EAHArjD,EAAAwjD,EAAA,GACA1zB,EAAA0zB,EAAA,GACAx1B,EAAAw1B,EAAA,EAMA,OAHAH,GAAAr1B,EAAA,IAAA,EAAA3mB,KAAAyF,GACApN,EAAAowB,EAAAzoB,KAAAiH,IAAA+0C,GACA3xB,EAAA5B,EAAAzoB,KAAAkH,IAAA80C,IACArjD,EAAAN,EAAAgyB,GAGA,QAAA+xB,GAAApjC,GACA,MAAA8iC,GAAAI,EAAAljC,IAGA,QAAAqjC,GAAArjC,GACA,MAAAijC,GAAAC,EAAAljC,IAGA,QAAAsjC,GAAAjI,GACA,MAAAkI,GAAAlI,GAGA,QAAAmI,GAAAxjC,GACA,MAAA6/B,GAAAyD,EAAAtjC,IAGA,QAAAyjC,GAAAzjC,GACA,MAAA+/B,GAAAuD,EAAAtjC,IAGA,QAAA0jC,GAAA1jC,GACA,MAAAggC,GAAAsD,EAAAtjC,IAGA,QAAA2jC,GAAA3jC,GACA,MAAAigC,GAAAqD,EAAAtjC,IAGA,QAAA4jC,GAAA5jC,GACA,MAAAygC,GAAA6C,EAAAtjC,IAGA,QAAA6jC,GAAA7jC,GACA,MAAAwgC,GAAA8C,EAAAtjC,IA1hBAhgB,EAAAJ,SACAigD,QAAAA,EACAE,QAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAG,YAAAA,EACAI,QAAAA,EACAC,QAAAA,EACAG,QAAAA,EAEAE,QAAAA,EACAI,QAAAA,EACAE,QAAAA,EACAC,SAAAA,EACAC,YAAAA,EAEAC,QAAAA,EACAG,QAAAA,EACAE,QAAAA,EACAC,SAAAA,EACAC,YAAAA,EAEAC,QAAAA,EACAG,QAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAC,YAAAA,EAEAC,SAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,aAAAA,EAEAY,YAAAA,EACAE,YAAAA,EACAC,YAAAA,EACAC,YAAAA,EACAC,aAAAA,EACAC,YAAAA,EACAC,YAAAA,EAEAlB,QAAAA,EACAC,QAAAA,EACAC,QAAAA,EAEAC,QAAAA,EACAG,QAAAA,EACApC,QAAAA,EAEAqC,QAAAA,EACAE,QAAAA,EACAC,QAAAA,EAyeA,IAAAE,IACAO,WAAA,IAAA,IAAA,KACAC,cAAA,IAAA,IAAA,KACAC,MAAA,EAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAC,OAAA,IAAA,IAAA,KACAC,OAAA,IAAA,IAAA,KACAC,QAAA,IAAA,IAAA,KACA7G,OAAA,EAAA,EAAA,GACA8G,gBAAA,IAAA,IAAA,KACArH,MAAA,EAAA,EAAA,KACAsH,YAAA,IAAA,GAAA,KACAC,OAAA,IAAA,GAAA,IACAC,WAAA,IAAA,IAAA,KACAC,WAAA,GAAA,IAAA,KACAC,YAAA,IAAA,IAAA,GACAC,WAAA,IAAA,IAAA,IACAC,OAAA,IAAA,IAAA,IACAC,gBAAA,IAAA,IAAA,KACAC,UAAA,IAAA,IAAA,KACAC,SAAA,IAAA,GAAA,IACA3I,MAAA,EAAA,IAAA,KACA4I,UAAA,EAAA,EAAA,KACAC,UAAA,EAAA,IAAA,KACAC,eAAA,IAAA,IAAA,IACAC,UAAA,IAAA,IAAA,KACAC,WAAA,EAAA,IAAA,GACAC,UAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,aAAA,IAAA,EAAA,KACAC,gBAAA,GAAA,IAAA,IACAC,YAAA,IAAA,IAAA,GACAC,YAAA,IAAA,GAAA,KACAC,SAAA,IAAA,EAAA,GACAC,YAAA,IAAA,IAAA,KACAC,cAAA,IAAA,IAAA,KACAC,eAAA,GAAA,GAAA,KACAC,eAAA,GAAA,GAAA,IACAC,eAAA,GAAA,GAAA,IACAC,eAAA,EAAA,IAAA,KACAC,YAAA,IAAA,EAAA,KACAC,UAAA,IAAA,GAAA,KACAC,aAAA,EAAA,IAAA,KACAC,SAAA,IAAA,IAAA,KACAC,SAAA,IAAA,IAAA,KACAC,YAAA,GAAA,IAAA,KACAC,WAAA,IAAA,GAAA,IACAC,aAAA,IAAA,IAAA,KACAC,aAAA,GAAA,IAAA,IACAC,SAAA,IAAA,EAAA,KACAC,WAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAC,MAAA,IAAA,IAAA,GACAC,WAAA,IAAA,IAAA,IACAC,MAAA,IAAA,IAAA,KACAjK,OAAA,EAAA,IAAA,GACAkK,aAAA,IAAA,IAAA,IACAC,MAAA,IAAA,IAAA,KACAC,UAAA,IAAA,IAAA,KACAC,SAAA,IAAA,IAAA,KACAC,WAAA,IAAA,GAAA,IACAC,QAAA,GAAA,EAAA,KACAC,OAAA,IAAA,IAAA,KACAC,OAAA,IAAA,IAAA,KACAC,UAAA,IAAA,IAAA,KACAC,eAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,GACAC,cAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,sBAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,aAAA,IAAA,IAAA,KACAC,eAAA,GAAA,IAAA,KACAC,cAAA,IAAA,IAAA,KACAC,gBAAA,IAAA,IAAA,KACAC,gBAAA,IAAA,IAAA,KACAC,gBAAA,IAAA,IAAA,KACAC,aAAA,IAAA,IAAA,KACAC,MAAA,EAAA,IAAA,GACAC,WAAA,GAAA,IAAA,IACAC,OAAA,IAAA,IAAA,KACAzL,SAAA,IAAA,EAAA,KACA0L,QAAA,IAAA,EAAA,GACAC,kBAAA,IAAA,IAAA,KACAC,YAAA,EAAA,EAAA,KACAC,cAAA,IAAA,GAAA,KACAC,cAAA,IAAA,IAAA,KACAC,gBAAA,GAAA,IAAA,KACAC,iBAAA,IAAA,IAAA,KACAC,mBAAA,EAAA,IAAA,KACAC,iBAAA,GAAA,IAAA,KACAC,iBAAA,IAAA,GAAA,KACAC,cAAA,GAAA,GAAA,KACAC,WAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,UAAA,IAAA,IAAA,KACAC,aAAA,IAAA,IAAA,KACAC,MAAA,EAAA,EAAA,KACAC,SAAA,IAAA,IAAA,KACAC,OAAA,IAAA,IAAA,GACAC,WAAA,IAAA,IAAA,IACAC,QAAA,IAAA,IAAA,GACAC,WAAA,IAAA,GAAA,GACAC,QAAA,IAAA,IAAA,KACAC,eAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,eAAA,IAAA,IAAA,KACAC,eAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,MAAA,IAAA,IAAA,IACAC,MAAA,IAAA,IAAA,KACAC,MAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAC,QAAA,IAAA,EAAA,KACAC,eAAA,IAAA,GAAA,KACAhP,KAAA,IAAA,EAAA,GACAiP,WAAA,IAAA,IAAA,KACAC,WAAA,GAAA,IAAA,KACAC,aAAA,IAAA,GAAA,IACAC,QAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,IACAC,UAAA,GAAA,IAAA,IACAC,UAAA,IAAA,IAAA,KACAC,QAAA,IAAA,GAAA,IACAC,QAAA,IAAA,IAAA,KACAC,SAAA,IAAA,IAAA,KACAC,WAAA,IAAA,GAAA,KACAC,WAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,MAAA,IAAA,IAAA,KACAC,aAAA,EAAA,IAAA,KACAC,WAAA,GAAA,IAAA,KACAC,KAAA,IAAA,IAAA,KACAC,MAAA,EAAA,IAAA,KACAC,SAAA,IAAA,IAAA,KACAC,QAAA,IAAA,GAAA,IACAC,WAAA,GAAA,IAAA,KACAC,QAAA,IAAA,IAAA,KACAC,OAAA,IAAA,IAAA,KACAC,OAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAnP,QAAA,IAAA,IAAA,GACAoP,aAAA,IAAA,IAAA,KAGArM,IACA,KAAA,GAAAxgC,KAAA0jC,GACAlD,EAAAC,KAAAC,UAAAgD,EAAA1jC,KAAAA,2BCxrBA,GAAA8sC,GAAArtD,EAAA,iBAEAm8C,EAAA,WACA,MAAA,IAAAmR,GAGA,KAAA,GAAAC,KAAAF,GAAA,CAEAlR,EAAAoR,EAAA,OAAA,SAAAA,GAEA,MAAA,UAAAC,GAGA,MAFA,gBAAAA,KACAA,EAAA7sC,MAAAnd,UAAA+J,MAAAhN,KAAAqe,YACAyuC,EAAAE,GAAAC,KAEAD,EAEA,IAAAE,GAAA,cAAAC,KAAAH,GACAI,EAAAF,EAAA,GACAG,EAAAH,EAAA,EAGAtR,GAAAwR,GAAAxR,EAAAwR,OAEAxR,EAAAwR,GAAAC,GAAAzR,EAAAoR,GAAA,SAAAA,GACA,MAAA,UAAAC,GACA,gBAAAA,KACAA,EAAA7sC,MAAAnd,UAAA+J,MAAAhN,KAAAqe,WAEA,IAAA2+B,GAAA8P,EAAAE,GAAAC,EACA,IAAA,gBAAAjQ,IAAAz4C,SAAAy4C,EACA,MAAAA,EAEA,KAAA,GAAAt9C,GAAA,EAAAA,EAAAs9C,EAAA/8C,OAAAP,IACAs9C,EAAAt9C,GAAAyH,KAAAif,MAAA42B,EAAAt9C,GACA,OAAAs9C,KAEAgQ,GAKA,GAAAD,GAAA,WACA7pD,KAAAoqD,SAKAP,GAAA9pD,UAAAsqD,WAAA,SAAA5N,EAAAx/B,GACA,GAAA8a,GAAA9a,EAAA,EACA,OAAA5b,UAAA02B,EAEA/3B,KAAAw8C,UAAAC,IAGA,gBAAA1kB,KACAA,EAAA7a,MAAAnd,UAAA+J,MAAAhN,KAAAmgB,IAGAjd,KAAAg5C,UAAAyD,EAAA1kB,KAIA8xB,EAAA9pD,UAAAi5C,UAAA,SAAAyD,EAAA1kB,GAIA,MAHA/3B,MAAAy8C,MAAAA,EACAz8C,KAAAoqD,SACApqD,KAAAoqD,MAAA3N,GAAA1kB,EACA/3B,MAMA6pD,EAAA9pD,UAAAy8C,UAAA,SAAAC,GACA,GAAA5E,GAAA73C,KAAAoqD,MAAA3N,EACA,KAAA5E,EAAA,CACA,GAAAyS,GAAAtqD,KAAAy8C,MACAyN,EAAAlqD,KAAAoqD,MAAAE,EACAzS,GAAAa,EAAA4R,GAAA7N,GAAAyN,GAEAlqD,KAAAoqD,MAAA3N,GAAA5E,EAEA,MAAAA,KAGA,MAAA,MAAA,MAAA,OAAA,WAAAriC,QAAA,SAAAinC,GACAoN,EAAA9pD,UAAA08C,GAAA,SAAA5E,GACA,MAAA73C,MAAAqqD,WAAA5N,EAAAthC,cAIAle,EAAAJ,QAAA67C,6CC3FAz7C,EAAAJ,SACAkkD,WAAA,IAAA,IAAA,KACAC,cAAA,IAAA,IAAA,KACAC,MAAA,EAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAC,OAAA,IAAA,IAAA,KACAC,OAAA,IAAA,IAAA,KACAC,QAAA,IAAA,IAAA,KACA7G,OAAA,EAAA,EAAA,GACA8G,gBAAA,IAAA,IAAA,KACArH,MAAA,EAAA,EAAA,KACAsH,YAAA,IAAA,GAAA,KACAC,OAAA,IAAA,GAAA,IACAC,WAAA,IAAA,IAAA,KACAC,WAAA,GAAA,IAAA,KACAC,YAAA,IAAA,IAAA,GACAC,WAAA,IAAA,IAAA,IACAC,OAAA,IAAA,IAAA,IACAC,gBAAA,IAAA,IAAA,KACAC,UAAA,IAAA,IAAA,KACAC,SAAA,IAAA,GAAA,IACA3I,MAAA,EAAA,IAAA,KACA4I,UAAA,EAAA,EAAA,KACAC,UAAA,EAAA,IAAA,KACAC,eAAA,IAAA,IAAA,IACAC,UAAA,IAAA,IAAA,KACAC,WAAA,EAAA,IAAA,GACAC,UAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,aAAA,IAAA,EAAA,KACAC,gBAAA,GAAA,IAAA,IACAC,YAAA,IAAA,IAAA,GACAC,YAAA,IAAA,GAAA,KACAC,SAAA,IAAA,EAAA,GACAC,YAAA,IAAA,IAAA,KACAC,cAAA,IAAA,IAAA,KACAC,eAAA,GAAA,GAAA,KACAC,eAAA,GAAA,GAAA,IACAC,eAAA,GAAA,GAAA,IACAC,eAAA,EAAA,IAAA,KACAC,YAAA,IAAA,EAAA,KACAC,UAAA,IAAA,GAAA,KACAC,aAAA,EAAA,IAAA,KACAC,SAAA,IAAA,IAAA,KACAC,SAAA,IAAA,IAAA,KACAC,YAAA,GAAA,IAAA,KACAC,WAAA,IAAA,GAAA,IACAC,aAAA,IAAA,IAAA,KACAC,aAAA,GAAA,IAAA,IACAC,SAAA,IAAA,EAAA,KACAC,WAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAC,MAAA,IAAA,IAAA,GACAC,WAAA,IAAA,IAAA,IACAC,MAAA,IAAA,IAAA,KACAjK,OAAA,EAAA,IAAA,GACAkK,aAAA,IAAA,IAAA,IACAC,MAAA,IAAA,IAAA,KACAC,UAAA,IAAA,IAAA,KACAC,SAAA,IAAA,IAAA,KACAC,WAAA,IAAA,GAAA,IACAC,QAAA,GAAA,EAAA,KACAC,OAAA,IAAA,IAAA,KACAC,OAAA,IAAA,IAAA,KACAC,UAAA,IAAA,IAAA,KACAC,eAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,GACAC,cAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,sBAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,aAAA,IAAA,IAAA,KACAC,eAAA,GAAA,IAAA,KACAC,cAAA,IAAA,IAAA,KACAC,gBAAA,IAAA,IAAA,KACAC,gBAAA,IAAA,IAAA,KACAC,gBAAA,IAAA,IAAA,KACAC,aAAA,IAAA,IAAA,KACAC,MAAA,EAAA,IAAA,GACAC,WAAA,GAAA,IAAA,IACAC,OAAA,IAAA,IAAA,KACAzL,SAAA,IAAA,EAAA,KACA0L,QAAA,IAAA,EAAA,GACAC,kBAAA,IAAA,IAAA,KACAC,YAAA,EAAA,EAAA,KACAC,cAAA,IAAA,GAAA,KACAC,cAAA,IAAA,IAAA,KACAC,gBAAA,GAAA,IAAA,KACAC,iBAAA,IAAA,IAAA,KACAC,mBAAA,EAAA,IAAA,KACAC,iBAAA,GAAA,IAAA,KACAC,iBAAA,IAAA,GAAA,KACAC,cAAA,GAAA,GAAA,KACAC,WAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,UAAA,IAAA,IAAA,KACAC,aAAA,IAAA,IAAA,KACAC,MAAA,EAAA,EAAA,KACAC,SAAA,IAAA,IAAA,KACAC,OAAA,IAAA,IAAA,GACAC,WAAA,IAAA,IAAA,IACAC,QAAA,IAAA,IAAA,GACAC,WAAA,IAAA,GAAA,GACAC,QAAA,IAAA,IAAA,KACAC,eAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,eAAA,IAAA,IAAA,KACAC,eAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,MAAA,IAAA,IAAA,IACAC,MAAA,IAAA,IAAA,KACAC,MAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAC,QAAA,IAAA,EAAA,KACAC,eAAA,IAAA,GAAA,KACAhP,KAAA,IAAA,EAAA,GACAiP,WAAA,IAAA,IAAA,KACAC,WAAA,GAAA,IAAA,KACAC,aAAA,IAAA,GAAA,IACAC,QAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,IACAC,UAAA,GAAA,IAAA,IACAC,UAAA,IAAA,IAAA,KACAC,QAAA,IAAA,GAAA,IACAC,QAAA,IAAA,IAAA,KACAC,SAAA,IAAA,IAAA,KACAC,WAAA,IAAA,GAAA,KACAC,WAAA,IAAA,IAAA,KACAC,WAAA,IAAA,IAAA,KACAC,MAAA,IAAA,IAAA,KACAC,aAAA,EAAA,IAAA,KACAC,WAAA,GAAA,IAAA,KACAC,KAAA,IAAA,IAAA,KACAC,MAAA,EAAA,IAAA,KACAC,SAAA,IAAA,IAAA,KACAC,QAAA,IAAA,GAAA,IACAC,WAAA,GAAA,IAAA,KACAC,QAAA,IAAA,IAAA,KACAC,OAAA,IAAA,IAAA,KACAC,OAAA,IAAA,IAAA,KACAC,YAAA,IAAA,IAAA,KACAnP,QAAA,IAAA,IAAA,GACAoP,aAAA,IAAA,IAAA,+BC9IA,SAAAl4C,EAAA84C,GACA,gBAAA1tD,IAAA,SAAAI,EAAAA,EAAAJ,QAAA0tD,IACA,kBAAAC,SAAAA,OAAAC,IAAAD,OAAAD,GACA94C,EAAA6hC,OAAAiX,KACAvqD,KAAA,WAAA,YAIA,SAAA0qD,KACA,MAAAC,IAAAzvC,MAAA,KAAAC,WASA,QAAAtR,GAAA+gD,GACA,MAAAA,aAAA1tC,QAAA,mBAAA3G,OAAAxW,UAAAiU,SAAAlX,KAAA8tD,GAGA,QAAAC,GAAAD,GAGA,MAAA,OAAAA,GAAA,oBAAAr0C,OAAAxW,UAAAiU,SAAAlX,KAAA8tD,GAGA,QAAAE,GAAA9pC,GACA,GAAAo8B,EACA,KAAAA,IAAAp8B,GAEA,OAAA,CAEA,QAAA,EAGA,QAAA+pC,GAAAH,GACA,MAAA,UAAAA,EAGA,QAAAvrC,GAAAurC,GACA,MAAA,gBAAAA,IAAA,oBAAAr0C,OAAAxW,UAAAiU,SAAAlX,KAAA8tD,GAGA,QAAAI,GAAAJ,GACA,MAAAA,aAAAr3C,OAAA,kBAAAgD,OAAAxW,UAAAiU,SAAAlX,KAAA8tD,GAGA,QAAA9hD,GAAAmiD,EAAA/9B,GACA,GAAA1wB,GAAA2gB,IACA,KAAA3gB,EAAA,EAAAA,EAAAyuD,EAAAluD,SAAAP,EACA2gB,EAAA7b,KAAA4rB,EAAA+9B,EAAAzuD,GAAAA,GAEA,OAAA2gB,GAGA,QAAA+tC,GAAA5uD,EAAAgyB,GACA,MAAA/X,QAAAxW,UAAA8e,eAAA/hB,KAAAR,EAAAgyB,GAGA,QAAA9uB,GAAAlD,EAAAgyB,GACA,IAAA,GAAA9xB,KAAA8xB,GACA48B,EAAA58B,EAAA9xB,KACAF,EAAAE,GAAA8xB,EAAA9xB,GAYA,OARA0uD,GAAA58B,EAAA,cACAhyB,EAAA0X,SAAAsa,EAAAta,UAGAk3C,EAAA58B,EAAA,aACAhyB,EAAA6uD,QAAA78B,EAAA68B,SAGA7uD,EAGA,QAAA8uD,GAAAR,EAAA/W,EAAAwX,EAAAC,GACA,MAAAC,IAAAX,EAAA/W,EAAAwX,EAAAC,GAAA,GAAAE,MAGA,QAAAC,KAEA,OACAC,OAAA,EACAC,gBACAC,eACAC,UAAA,EACAC,cAAA,EACAC,WAAA,EACAC,aAAA,KACAC,eAAA,EACAC,iBAAA,EACAC,KAAA,EACAC,mBACAC,SAAA,KACAC,SAAA,EACAC,iBAAA,GAIA,QAAAC,GAAArP,GAIA,MAHA,OAAAA,EAAAsP,MACAtP,EAAAsP,IAAAhB,KAEAtO,EAAAsP,IAuBA,QAAAjX,GAAA2H,GACA,GAAA,MAAAA,EAAAuP,SAAA,CACA,GAAAC,GAAAH,EAAArP,GACAyP,EAAAC,GAAA/vD,KAAA6vD,EAAAP,gBAAA,SAAA5vD,GACA,MAAA,OAAAA,IAEAswD,GAAA7mD,MAAAk3C,EAAA4P,GAAAC,YACAL,EAAAd,SAAA,IACAc,EAAAjB,QACAiB,EAAAX,eACAW,EAAAM,iBACAN,EAAAZ,YACAY,EAAAV,gBACAU,EAAAT,mBACAS,EAAAN,UAAAM,EAAAN,UAAAO,EASA,IAPAzP,EAAA+P,UACAJ,EAAAA,GACA,IAAAH,EAAAb,eACA,IAAAa,EAAAhB,aAAA5uD,QACAsE,SAAAsrD,EAAAQ,SAGA,MAAA52C,OAAA62C,UAAA72C,OAAA62C,SAAAjQ,GAIA,MAAA2P,EAHA3P,GAAAuP,SAAAI,EAMA,MAAA3P,GAAAuP,SAGA,QAAAW,GAAAV,GACA,GAAAxP,GAAAiO,EAAAvjD,IAQA,OAPA,OAAA8kD,EACAntD,EAAAgtD,EAAArP,GAAAwP,GAGAH,EAAArP,GAAA+O,iBAAA,EAGA/O,EAOA,QAAAmQ,GAAAnD,EAAAD,GACA,GAAA1tD,GAAAqwC,EAAAiN,CAiCA,IA/BAiR,EAAAb,EAAAqD,oBACApD,EAAAoD,iBAAArD,EAAAqD,kBAEAxC,EAAAb,EAAAsD,MACArD,EAAAqD,GAAAtD,EAAAsD,IAEAzC,EAAAb,EAAAuD,MACAtD,EAAAsD,GAAAvD,EAAAuD,IAEA1C,EAAAb,EAAAwD,MACAvD,EAAAuD,GAAAxD,EAAAwD,IAEA3C,EAAAb,EAAAgD,WACA/C,EAAA+C,QAAAhD,EAAAgD,SAEAnC,EAAAb,EAAAyD,QACAxD,EAAAwD,KAAAzD,EAAAyD,MAEA5C,EAAAb,EAAA0D,UACAzD,EAAAyD,OAAA1D,EAAA0D,QAEA7C,EAAAb,EAAA2D,WACA1D,EAAA0D,QAAA3D,EAAA2D,SAEA9C,EAAAb,EAAAuC,OACAtC,EAAAsC,IAAAD,EAAAtC,IAEAa,EAAAb,EAAA4D,WACA3D,EAAA2D,QAAA5D,EAAA4D,SAGAC,GAAAhxD,OAAA,EACA,IAAAP,EAAA,EAAAA,EAAAuxD,GAAAhxD,OAAAP,IACAqwC,EAAAkhB,GAAAvxD,GACAs9C,EAAAoQ,EAAArd,GACAke,EAAAjR,KACAqQ,EAAAtd,GAAAiN,EAKA,OAAAqQ,GAMA,QAAA6D,GAAA1wD,GACAgwD,EAAAttD,KAAA1C,GACA0C,KAAA+sD,GAAA,GAAAx5C,MAAA,MAAAjW,EAAAyvD,GAAAzvD,EAAAyvD,GAAAC,UAAAnlD,KACA7H,KAAAw1C,YACAx1C,KAAA+sD,GAAA,GAAAx5C,MAAA1L,MAIAomD,MAAA,IACAA,IAAA,EACAvD,EAAAwD,aAAAluD,MACAiuD,IAAA,GAIA,QAAAE,GAAAntC,GACA,MAAAA,aAAAgtC,IAAA,MAAAhtC,GAAA,MAAAA,EAAAusC,iBAGA,QAAAa,GAAAC,GACA,MAAAA,GAAA,EAEApqD,KAAAu6B,KAAA6vB,IAAA,EAEApqD,KAAAyP,MAAA26C,GAIA,QAAAC,GAAAC,GACA,GAAAC,IAAAD,EACA3qD,EAAA,CAMA,OAJA,KAAA4qD,GAAA3rC,SAAA2rC,KACA5qD,EAAAwqD,EAAAI,IAGA5qD,EAIA,QAAA6qD,GAAAC,EAAAC,EAAAC,GACA,GAGApyD,GAHAiJ,EAAAxB,KAAAC,IAAAwqD,EAAA3xD,OAAA4xD,EAAA5xD,QACA8xD,EAAA5qD,KAAAyI,IAAAgiD,EAAA3xD,OAAA4xD,EAAA5xD,QACA+xD,EAAA,CAEA,KAAAtyD,EAAA,EAAAA,EAAAiJ,EAAAjJ,KACAoyD,GAAAF,EAAAlyD,KAAAmyD,EAAAnyD,KACAoyD,GAAAN,EAAAI,EAAAlyD,MAAA8xD,EAAAK,EAAAnyD,MACAsyD,GAGA,OAAAA,GAAAD,EAGA,QAAA3X,GAAA6X,GACArE,EAAAsE,+BAAA,GACA,mBAAAt4C,UAAAA,QAAAwgC,MACAxgC,QAAAwgC,KAAA,wBAAA6X,GAIA,QAAAE,GAAAF,EAAA7hC,GACA,GAAAgiC,IAAA,CAEA,OAAA1vD,GAAA,WAIA,GAHA,MAAAkrD,EAAAyE,oBACAzE,EAAAyE,mBAAA,KAAAJ,GAEAG,EAAA,CAGA,IAAA,GADAnF,GADA9sC,KAEAzgB,EAAA,EAAAA,EAAA2e,UAAApe,OAAAP,IAAA,CAEA,GADAutD,EAAA,GACA,gBAAA5uC,WAAA3e,GAAA,CACAutD,GAAA,MAAAvtD,EAAA,IACA,KAAA,GAAAsgB,KAAA3B,WAAA,GACA4uC,GAAAjtC,EAAA,KAAA3B,UAAA,GAAA2B,GAAA,IAEAitC,GAAAA,EAAAjgD,MAAA,GAAA,OAEAigD,GAAA5uC,UAAA3e,EAEAygB,GAAA3b,KAAAyoD,GAEA7S,EAAA6X,EAAA,gBAAA7xC,MAAAnd,UAAA+J,MAAAhN,KAAAmgB,GAAAtU,KAAA,IAAA,MAAA,GAAAjM,QAAA4D,OACA4uD,GAAA,EAEA,MAAAhiC,GAAAhS,MAAAlb,KAAAmb,YACA+R,GAKA,QAAAkiC,GAAA3b,EAAAsb,GACA,MAAArE,EAAAyE,oBACAzE,EAAAyE,mBAAA1b,EAAAsb,GAEAM,GAAA5b,KACAyD,EAAA6X,GACAM,GAAA5b,IAAA,GAOA,QAAA6b,GAAA1E,GACA,MAAAA,aAAA2E,WAAA,sBAAAh5C,OAAAxW,UAAAiU,SAAAlX,KAAA8tD,GAGA,QAAA4E,GAAAlyD,GACA,GAAAuvC,GAAArwC,CACA,KAAAA,IAAAc,GACAuvC,EAAAvvC,EAAAd,GACA8yD,EAAAziB,GACA7sC,KAAAxD,GAAAqwC,EAEA7sC,KAAA,IAAAxD,GAAAqwC,CAGA7sC,MAAAyvD,QAAAnyD,EAIA0C,KAAA0vD,+BAAA,GAAAC,SACA3vD,KAAA4vD,wBAAAxT,QAAAp8C,KAAA6vD,cAAAzT,QACA,IAAA,UAAAA,QAGA,QAAA0T,GAAAC,EAAAC,GACA,GAAAnjB,GAAA1vB,EAAA3d,KAAAuwD,EACA,KAAAljB,IAAAmjB,GACA9E,EAAA8E,EAAAnjB,KACAge,EAAAkF,EAAAljB,KAAAge,EAAAmF,EAAAnjB,KACA1vB,EAAA0vB,MACArtC,EAAA2d,EAAA0vB,GAAAkjB,EAAAljB,IACArtC,EAAA2d,EAAA0vB,GAAAmjB,EAAAnjB,KACA,MAAAmjB,EAAAnjB,GACA1vB,EAAA0vB,GAAAmjB,EAAAnjB,SAEA1vB,GAAA0vB,GAIA,KAAAA,IAAAkjB,GACA7E,EAAA6E,EAAAljB,KACAqe,EAAA8E,EAAAnjB,IACAge,EAAAkF,EAAAljB,MAEA1vB,EAAA0vB,GAAArtC,KAAA2d,EAAA0vB,IAGA,OAAA1vB,GAGA,QAAA8yC,GAAA3yD,GACA,MAAAA,GACA0C,KAAAwvD,IAAAlyD,GA+BA,QAAA4yD,GAAApzC,EAAAqzC,EAAA38C,GACA,GAAA48C,GAAApwD,KAAAqwD,UAAAvzC,IAAA9c,KAAAqwD,UAAA,QACA,OAAAf,GAAAc,GAAAA,EAAAtzD,KAAAqzD,EAAA38C,GAAA48C,EAYA,QAAAE,GAAAxzC,GACA,GAAA+2B,GAAA7zC,KAAAuwD,gBAAAzzC,GACA0zC,EAAAxwD,KAAAuwD,gBAAAzzC,EAAAE,cAEA,OAAA62B,KAAA2c,EACA3c,GAGA7zC,KAAAuwD,gBAAAzzC,GAAA0zC,EAAAC,QAAA,mBAAA,SAAA3W,GACA,MAAAA,GAAAhwC,MAAA,KAGA9J,KAAAuwD,gBAAAzzC,IAKA,QAAA4zC,KACA,MAAA1wD,MAAA2wD,aAMA,QAAAC,GAAAvC,GACA,MAAAruD,MAAA6wD,SAAAJ,QAAA,KAAApC,GAoBA,QAAAyC,GAAAzC,EAAA0C,EAAA1kC,EAAA2kC,GACA,GAAAZ,GAAApwD,KAAAixD,cAAA5kC,EACA,OAAAijC,GAAAc,GACAA,EAAA/B,EAAA0C,EAAA1kC,EAAA2kC,GACAZ,EAAAK,QAAA,MAAApC,GAGA,QAAA6C,GAAAtb,EAAAwa,GACA,GAAAvc,GAAA7zC,KAAAixD,cAAArb,EAAA,EAAA,SAAA,OACA,OAAA0Z,GAAAzb,GAAAA,EAAAuc,GAAAvc,EAAA4c,QAAA,MAAAL,GAKA,QAAAe,GAAArd,EAAAsd,GACA,GAAAC,GAAAvd,EAAAwd,aACAC,IAAAF,GAAAE,GAAAF,EAAA,KAAAE,GAAAH,GAAAtd,EAGA,QAAA0d,GAAAhe,GACA,MAAA,gBAAAA,GAAA+d,GAAA/d,IAAA+d,GAAA/d,EAAA8d,eAAAjwD,OAGA,QAAAowD,GAAAC,GACA,GACAC,GACA9kB,EAFA+kB,IAIA,KAAA/kB,IAAA6kB,GACAxG,EAAAwG,EAAA7kB,KACA8kB,EAAAH,EAAA3kB,MAEA+kB,EAAAD,GAAAD,EAAA7kB,GAKA,OAAA+kB,GAKA,QAAAC,GAAA/d,EAAAge,GACAC,GAAAje,GAAAge,EAGA,QAAAE,GAAAC,GACA,GAAAze,KACA,KAAA,GAAAn3C,KAAA41D,GACAze,EAAAlyC,MAAAwyC,KAAAz3C,EAAAy1D,SAAAC,GAAA11D,IAKA,OAHAm3C,GAAAnlB,KAAA,SAAA/xB,EAAAgyB,GACA,MAAAhyB,GAAAw1D,SAAAxjC,EAAAwjC,WAEAte,EAGA,QAAA0e,GAAApe,EAAAqe,GACA,MAAA,UAAAvuD,GACA,MAAA,OAAAA,GACAwuD,EAAApyD,KAAA8zC,EAAAlwC,GACA8mD,EAAAwD,aAAAluD,KAAAmyD,GACAnyD,MAEAyW,EAAAzW,KAAA8zC,IAKA,QAAAr9B,GAAA05C,EAAArc,GACA,MAAAqc,GAAA3a,UACA2a,EAAApD,GAAA,OAAAoD,EAAAvC,OAAA,MAAA,IAAA9Z,KAAAjsC,IAGA,QAAAuqD,GAAAjC,EAAArc,EAAAlwC,GACAusD,EAAA3a,WACA2a,EAAApD,GAAA,OAAAoD,EAAAvC,OAAA,MAAA,IAAA9Z,GAAAlwC,GAMA,QAAAyuD,GAAA7e,GAEA,MADAA,GAAAge,EAAAhe,GACA8b,EAAAtvD,KAAAwzC,IACAxzC,KAAAwzC,KAEAxzC,KAIA,QAAAsyD,GAAA9e,EAAA5vC,GACA,GAAA,gBAAA4vC,GAAA,CACAA,EAAAie,EAAAje,EAEA,KAAA,GADA+e,GAAAP,EAAAxe,GACAh3C,EAAA,EAAAA,EAAA+1D,EAAAx1D,OAAAP,IACAwD,KAAAuyD,EAAA/1D,GAAAs3C,MAAAN,EAAA+e,EAAA/1D,GAAAs3C,WAIA,IADAN,EAAAge,EAAAhe,GACA8b,EAAAtvD,KAAAwzC,IACA,MAAAxzC,MAAAwzC,GAAA5vC,EAGA,OAAA5D,MAGA,QAAAwyD,GAAAnE,EAAAoE,EAAAC,GACA,GAAAC,GAAA,GAAA1uD,KAAAyI,IAAA2hD,GACAuE,EAAAH,EAAAE,EAAA51D,MAEA,QADAsxD,GAAA,EACAqE,EAAA,IAAA,GAAA,KACAzuD,KAAAugB,IAAA,GAAAvgB,KAAAE,IAAA,EAAAyuD,IAAA5+C,WAAA6+C,OAAA,GAAAF,EAeA,QAAAG,GAAAC,EAAAC,EAAApC,EAAAp3C,GACA,GAAAswC,GAAAtwC,CACA,iBAAAA,KACAswC,EAAA,WACA,MAAA9pD,MAAAwZ,OAGAu5C,IACAE,GAAAF,GAAAjJ,GAEAkJ,IACAC,GAAAD,EAAA,IAAA,WACA,MAAAR,GAAA1I,EAAA5uC,MAAAlb,KAAAmb,WAAA63C,EAAA,GAAAA,EAAA,MAGApC,IACAqC,GAAArC,GAAA,WACA,MAAA5wD,MAAAkzD,aAAAtC,QAAA9G,EAAA5uC,MAAAlb,KAAAmb,WAAA43C,KAKA,QAAAI,GAAAvI,GACA,MAAAA,GAAAtgB,MAAA,YACAsgB,EAAA6F,QAAA,WAAA,IAEA7F,EAAA6F,QAAA,MAAA,IAGA,QAAA2C,GAAAvf,GACA,GAAAr3C,GAAAO,EAAA0f,EAAAo3B,EAAAvJ,MAAA+oB,GAEA,KAAA72D,EAAA,EAAAO,EAAA0f,EAAA1f,OAAAP,EAAAO,EAAAP,IACAy2D,GAAAx2C,EAAAjgB,IACAigB,EAAAjgB,GAAAy2D,GAAAx2C,EAAAjgB,IAEAigB,EAAAjgB,GAAA22D,EAAA12C,EAAAjgB,GAIA,OAAA,UAAA2zD,GACA,GAAA3zD,GAAA4zD,EAAA,EACA,KAAA5zD,EAAA,EAAAA,EAAAO,EAAAP,IACA4zD,GAAAd,EAAA7yC,EAAAjgB,IAAAigB,EAAAjgB,GAAAM,KAAAqzD,EAAAtc,GAAAp3B,EAAAjgB,EAEA,OAAA4zD,IAKA,QAAAkD,GAAAnW,EAAAtJ,GACA,MAAAsJ,GAAA3H,WAIA3B,EAAA0f,EAAA1f,EAAAsJ,EAAA+V,cACAM,GAAA3f,GAAA2f,GAAA3f,IAAAuf,EAAAvf,GAEA2f,GAAA3f,GAAAsJ,IANAA,EAAA+V,aAAAxC,cASA,QAAA6C,GAAA1f,EAAAwX,GAGA,QAAAoI,GAAA7I,GACA,MAAAS,GAAAiF,eAAA1F,IAAAA;8BAHA,GAAApuD,GAAA,CAOA,KADAk3D,GAAAC,UAAA,EACAn3D,GAAA,GAAAk3D,GAAAE,KAAA/f,IACAA,EAAAA,EAAA4c,QAAAiD,GAAAD,GACAC,GAAAC,UAAA,EACAn3D,GAAA,CAGA,OAAAq3C,GA8BA,QAAAggB,GAAAd,EAAAe,EAAAC,GACAC,GAAAjB,GAAAzD,EAAAwE,GAAAA,EAAA,SAAAG,EAAAf,GACA,MAAAe,IAAAF,EAAAA,EAAAD,GAIA,QAAAI,GAAAnB,EAAAz1D,GACA,MAAA4tD,GAAA8I,GAAAjB,GAIAiB,GAAAjB,GAAAz1D,EAAA4vD,QAAA5vD,EAAAwwD,SAHA,GAAA6B,QAAAwE,GAAApB,IAOA,QAAAoB,IAAAh4D,GACA,MAAAi4D,IAAAj4D,EAAAs0D,QAAA,KAAA,IAAAA,QAAA,sCAAA,SAAA4D,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAH,IAAAC,GAAAC,GAAAC,KAIA,QAAAL,IAAAj4D,GACA,MAAAA,GAAAs0D,QAAA,yBAAA,QAKA,QAAAiE,IAAA3B,EAAAv5C,GACA,GAAAhd,GAAAstD,EAAAtwC,CASA,KARA,gBAAAu5C,KACAA,GAAAA,IAEA1zC,EAAA7F,KACAswC,EAAA,SAAAc,EAAAnuC,GACAA,EAAAjD,GAAA80C,EAAA1D,KAGApuD,EAAA,EAAAA,EAAAu2D,EAAAh2D,OAAAP,IACAm4D,GAAA5B,EAAAv2D,IAAAstD,EAIA,QAAA8K,IAAA7B,EAAAv5C,GACAk7C,GAAA3B,EAAA,SAAAnI,EAAAnuC,EAAAnf,EAAAy1D,GACAz1D,EAAAu3D,GAAAv3D,EAAAu3D,OACAr7C,EAAAoxC,EAAAttD,EAAAu3D,GAAAv3D,EAAAy1D,KAIA,QAAA+B,IAAA/B,EAAAnI,EAAAttD,GACA,MAAAstD,GAAAM,EAAAyJ,GAAA5B,IACA4B,GAAA5B,GAAAnI,EAAAttD,EAAAy3D,GAAAz3D,EAAAy1D,GAiCA,QAAAiC,IAAArgB,EAAAF,GACA,MAAA,IAAAlhC,MAAAA,KAAA0hD,IAAAtgB,EAAAF,EAAA,EAAA,IAAAygB,aAsDA,QAAAC,IAAAhY,EAAAtJ,GACA,MAAAsJ,GAIAtzC,EAAA7J,KAAAo1D,SAAAp1D,KAAAo1D,QAAAjY,EAAA1I,SACAz0C,KAAAo1D,SAAAp1D,KAAAo1D,QAAAC,UAAAC,IAAA1B,KAAA/f,GAAA,SAAA,cAAAsJ,EAAA1I,SAJA5qC,EAAA7J,KAAAo1D,SAAAp1D,KAAAo1D,QACAp1D,KAAAo1D,QAAA,WAOA,QAAAG,IAAApY,EAAAtJ,GACA,MAAAsJ,GAIAtzC,EAAA7J,KAAAw1D,cAAAx1D,KAAAw1D,aAAArY,EAAA1I,SACAz0C,KAAAw1D,aAAAF,GAAA1B,KAAA/f,GAAA,SAAA,cAAAsJ,EAAA1I,SAJA5qC,EAAA7J,KAAAw1D,cAAAx1D,KAAAw1D,aACAx1D,KAAAw1D,aAAA,WAMA,QAAAC,IAAAC,EAAA7hB,EAAAyX,GACA,GAAA9uD,GAAAm5D,EAAAxF,EAAAyF,EAAAF,EAAAG,mBACA,KAAA71D,KAAA81D,aAKA,IAHA91D,KAAA81D,gBACA91D,KAAA+1D,oBACA/1D,KAAAg2D,qBACAx5D,EAAA,EAAAA,EAAA,KAAAA,EACA2zD,EAAA/E,GAAA,IAAA5uD,IACAwD,KAAAg2D,kBAAAx5D,GAAAwD,KAAAi2D,YAAA9F,EAAA,IAAA0F,oBACA71D,KAAA+1D,iBAAAv5D,GAAAwD,KAAAk2D,OAAA/F,EAAA,IAAA0F,mBAIA,OAAAvK,GACA,QAAAzX,GACA8hB,EAAAQ,GAAAr5D,KAAAkD,KAAAg2D,kBAAAJ,GACAD,KAAA,EAAAA,EAAA,OAEAA,EAAAQ,GAAAr5D,KAAAkD,KAAA+1D,iBAAAH,GACAD,KAAA,EAAAA,EAAA,MAGA,QAAA9hB,GACA8hB,EAAAQ,GAAAr5D,KAAAkD,KAAAg2D,kBAAAJ,OACA,EACAD,GAEAA,EAAAQ,GAAAr5D,KAAAkD,KAAA+1D,iBAAAH,GACAD,KAAA,EAAAA,EAAA,OAEAA,EAAAQ,GAAAr5D,KAAAkD,KAAA+1D,iBAAAH,OACA,EACAD,GAEAA,EAAAQ,GAAAr5D,KAAAkD,KAAAg2D,kBAAAJ,GACAD,KAAA,EAAAA,EAAA,MAKA,QAAAS,IAAAV,EAAA7hB,EAAAyX,GACA,GAAA9uD,GAAA2zD,EAAA2D,CAEA,IAAA9zD,KAAAq2D,kBACA,MAAAZ,IAAA34D,KAAAkD,KAAA01D,EAAA7hB,EAAAyX,EAYA,KATAtrD,KAAA81D,eACA91D,KAAA81D,gBACA91D,KAAA+1D,oBACA/1D,KAAAg2D,sBAMAx5D,EAAA,EAAAA,EAAA,GAAAA,IAAA,CAYA,GAVA2zD,EAAA/E,GAAA,IAAA5uD,IACA8uD,IAAAtrD,KAAA+1D,iBAAAv5D,KACAwD,KAAA+1D,iBAAAv5D,GAAA,GAAAmzD,QAAA,IAAA3vD,KAAAk2D,OAAA/F,EAAA,IAAAM,QAAA,IAAA,IAAA,IAAA,KACAzwD,KAAAg2D,kBAAAx5D,GAAA,GAAAmzD,QAAA,IAAA3vD,KAAAi2D,YAAA9F,EAAA,IAAAM,QAAA,IAAA,IAAA,IAAA,MAEAnF,GAAAtrD,KAAA81D,aAAAt5D,KACAs3D,EAAA,IAAA9zD,KAAAk2D,OAAA/F,EAAA,IAAA,KAAAnwD,KAAAi2D,YAAA9F,EAAA,IACAnwD,KAAA81D,aAAAt5D,GAAA,GAAAmzD,QAAAmE,EAAArD,QAAA,IAAA,IAAA,MAGAnF,GAAA,SAAAzX,GAAA7zC,KAAA+1D,iBAAAv5D,GAAAo3D,KAAA8B,GACA,MAAAl5D,EACA,IAAA8uD,GAAA,QAAAzX,GAAA7zC,KAAAg2D,kBAAAx5D,GAAAo3D,KAAA8B,GACA,MAAAl5D,EACA,KAAA8uD,GAAAtrD,KAAA81D,aAAAt5D,GAAAo3D,KAAA8B,GACA,MAAAl5D,IAOA,QAAA85D,IAAAnG,EAAAvsD,GACA,GAAA2yD,EAEA,KAAApG,EAAA3a,UAEA,MAAA2a,EAGA,IAAA,gBAAAvsD,GACA,GAAA,QAAAgwD,KAAAhwD,GACAA,EAAA0qD,EAAA1qD,OAIA,IAFAA,EAAAusD,EAAA+C,aAAAsD,YAAA5yD,IAEAyb,EAAAzb,GACA,MAAAusD,EAOA,OAFAoG,GAAAtyD,KAAAC,IAAAisD,EAAAsG,OAAAzB,GAAA7E,EAAAxb,OAAA/wC,IACAusD,EAAApD,GAAA,OAAAoD,EAAAvC,OAAA,MAAA,IAAA,SAAAhqD,EAAA2yD,GACApG,EAGA,QAAAuG,IAAA9yD,GACA,MAAA,OAAAA,GACA0yD,GAAAt2D,KAAA4D,GACA8mD,EAAAwD,aAAAluD,MAAA,GACAA,MAEAyW,EAAAzW,KAAA,SAIA,QAAA22D,MACA,MAAA3B,IAAAh1D,KAAA20C,OAAA30C,KAAAy0C,SAIA,QAAAmiB,IAAA3C,GACA,MAAAj0D,MAAAq2D,mBACAnL,EAAAlrD,KAAA,iBACA62D,GAAA/5D,KAAAkD,MAEAi0D,EACAj0D,KAAA82D,wBAEA92D,KAAA+2D,oBAGA7L,EAAAlrD,KAAA,uBACAA,KAAA+2D,kBAAAC,IAEAh3D,KAAA82D,yBAAA7C,EACAj0D,KAAA82D,wBAAA92D,KAAA+2D,mBAKA,QAAAE,IAAAhD,GACA,MAAAj0D,MAAAq2D,mBACAnL,EAAAlrD,KAAA,iBACA62D,GAAA/5D,KAAAkD,MAEAi0D,EACAj0D,KAAAk3D,mBAEAl3D,KAAAm3D,eAGAjM,EAAAlrD,KAAA,kBACAA,KAAAm3D,aAAAC,IAEAp3D,KAAAk3D,oBAAAjD,EACAj0D,KAAAk3D,mBAAAl3D,KAAAm3D,cAIA,QAAAN,MACA,QAAAQ,GAAA/6D,EAAAgyB,GACA,MAAAA,GAAAvxB,OAAAT,EAAAS,OAGA,GACAP,GAAA2zD,EADAmH,KAAAC,KAAAC,IAEA,KAAAh7D,EAAA,EAAAA,EAAA,GAAAA,IAEA2zD,EAAA/E,GAAA,IAAA5uD,IACA86D,EAAAh2D,KAAAtB,KAAAi2D,YAAA9F,EAAA,KACAoH,EAAAj2D,KAAAtB,KAAAk2D,OAAA/F,EAAA,KACAqH,EAAAl2D,KAAAtB,KAAAk2D,OAAA/F,EAAA,KACAqH,EAAAl2D,KAAAtB,KAAAi2D,YAAA9F,EAAA,IAOA,KAHAmH,EAAAjpC,KAAAgpC,GACAE,EAAAlpC,KAAAgpC,GACAG,EAAAnpC,KAAAgpC,GACA76D,EAAA,EAAAA,EAAA,GAAAA,IACA86D,EAAA96D,GAAA43D,GAAAkD,EAAA96D,IACA+6D,EAAA/6D,GAAA43D,GAAAmD,EAAA/6D,GAEA,KAAAA,EAAA,EAAAA,EAAA,GAAAA,IACAg7D,EAAAh7D,GAAA43D,GAAAoD,EAAAh7D,GAGAwD,MAAAm3D,aAAA,GAAAxH,QAAA,KAAA6H,EAAA7uD,KAAA,KAAA,IAAA,KACA3I,KAAA+2D,kBAAA/2D,KAAAm3D,aACAn3D,KAAAk3D,mBAAA,GAAAvH,QAAA,KAAA4H,EAAA5uD,KAAA,KAAA,IAAA,KACA3I,KAAA82D,wBAAA,GAAAnH,QAAA,KAAA2H,EAAA3uD,KAAA,KAAA,IAAA,KA+CA,QAAA8uD,IAAA9iB,GACA,MAAA+iB,IAAA/iB,GAAA,IAAA,IAGA,QAAA+iB,IAAA/iB,GACA,MAAAA,GAAA,GAAA,GAAAA,EAAA,KAAA,GAAAA,EAAA,KAAA,EAaA,QAAAgjB,MACA,MAAAD,IAAA13D,KAAA20C,QAGA,QAAAijB,IAAAj1D,EAAAw6C,EAAAn3C,EAAA4kB,EAAAitC,EAAA17D,EAAA27D,GAGA,GAAArB,GAAA,GAAAljD,MAAA5Q,EAAAw6C,EAAAn3C,EAAA4kB,EAAAitC,EAAA17D,EAAA27D,EAMA,OAHAn1D,GAAA,KAAAA,GAAA,GAAAkgB,SAAA4zC,EAAAsB,gBACAtB,EAAAuB,YAAAr1D,GAEA8zD,EAGA,QAAAwB,IAAAt1D,GACA,GAAA8zD,GAAA,GAAAljD,MAAAA,KAAA0hD,IAAA/5C,MAAA,KAAAC,WAMA,OAHAxY,GAAA,KAAAA,GAAA,GAAAkgB,SAAA4zC,EAAAyB,mBACAzB,EAAA0B,eAAAx1D,GAEA8zD,EAIA,QAAA2B,IAAAzjB,EAAA0jB,EAAAC,GACA,GACAC,GAAA,EAAAF,EAAAC,CAIA,UAFA,EAAAL,GAAAtjB,EAAA,EAAA4jB,GAAAC,YAAAH,GAAA,GAEAE,EAAA,EAIA,QAAAE,IAAA9jB,EAAAH,EAAAkkB,EAAAL,EAAAC,GACA,GAGAK,GAAAC,EAHAC,GAAA,EAAAH,EAAAL,GAAA,EACAS,EAAAV,GAAAzjB,EAAA0jB,EAAAC,GACAS,EAAA,EAAA,GAAAvkB,EAAA,GAAAqkB,EAAAC,CAcA,OAXAC,IAAA,GACAJ,EAAAhkB,EAAA,EACAikB,EAAAnB,GAAAkB,GAAAI,GACAA,EAAAtB,GAAA9iB,IACAgkB,EAAAhkB,EAAA,EACAikB,EAAAG,EAAAtB,GAAA9iB,KAEAgkB,EAAAhkB,EACAikB,EAAAG,IAIApkB,KAAAgkB,EACAI,UAAAH,GAIA,QAAAI,IAAA7I,EAAAkI,EAAAC,GACA,GAEAW,GAAAN,EAFAG,EAAAV,GAAAjI,EAAAxb,OAAA0jB,EAAAC,GACA9jB,EAAAvwC,KAAAyP,OAAAy8C,EAAA4I,YAAAD,EAAA,GAAA,GAAA,CAcA,OAXAtkB,GAAA,GACAmkB,EAAAxI,EAAAxb,OAAA,EACAskB,EAAAzkB,EAAA0kB,GAAAP,EAAAN,EAAAC,IACA9jB,EAAA0kB,GAAA/I,EAAAxb,OAAA0jB,EAAAC,IACAW,EAAAzkB,EAAA0kB,GAAA/I,EAAAxb,OAAA0jB,EAAAC,GACAK,EAAAxI,EAAAxb,OAAA,IAEAgkB,EAAAxI,EAAAxb,OACAskB,EAAAzkB,IAIAA,KAAAykB,EACAtkB,KAAAgkB,GAIA,QAAAO,IAAAvkB,EAAA0jB,EAAAC,GACA,GAAAQ,GAAAV,GAAAzjB,EAAA0jB,EAAAC,GACAa,EAAAf,GAAAzjB,EAAA,EAAA0jB,EAAAC,EACA,QAAAb,GAAA9iB,GAAAmkB,EAAAK,GAAA,EAiCA,QAAAC,IAAAjJ,GACA,MAAA6I,IAAA7I,EAAAnwD,KAAAq5D,MAAAhB,IAAAr4D,KAAAq5D,MAAAf,KAAA9jB,KAQA,QAAA8kB,MACA,MAAAt5D,MAAAq5D,MAAAhB,IAGA,QAAAkB,MACA,MAAAv5D,MAAAq5D,MAAAf,IAKA,QAAAkB,IAAA5O,GACA,GAAApW,GAAAx0C,KAAAkzD,aAAA1e,KAAAx0C,KACA,OAAA,OAAA4qD,EAAApW,EAAAx0C,KAAAy2C,IAAA,GAAAmU,EAAApW,GAAA,KAGA,QAAAilB,IAAA7O,GACA,GAAApW,GAAAwkB,GAAAh5D,KAAA,EAAA,GAAAw0C,IACA,OAAA,OAAAoW,EAAApW,EAAAx0C,KAAAy2C,IAAA,GAAAmU,EAAApW,GAAA,KAgEA,QAAAklB,IAAA9O,EAAAS,GACA,MAAA,gBAAAT,GACAA,EAGA3kD,MAAA2kD,IAIAA,EAAAS,EAAAsO,cAAA/O,GACA,gBAAAA,GACAA,EAGA,MARAjrC,SAAAirC,EAAA,IAWA,QAAAgP,IAAAhP,EAAAS,GACA,MAAA,gBAAAT,GACAS,EAAAsO,cAAA/O,GAAA,GAAA,EAEA3kD,MAAA2kD,GAAA,KAAAA,EAMA,QAAAiP,IAAA1c,EAAAtJ,GACA,MAAAsJ,GAIAtzC,EAAA7J,KAAA85D,WAAA95D,KAAA85D,UAAA3c,EAAA5I,OACAv0C,KAAA85D,UAAA95D,KAAA85D,UAAAzE,SAAAzB,KAAA/f,GAAA,SAAA,cAAAsJ,EAAA5I,OAJA1qC,EAAA7J,KAAA85D,WAAA95D,KAAA85D,UACA95D,KAAA85D,UAAA,WAOA,QAAAC,IAAA5c,GACA,MAAA,GAAAn9C,KAAAg6D,eAAA7c,EAAA5I,OAAAv0C,KAAAg6D,eAIA,QAAAC,IAAA9c,GACA,MAAA,GAAAn9C,KAAAk6D,aAAA/c,EAAA5I,OAAAv0C,KAAAk6D,aAGA,QAAAC,IAAAC,EAAAvmB,EAAAyX,GACA,GAAA9uD,GAAAm5D,EAAAxF,EAAAyF,EAAAwE,EAAAvE,mBACA,KAAA71D,KAAAq6D,eAKA,IAJAr6D,KAAAq6D,kBACAr6D,KAAAs6D,uBACAt6D,KAAAu6D,qBAEA/9D,EAAA,EAAAA,EAAA,IAAAA,EACA2zD,EAAA/E,GAAA,IAAA,IAAA7W,IAAA/3C,GACAwD,KAAAu6D,kBAAA/9D,GAAAwD,KAAAw6D,YAAArK,EAAA,IAAA0F,oBACA71D,KAAAs6D,oBAAA99D,GAAAwD,KAAAy6D,cAAAtK,EAAA,IAAA0F,oBACA71D,KAAAq6D,eAAA79D,GAAAwD,KAAA06D,SAAAvK,EAAA,IAAA0F,mBAIA,OAAAvK,GACA,SAAAzX,GACA8hB,EAAAQ,GAAAr5D,KAAAkD,KAAAq6D,eAAAzE,GACAD,KAAA,EAAAA,EAAA,MACA,QAAA9hB,GACA8hB,EAAAQ,GAAAr5D,KAAAkD,KAAAs6D,oBAAA1E,GACAD,KAAA,EAAAA,EAAA,OAEAA,EAAAQ,GAAAr5D,KAAAkD,KAAAu6D,kBAAA3E,GACAD,KAAA,EAAAA,EAAA,MAGA,SAAA9hB,GACA8hB,EAAAQ,GAAAr5D,KAAAkD,KAAAq6D,eAAAzE,OACA,EACAD,GAEAA,EAAAQ,GAAAr5D,KAAAkD,KAAAs6D,oBAAA1E,OACA,EACAD,GAEAA,EAAAQ,GAAAr5D,KAAAkD,KAAAu6D,kBAAA3E,GACAD,KAAA,EAAAA,EAAA,MACA,QAAA9hB,GACA8hB,EAAAQ,GAAAr5D,KAAAkD,KAAAs6D,oBAAA1E,OACA,EACAD,GAEAA,EAAAQ,GAAAr5D,KAAAkD,KAAAq6D,eAAAzE,OACA,EACAD,GAEAA,EAAAQ,GAAAr5D,KAAAkD,KAAAu6D,kBAAA3E,GACAD,KAAA,EAAAA,EAAA,OAEAA,EAAAQ,GAAAr5D,KAAAkD,KAAAu6D,kBAAA3E,OACA,EACAD,GAEAA,EAAAQ,GAAAr5D,KAAAkD,KAAAq6D,eAAAzE,OACA,EACAD,GAEAA,EAAAQ,GAAAr5D,KAAAkD,KAAAs6D,oBAAA1E,GACAD,KAAA,EAAAA,EAAA,MAKA,QAAAgF,IAAAP,EAAAvmB,EAAAyX,GACA,GAAA9uD,GAAA2zD,EAAA2D,CAEA,IAAA9zD,KAAA46D,oBACA,MAAAT,IAAAr9D,KAAAkD,KAAAo6D,EAAAvmB,EAAAyX,EAUA,KAPAtrD,KAAAq6D,iBACAr6D,KAAAq6D,kBACAr6D,KAAAu6D,qBACAv6D,KAAAs6D,uBACAt6D,KAAA66D,uBAGAr+D,EAAA,EAAAA,EAAA,EAAAA,IAAA,CAcA,GAXA2zD,EAAA/E,GAAA,IAAA,IAAA7W,IAAA/3C,GACA8uD,IAAAtrD,KAAA66D,mBAAAr+D,KACAwD,KAAA66D,mBAAAr+D,GAAA,GAAAmzD,QAAA,IAAA3vD,KAAA06D,SAAAvK,EAAA,IAAAM,QAAA,IAAA,MAAA,IAAA,KACAzwD,KAAAs6D,oBAAA99D,GAAA,GAAAmzD,QAAA,IAAA3vD,KAAAy6D,cAAAtK,EAAA,IAAAM,QAAA,IAAA,MAAA,IAAA,KACAzwD,KAAAu6D,kBAAA/9D,GAAA,GAAAmzD,QAAA,IAAA3vD,KAAAw6D,YAAArK,EAAA,IAAAM,QAAA,IAAA,MAAA,IAAA,MAEAzwD,KAAAq6D,eAAA79D,KACAs3D,EAAA,IAAA9zD,KAAA06D,SAAAvK,EAAA,IAAA,KAAAnwD,KAAAy6D,cAAAtK,EAAA,IAAA,KAAAnwD,KAAAw6D,YAAArK,EAAA,IACAnwD,KAAAq6D,eAAA79D,GAAA,GAAAmzD,QAAAmE,EAAArD,QAAA,IAAA,IAAA,MAGAnF,GAAA,SAAAzX,GAAA7zC,KAAA66D,mBAAAr+D,GAAAo3D,KAAAwG,GACA,MAAA59D,EACA,IAAA8uD,GAAA,QAAAzX,GAAA7zC,KAAAs6D,oBAAA99D,GAAAo3D,KAAAwG,GACA,MAAA59D,EACA,IAAA8uD,GAAA,OAAAzX,GAAA7zC,KAAAu6D,kBAAA/9D,GAAAo3D,KAAAwG,GACA,MAAA59D,EACA,KAAA8uD,GAAAtrD,KAAAq6D,eAAA79D,GAAAo3D,KAAAwG,GACA,MAAA59D,IAOA,QAAAs+D,IAAAlQ,GACA,IAAA5qD,KAAAw1C,UACA,MAAA,OAAAoV,EAAA5qD,KAAA6H,GAEA,IAAA0sC,GAAAv0C,KAAA4tD,OAAA5tD,KAAA+sD,GAAAyL,YAAAx4D,KAAA+sD,GAAAgO,QACA,OAAA,OAAAnQ,GACAA,EAAA8O,GAAA9O,EAAA5qD,KAAAkzD,cACAlzD,KAAAy2C,IAAAmU,EAAArW,EAAA,MAEAA,EAIA,QAAAymB,IAAApQ,GACA,IAAA5qD,KAAAw1C,UACA,MAAA,OAAAoV,EAAA5qD,KAAA6H,GAEA,IAAA6wD,IAAA14D,KAAAu0C,MAAA,EAAAv0C,KAAAkzD,aAAAmG,MAAAhB,KAAA,CACA,OAAA,OAAAzN,EAAA8N,EAAA14D,KAAAy2C,IAAAmU,EAAA8N,EAAA,KAGA,QAAAuC,IAAArQ,GACA,IAAA5qD,KAAAw1C,UACA,MAAA,OAAAoV,EAAA5qD,KAAA6H,GAOA,IAAA,MAAA+iD,EAAA,CACA,GAAA8N,GAAAkB,GAAAhP,EAAA5qD,KAAAkzD,aACA,OAAAlzD,MAAAu0C,IAAAv0C,KAAAu0C,MAAA,EAAAmkB,EAAAA,EAAA,GAEA,MAAA14D,MAAAu0C,OAAA,EAKA,QAAA2mB,IAAAjH,GACA,MAAAj0D,MAAA46D,qBACA1P,EAAAlrD,KAAA,mBACAm7D,GAAAr+D,KAAAkD,MAEAi0D,EACAj0D,KAAAo7D,qBAEAp7D,KAAAq7D,iBAGAnQ,EAAAlrD,KAAA,oBACAA,KAAAq7D,eAAAC,IAEAt7D,KAAAo7D,sBAAAnH,EACAj0D,KAAAo7D,qBAAAp7D,KAAAq7D,gBAKA,QAAAE,IAAAtH,GACA,MAAAj0D,MAAA46D,qBACA1P,EAAAlrD,KAAA,mBACAm7D,GAAAr+D,KAAAkD,MAEAi0D,EACAj0D,KAAAw7D,0BAEAx7D,KAAAy7D,sBAGAvQ,EAAAlrD,KAAA,yBACAA,KAAAy7D,oBAAAC,IAEA17D,KAAAw7D,2BAAAvH,EACAj0D,KAAAw7D,0BAAAx7D,KAAAy7D,qBAKA,QAAAE,IAAA1H,GACA,MAAAj0D,MAAA46D,qBACA1P,EAAAlrD,KAAA,mBACAm7D,GAAAr+D,KAAAkD,MAEAi0D,EACAj0D,KAAA47D,wBAEA57D,KAAA67D,oBAGA3Q,EAAAlrD,KAAA,uBACAA,KAAA67D,kBAAAC,IAEA97D,KAAA47D,yBAAA3H,EACAj0D,KAAA47D,wBAAA57D,KAAA67D,mBAKA,QAAAV,MACA,QAAA9D,GAAA/6D,EAAAgyB,GACA,MAAAA,GAAAvxB,OAAAT,EAAAS,OAGA,GACAP,GAAA2zD,EAAA4L,EAAAC,EAAAC,EADAC,KAAA5E,KAAAC,KAAAC,IAEA,KAAAh7D,EAAA,EAAAA,EAAA,EAAAA,IAEA2zD,EAAA/E,GAAA,IAAA,IAAA7W,IAAA/3C,GACAu/D,EAAA/7D,KAAAw6D,YAAArK,EAAA,IACA6L,EAAAh8D,KAAAy6D,cAAAtK,EAAA,IACA8L,EAAAj8D,KAAA06D,SAAAvK,EAAA,IACA+L,EAAA56D,KAAAy6D,GACAzE,EAAAh2D,KAAA06D,GACAzE,EAAAj2D,KAAA26D,GACAzE,EAAAl2D,KAAAy6D,GACAvE,EAAAl2D,KAAA06D,GACAxE,EAAAl2D,KAAA26D,EAQA,KAJAC,EAAA7tC,KAAAgpC,GACAC,EAAAjpC,KAAAgpC,GACAE,EAAAlpC,KAAAgpC,GACAG,EAAAnpC,KAAAgpC,GACA76D,EAAA,EAAAA,EAAA,EAAAA,IACA86D,EAAA96D,GAAA43D,GAAAkD,EAAA96D,IACA+6D,EAAA/6D,GAAA43D,GAAAmD,EAAA/6D,IACAg7D,EAAAh7D,GAAA43D,GAAAoD,EAAAh7D,GAGAwD,MAAAq7D,eAAA,GAAA1L,QAAA,KAAA6H,EAAA7uD,KAAA,KAAA,IAAA,KACA3I,KAAAy7D,oBAAAz7D,KAAAq7D,eACAr7D,KAAA67D,kBAAA77D,KAAAq7D,eAEAr7D,KAAAo7D,qBAAA,GAAAzL,QAAA,KAAA4H,EAAA5uD,KAAA,KAAA,IAAA,KACA3I,KAAAw7D,0BAAA,GAAA7L,QAAA,KAAA2H,EAAA3uD,KAAA,KAAA,IAAA,KACA3I,KAAA47D,wBAAA,GAAAjM,QAAA,KAAAuM,EAAAvzD,KAAA,KAAA,IAAA,KAKA,QAAAwzD,MACA,MAAAn8D,MAAAo8D,QAAA,IAAA,GAGA,QAAAC,MACA,MAAAr8D,MAAAo8D,SAAA,GAyBA,QAAA/P,IAAA0G,EAAAuJ,GACAxJ,EAAAC,EAAA,EAAA,EAAA,WACA,MAAA/yD,MAAAkzD,aAAA7G,SAAArsD,KAAAo8D,QAAAp8D,KAAAu8D,UAAAD,KAgBA,QAAAE,IAAAvI,EAAA5I,GACA,MAAAA,GAAAoR,eA2DA,QAAAC,IAAA9R,GAGA,MAAA,OAAAA,EAAA,IAAA0G,cAAAv0C,OAAA,GAIA,QAAA4/C,IAAAP,EAAAG,EAAAK,GACA,MAAAR,GAAA,GACAQ,EAAA,KAAA,KAEAA,EAAA,KAAA,KA0CA,QAAAC,IAAA//C,GACA,MAAAA,GAAAA,EAAAw0C,cAAAb,QAAA,IAAA,KAAA3zC,EAMA,QAAAggD,IAAAC,GAGA,IAFA,GAAAh4D,GAAAkL,EAAAo7C,EAAA2R,EAAAxgE,EAAA,EAEAA,EAAAugE,EAAAhgE,QAAA,CAKA,IAJAigE,EAAAH,GAAAE,EAAAvgE,IAAAwgE,MAAA,KACAj4D,EAAAi4D,EAAAjgE,OACAkT,EAAA4sD,GAAAE,EAAAvgE,EAAA,IACAyT,EAAAA,EAAAA,EAAA+sD,MAAA,KAAA,KACAj4D,EAAA,GAAA,CAEA,GADAsmD,EAAA4R,GAAAD,EAAAlzD,MAAA,EAAA/E,GAAA4D,KAAA,MAEA,MAAA0iD,EAEA,IAAAp7C,GAAAA,EAAAlT,QAAAgI,GAAA0pD,EAAAuO,EAAA/sD,GAAA,IAAAlL,EAAA,EAEA,KAEAA,KAEAvI,IAEA,MAAA,MAGA,QAAAygE,IAAAxpB,GACA,GAAAypB,GAAA,IAEA,KAAAC,GAAA1pB,IAAA,SAAAx2C,GACAA,GAAAA,EAAAJ,QACA,IACAqgE,EAAAE,GAAAC,MACA9gE,EAAA,YAAAk3C,GAGA6pB,GAAAJ,GACA,MAAAnhE,IAEA,MAAAohE,IAAA1pB,GAMA,QAAA6pB,IAAAxgD,EAAAib,GACA,GAAAl3B,EAeA,OAdAic,KAEAjc,EADAkqD,EAAAhzB,GACAwlC,GAAAzgD,GAGA0gD,GAAA1gD,EAAAib,MAKAqlC,GAAAv8D,GAIAu8D,GAAAC,MAGA,QAAAG,IAAA/pB,EAAAn2C,GACA,GAAA,OAAAA,EAAA,CACA,GAAAyyD,GAAA0N,EAEA,IADAngE,EAAAogE,KAAAjqB,EACA,MAAA0pB,GAAA1pB,GACA2b,EAAA,uBACA,2OAIAW,EAAAoN,GAAA1pB,GAAAgc,YACA,IAAA,MAAAnyD,EAAAqgE,aAAA,CACA,GAAA,MAAAR,GAAA7/D,EAAAqgE,cAUA,MAPAC,IAAAtgE,EAAAqgE,gBACAC,GAAAtgE,EAAAqgE,kBAEAC,GAAAtgE,EAAAqgE,cAAAr8D,MACAmyC,KAAAA,EACAn2C,OAAAA,IAEA,IATAyyD,GAAAoN,GAAA7/D,EAAAqgE,cAAAlO,QA0BA,MAdA0N,IAAA1pB,GAAA,GAAAwc,GAAAH,EAAAC,EAAAzyD,IAEAsgE,GAAAnqB,IACAmqB,GAAAnqB,GAAAj+B,QAAA,SAAA/S,GACA+6D,GAAA/6D,EAAAgxC,KAAAhxC,EAAAnF,UAOAggE,GAAA7pB,GAGA0pB,GAAA1pB,GAIA,aADA0pB,IAAA1pB,GACA,KAIA,QAAAoqB,IAAApqB,EAAAn2C,GACA,GAAA,MAAAA,EAAA,CACA,GAAA+tD,GAAA0E,EAAA0N,EAEA,OAAAN,GAAA1pB,KACAsc,EAAAoN,GAAA1pB,GAAAgc,SAEAnyD,EAAAwyD,EAAAC,EAAAzyD,GACA+tD,EAAA,GAAA4E,GAAA3yD,GACA+tD,EAAAsS,aAAAR,GAAA1pB,GACA0pB,GAAA1pB,GAAA4X,EAGAiS,GAAA7pB,OAGA,OAAA0pB,GAAA1pB,KACA,MAAA0pB,GAAA1pB,GAAAkqB,aACAR,GAAA1pB,GAAA0pB,GAAA1pB,GAAAkqB,aACA,MAAAR,GAAA1pB,UACA0pB,IAAA1pB,GAIA,OAAA0pB,IAAA1pB,GAIA,QAAA8pB,IAAAzgD,GACA,GAAAuuC,EAMA,IAJAvuC,GAAAA,EAAAgxC,SAAAhxC,EAAAgxC,QAAAuP,QACAvgD,EAAAA,EAAAgxC,QAAAuP,QAGAvgD,EACA,MAAAsgD,GAGA,KAAAvzD,EAAAiT,GAAA,CAGA,GADAuuC,EAAA4R,GAAAngD,GAEA,MAAAuuC,EAEAvuC,IAAAA,GAGA,MAAAggD,IAAAhgD,GAGA,QAAAghD,MACA,MAAAC,IAAAZ,IAGA,QAAAa,IAAA7gB,GACA,GAAA0O,GACAvvD,EAAA6gD,EAAA4X,EAyBA,OAvBAz4D,IAAAkwD,EAAArP,GAAA0O,YAAA,IACAA,EACAvvD,EAAA2hE,IAAA,GAAA3hE,EAAA2hE,IAAA,GAAAA,GACA3hE,EAAA4hE,IAAA,GAAA5hE,EAAA4hE,IAAAlJ,GAAA14D,EAAA6hE,IAAA7hE,EAAA2hE,KAAAC,GACA5hE,EAAA8hE,IAAA,GAAA9hE,EAAA8hE,IAAA,IAAA,KAAA9hE,EAAA8hE,MAAA,IAAA9hE,EAAA+hE,KAAA,IAAA/hE,EAAAgiE,KAAA,IAAAhiE,EAAAiiE,KAAAH,GACA9hE,EAAA+hE,IAAA,GAAA/hE,EAAA+hE,IAAA,GAAAA,GACA/hE,EAAAgiE,IAAA,GAAAhiE,EAAAgiE,IAAA,GAAAA,GACAhiE,EAAAiiE,IAAA,GAAAjiE,EAAAiiE,IAAA,IAAAA,IACA,EAEA/R,EAAArP,GAAAqhB,qBAAA3S,EAAAsS,IAAAtS,EAAAqS,MACArS,EAAAqS,IAEA1R,EAAArP,GAAAshB,gBAAA5S,KAAA,IACAA,EAAA6S,IAEAlS,EAAArP,GAAAwhB,kBAAA9S,KAAA,IACAA,EAAA+S,IAGApS,EAAArP,GAAA0O,SAAAA,GAGA1O,EAyCA,QAAA0hB,IAAAvhE,GACA,GAAAd,GAAAI,EAGAkiE,EAAAC,EAAAC,EAAAC,EAFA5yC,EAAA/uB,EAAAkwD,GACAljB,EAAA40B,GAAAjV,KAAA59B,IAAA8yC,GAAAlV,KAAA59B,EAGA,IAAAie,EAAA,CAGA,IAFAkiB,EAAAlvD,GAAA6uD,KAAA,EAEA3vD,EAAA,EAAAI,EAAAwiE,GAAAriE,OAAAP,EAAAI,EAAAJ,IACA,GAAA4iE,GAAA5iE,GAAA,GAAAytD,KAAA3f,EAAA,IAAA,CACAy0B,EAAAK,GAAA5iE,GAAA,GACAsiE,EAAAM,GAAA5iE,GAAA,MAAA,CACA,OAGA,GAAA,MAAAuiE,EAEA,YADAzhE,EAAAovD,UAAA,EAGA,IAAApiB,EAAA,GAAA,CACA,IAAA9tC,EAAA,EAAAI,EAAAyiE,GAAAtiE,OAAAP,EAAAI,EAAAJ,IACA,GAAA6iE,GAAA7iE,GAAA,GAAAytD,KAAA3f,EAAA,IAAA,CAEA00B,GAAA10B,EAAA,IAAA,KAAA+0B,GAAA7iE,GAAA,EACA,OAGA,GAAA,MAAAwiE,EAEA,YADA1hE,EAAAovD,UAAA,GAIA,IAAAoS,GAAA,MAAAE,EAEA,YADA1hE,EAAAovD,UAAA,EAGA,IAAApiB,EAAA,GAAA,CACA,IAAAg1B,GAAArV,KAAA3f,EAAA,IAIA,YADAhtC,EAAAovD,UAAA,EAFAuS,GAAA,IAMA3hE,EAAAmwD,GAAAsR,GAAAC,GAAA,KAAAC,GAAA,IACAM,GAAAjiE,OAEAA,GAAAovD,UAAA,EAQA,QAAA8S,IAAAliE,GACA,GAAA+uB,GAAAie,EAAAm1B,EACAV,EAAAC,EAAAC,EAaAS,EAAAC,EAZAC,GACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,OAAA,SACAC,OAAA,UAEAC,EAAA,2BASA,IANAj0C,EAAA/uB,EAAAkwD,GACAiD,QAAA,qBAAA,KACAA,QAAA,WAAA,KACAA,QAAA,WAAA,IACAnmB,EAAAi2B,GAAAtW,KAAA59B,GAEA,CAMA,GALAozC,EAAAn1B,EAAA,GAAA,OAAA,IAAAA,EAAA,GAAAvtC,OAAA,KAAA,KAAA,GACAgiE,EAAA,UAAAz0B,EAAA,GAAAvtC,OAAA,GAAA,QAAA,OACAiiE,EAAA,SAAA10B,EAAA,GAAA,MAAA,IAGAA,EAAA,GAAA,CACA,GAAAk2B,GAAA,GAAAjtD,MAAA+2B,EAAA,IACAm2B,GAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAAAD,EAAAzF,SAEA,IAAAzwB,EAAA,GAAAuoB,OAAA,EAAA,KAAA4N,EAGA,MAFAjU,GAAAlvD,GAAAivD,iBAAA,OACAjvD,EAAAovD,UAAA,GAKA,OAAApiB,EAAA,GAAAvtC,QACA,IAAA,GACA,IAAA4iE,EACAD,EAAA,UAEAC,EAAAW,EAAAl/D,QAAAkpC,EAAA,GAAA,GAAAttB,eAAA,GACA0iD,GAAAC,EAAA,EAAA,KAAA,OACA,GAAAA,GAAAlP,QAAA,MAAA,KAAAnmB,MAAA,OAAA,GAAA,KAEA,MACA,KAAA,GACAo1B,EAAAE,EAAAt1B,EAAA,GACA,MACA,SACAo1B,EAAAE,EAAA,QAEAt1B,EAAA,GAAAo1B,EACApiE,EAAAkwD,GAAAljB,EAAAn3B,OAAA,GAAAxK,KAAA,IACAs2D,EAAA,MACA3hE,EAAAmwD,GAAAgS,EAAAV,EAAAC,EAAAC,EACAM,GAAAjiE,GACAkvD,EAAAlvD,GAAAgvD,SAAA,MAEAhvD,GAAAovD,UAAA,EAKA,QAAAgU,IAAApjE,GACA,GAAA+2D,GAAAsM,GAAA1W,KAAA3sD,EAAAkwD,GAEA,IAAA,OAAA6G,EAEA,YADA/2D,EAAAyvD,GAAA,GAAAx5C,OAAA8gD,EAAA,IAIAwK,IAAAvhE,GACAA,EAAAovD,YAAA,UACApvD,GAAAovD,SAKA8S,GAAAliE,GACAA,EAAAovD,YAAA,UACApvD,GAAAovD,SAMAhC,EAAAkW,wBAAAtjE,KAcA,QAAAsB,IAAAtC,EAAAgyB,EAAA5B,GACA,MAAA,OAAApwB,EACAA,EAEA,MAAAgyB,EACAA,EAEA5B,EAGA,QAAAm0C,IAAAvjE,GAEA,GAAAwjE,GAAA,GAAAvtD,MAAAm3C,EAAAl3C,MACA,OAAAlW,GAAAyjE,SACAD,EAAA5I,iBAAA4I,EAAAE,cAAAF,EAAA5L,eAEA4L,EAAA/I,cAAA+I,EAAA7pB,WAAA6pB,EAAAG,WAOA,QAAAC,IAAA5jE,GACA,GAAAd,GAAAi6D,EAAA0K,EAAAC,EAAAxW,IAEA,KAAAttD,EAAAyvD,GAAA,CA6BA,IAzBAoU,EAAAN,GAAAvjE,GAGAA,EAAAu3D,IAAA,MAAAv3D,EAAAy3D,GAAAmJ,KAAA,MAAA5gE,EAAAy3D,GAAAkJ,KACAoD,GAAA/jE,GAIA,MAAAA,EAAAgkE,aACAF,EAAAxiE,GAAAtB,EAAAy3D,GAAAoJ,IAAAgD,EAAAhD,MAEA7gE,EAAAgkE,WAAA7J,GAAA2J,IAAA,IAAA9jE,EAAAgkE,cACA9U,EAAAlvD,GAAAkhE,oBAAA,GAGA/H,EAAAwB,GAAAmJ,EAAA,EAAA9jE,EAAAgkE,YACAhkE,EAAAy3D,GAAAkJ,IAAAxH,EAAAuK,cACA1jE,EAAAy3D,GAAAmJ,IAAAzH,EAAAvB,cAQA14D,EAAA,EAAAA,EAAA,GAAA,MAAAc,EAAAy3D,GAAAv4D,KAAAA,EACAc,EAAAy3D,GAAAv4D,GAAAouD,EAAApuD,GAAA2kE,EAAA3kE,EAIA,MAAAA,EAAA,EAAAA,IACAc,EAAAy3D,GAAAv4D,GAAAouD,EAAApuD,GAAA,MAAAc,EAAAy3D,GAAAv4D,GAAA,IAAAA,EAAA,EAAA,EAAAc,EAAAy3D,GAAAv4D,EAIA,MAAAc,EAAAy3D,GAAAqJ,KACA,IAAA9gE,EAAAy3D,GAAAsJ,KACA,IAAA/gE,EAAAy3D,GAAAuJ,KACA,IAAAhhE,EAAAy3D,GAAAwJ,MACAjhE,EAAAikE,UAAA,EACAjkE,EAAAy3D,GAAAqJ,IAAA,GAGA9gE,EAAAyvD,IAAAzvD,EAAAyjE,QAAA9I,GAAAL,IAAA18C,MAAA,KAAA0vC,GAGA,MAAAttD,EAAAqwD,MACArwD,EAAAyvD,GAAAyU,cAAAlkE,EAAAyvD,GAAA0U,gBAAAnkE,EAAAqwD,MAGArwD,EAAAikE,WACAjkE,EAAAy3D,GAAAqJ,IAAA,KAIA,QAAAiD,IAAA/jE,GACA,GAAAmtB,GAAAi3C,EAAAltB,EAAAkkB,EAAAL,EAAAC,EAAAqJ,EAAAC,CAGA,IADAn3C,EAAAntB,EAAAu3D,GACA,MAAApqC,EAAAo3C,IAAA,MAAAp3C,EAAAq3C,GAAA,MAAAr3C,EAAAs3C,EACA1J,EAAA,EACAC,EAAA,EAMAoJ,EAAA9iE,GAAA6rB,EAAAo3C,GAAAvkE,EAAAy3D,GAAAoJ,IAAAnF,GAAAgJ,KAAA,EAAA,GAAArtB,MACAH,EAAA51C,GAAA6rB,EAAAq3C,EAAA,KACApJ,EAAA95D,GAAA6rB,EAAAs3C,EAAA,IACA,GAAArJ,EAAA,KACAkJ,GAAA,OAEA,CACAvJ,EAAA/6D,EAAAwwD,QAAAuL,MAAAhB,IACAC,EAAAh7D,EAAAwwD,QAAAuL,MAAAf,GAEA,IAAA2J,GAAAjJ,GAAAgJ,KAAA3J,EAAAC,EAEAoJ,GAAA9iE,GAAA6rB,EAAAy3C,GAAA5kE,EAAAy3D,GAAAoJ,IAAA8D,EAAAttB,MAGAH,EAAA51C,GAAA6rB,EAAAA,EAAAw3C,EAAAztB,MAEA,MAAA/pB,EAAAzkB,IAEA0yD,EAAAjuC,EAAAzkB,GACA,GAAA0yD,EAAA,KACAkJ,GAAA,GAEA,MAAAn3C,EAAA1uB,GAEA28D,EAAAjuC,EAAA1uB,EAAAs8D,GACA5tC,EAAA1uB,EAAA,GAAA0uB,EAAA1uB,EAAA,KACA6lE,GAAA,IAIAlJ,EAAAL,EAGA7jB,EAAA,GAAAA,EAAA0kB,GAAAwI,EAAArJ,EAAAC,GACA9L,EAAAlvD,GAAAmhE,gBAAA,EACA,MAAAmD,EACApV,EAAAlvD,GAAAqhE,kBAAA,GAEAgD,EAAAlJ,GAAAiJ,EAAAltB,EAAAkkB,EAAAL,EAAAC,GACAh7D,EAAAy3D,GAAAoJ,IAAAwD,EAAAhtB,KACAr3C,EAAAgkE,WAAAK,EAAA5I,WAWA,QAAAwG,IAAAjiE,GAEA,GAAAA,EAAAmwD,KAAA/C,EAAAyX,SAEA,WADAtD,IAAAvhE,EAGA,IAAAA,EAAAmwD,KAAA/C,EAAA0X,SAEA,WADA5C,IAAAliE,EAGAA,GAAAy3D,MACAvI,EAAAlvD,GAAAouD,OAAA,CAGA,IACAlvD,GAAA6lE,EAAA1N,EAAA5B,EAAAuP,EADAj2C,EAAA,GAAA/uB,EAAAkwD,GAEA+U,EAAAl2C,EAAAtvB,OACAylE,EAAA,CAIA,KAFA7N,EAAApB,EAAAj2D,EAAAmwD,GAAAnwD,EAAAwwD,SAAAxjB,MAAA+oB,QAEA72D,EAAA,EAAAA,EAAAm4D,EAAA53D,OAAAP,IACAu2D,EAAA4B,EAAAn4D,GACA6lE,GAAAh2C,EAAAie,MAAA4pB,EAAAnB,EAAAz1D,SAAA,GAGA+kE,IACAC,EAAAj2C,EAAAwmC,OAAA,EAAAxmC,EAAAjrB,QAAAihE,IACAC,EAAAvlE,OAAA,GACAyvD,EAAAlvD,GAAAsuD,YAAAtqD,KAAAghE,GAEAj2C,EAAAA,EAAAviB,MAAAuiB,EAAAjrB,QAAAihE,GAAAA,EAAAtlE,QACAylE,GAAAH,EAAAtlE,QAGAk2D,GAAAF,IACAsP,EACA7V,EAAAlvD,GAAAouD,OAAA,EAGAc,EAAAlvD,GAAAquD,aAAArqD,KAAAyxD,GAEA+B,GAAA/B,EAAAsP,EAAA/kE,IAEAA,EAAA4vD,UAAAmV,GACA7V,EAAAlvD,GAAAquD,aAAArqD,KAAAyxD,EAKAvG,GAAAlvD,GAAAwuD,cAAAyW,EAAAC,EACAn2C,EAAAtvB,OAAA,GACAyvD,EAAAlvD,GAAAsuD,YAAAtqD,KAAA+qB,GAIA/uB,EAAAy3D,GAAAqJ,KAAA,IACA5R,EAAAlvD,GAAA6vD,WAAA,GACA7vD,EAAAy3D,GAAAqJ,IAAA,IACA5R,EAAAlvD,GAAA6vD,QAAA9rD,QAGAmrD,EAAAlvD,GAAA8uD,gBAAA9uD,EAAAy3D,GAAAjrD,MAAA,GACA0iD,EAAAlvD,GAAA+uD,SAAA/uD,EAAAmlE,UAEAnlE,EAAAy3D,GAAAqJ,IAAAsE,GAAAplE,EAAAwwD,QAAAxwD,EAAAy3D,GAAAqJ,IAAA9gE,EAAAmlE,WAEAvB,GAAA5jE,GACA0gE,GAAA1gE,GAIA,QAAAolE,IAAArX,EAAA/W,EAAA+X,GACA,GAAAsW,EAEA,OAAA,OAAAtW,EAEA/X,EAEA,MAAA+W,EAAAuX,aACAvX,EAAAuX,aAAAtuB,EAAA+X,GACA,MAAAhB,EAAAwX,MAEAF,EAAAtX,EAAAwX,KAAAxW,GACAsW,GAAAruB,EAAA,KACAA,GAAA,IAEAquB,GAAA,KAAAruB,IACAA,EAAA,GAEAA,GAGAA,EAKA,QAAAwuB,IAAAxlE,GACA,GAAAylE,GACAC,EAEAC,EACAzmE,EACA0mE,CAEA,IAAA,IAAA5lE,EAAAmwD,GAAA1wD,OAGA,MAFAyvD,GAAAlvD,GAAA2uD,eAAA,OACA3uD,EAAAyvD,GAAA,GAAAx5C,MAAA1L,KAIA,KAAArL,EAAA,EAAAA,EAAAc,EAAAmwD,GAAA1wD,OAAAP,IACA0mE,EAAA,EACAH,EAAAzV,KAAAhwD,GACA,MAAAA,EAAAyjE,UACAgC,EAAAhC,QAAAzjE,EAAAyjE,SAEAgC,EAAAtV,GAAAnwD,EAAAmwD,GAAAjxD,GACA+iE,GAAAwD,GAEAvtB,EAAAutB,KAKAG,GAAA1W,EAAAuW,GAAAjX,cAGAoX,GAAA,GAAA1W,EAAAuW,GAAApX,aAAA5uD,OAEAyvD,EAAAuW,GAAAI,MAAAD,GAEA,MAAAD,GAAAC,EAAAD,KACAA,EAAAC,EACAF,EAAAD,GAIAvjE,GAAAlC,EAAA0lE,GAAAD,GAGA,QAAAK,IAAA9lE,GACA,IAAAA,EAAAyvD,GAAA,CAIA,GAAAvwD,GAAAi1D,EAAAn0D,EAAAkwD,GACAlwD,GAAAy3D,GAAAjsD,GAAAtM,EAAAm4C,KAAAn4C,EAAAi4C,MAAAj4C,EAAA+3C,KAAA/3C,EAAAi6D,KAAAj6D,EAAA83C,KAAA93C,EAAA63C,OAAA73C,EAAA43C,OAAA53C,EAAA23C,aAAA,SAAAnzB,GACA,MAAAA,IAAArB,SAAAqB,EAAA,MAGAkgD,GAAA5jE,IAGA,QAAA+lE,IAAA/lE,GACA,GAAA6f,GAAA,GAAA6wC,GAAAgQ,GAAAsF,GAAAhmE,IAOA,OANA6f,GAAAokD,WAEApkD,EAAAs5B,IAAA,EAAA,KACAt5B,EAAAokD,SAAAlgE,QAGA8b,EAGA,QAAAmmD,IAAAhmE,GACA,GAAAstD,GAAAttD,EAAAkwD,GACA3Z,EAAAv2C,EAAAmwD,EAIA,OAFAnwD,GAAAwwD,QAAAxwD,EAAAwwD,SAAAyP,GAAAjgE,EAAAowD,IAEA,OAAA9C,GAAAvpD,SAAAwyC,GAAA,KAAA+W,EACAyC,GAAAtB,WAAA,KAGA,gBAAAnB,KACAttD,EAAAkwD,GAAA5C,EAAAttD,EAAAwwD,QAAAyV,SAAA3Y,IAGAuD,EAAAvD,GACA,GAAAoD,GAAAgQ,GAAApT,KACAI,EAAAJ,GACAttD,EAAAyvD,GAAAnC,EACA/gD,EAAAgqC,GACAivB,GAAAxlE,GACAu2C,EACA0rB,GAAAjiE,GAEAkmE,GAAAlmE,GAGAk4C,EAAAl4C,KACAA,EAAAyvD,GAAA,MAGAzvD,IAGA,QAAAkmE,IAAAlmE,GACA,GAAAstD,GAAAttD,EAAAkwD,EACAzC,GAAAH,GACAttD,EAAAyvD,GAAA,GAAAx5C,MAAAm3C,EAAAl3C,OACAw3C,EAAAJ,GACAttD,EAAAyvD,GAAA,GAAAx5C,MAAAq3C,EAAAO,WACA,gBAAAP,GACA8V,GAAApjE,GACAuM,EAAA+gD,IACAttD,EAAAy3D,GAAAjsD,EAAA8hD,EAAA9gD,MAAA,GAAA,SAAAkX,GACA,MAAArB,UAAAqB,EAAA,MAEAkgD,GAAA5jE,IACAutD,EAAAD,GACAwY,GAAA9lE,GACA+hB,EAAAurC,GAEAttD,EAAAyvD,GAAA,GAAAx5C,MAAAq3C,GAEAF,EAAAkW,wBAAAtjE,GAIA,QAAAiuD,IAAAX,EAAA/W,EAAAwX,EAAAC,EAAAmY,GACA,GAAA/2C,KAoBA,OAlBA2+B,MAAA,GAAAA,KAAA,IACAC,EAAAD,EACAA,EAAAhqD,SAGAwpD,EAAAD,IAAAE,EAAAF,IACA/gD,EAAA+gD,IAAA,IAAAA,EAAA7tD,UACA6tD,EAAAvpD,QAIAqrB,EAAA6gC,kBAAA,EACA7gC,EAAAq0C,QAAAr0C,EAAAkhC,OAAA6V,EACA/2C,EAAAghC,GAAArC,EACA3+B,EAAA8gC,GAAA5C,EACAl+B,EAAA+gC,GAAA5Z,EACAnnB,EAAAwgC,QAAA5B,EAEA+X,GAAA32C,GAGA,QAAAs1C,IAAApX,EAAA/W,EAAAwX,EAAAC,GACA,MAAAC,IAAAX,EAAA/W,EAAAwX,EAAAC,GAAA,GAgCA,QAAAoY,IAAAx2C,EAAAy2C,GACA,GAAAxmD,GAAA3gB,CAIA,IAHA,IAAAmnE,EAAA5mE,QAAA8M,EAAA85D,EAAA,MACAA,EAAAA,EAAA,KAEAA,EAAA5mE,OACA,MAAAilE,KAGA,KADA7kD,EAAAwmD,EAAA,GACAnnE,EAAA,EAAAA,EAAAmnE,EAAA5mE,SAAAP,EACAmnE,EAAAnnE,GAAAg5C,YAAAmuB,EAAAnnE,GAAA0wB,GAAA/P,KACAA,EAAAwmD,EAAAnnE,GAGA,OAAA2gB,GAIA,QAAAjZ,MAGA,MAAAw/D,IAAA,cAFA55D,MAAAhN,KAAAqe,UAAA,IAKA,QAAAhX,MAGA,MAAAu/D,IAAA,aAFA55D,MAAAhN,KAAAqe,UAAA,IAWA,QAAAyoD,IAAAzmB,GACA,IAAA,GAAArgC,KAAAqgC,GACA,GAAA0mB,GAAAziE,QAAA0b,MAAA,GAAA,MAAAqgC,EAAArgC,IAAA7W,MAAAk3C,EAAArgC,IACA,OAAA,CAKA,KAAA,GADAgnD,IAAA,EACAtnE,EAAA,EAAAA,EAAAqnE,GAAA9mE,SAAAP,EACA,GAAA2gD,EAAA0mB,GAAArnE,IAAA,CACA,GAAAsnE,EACA,OAAA,CAEAlhD,YAAAu6B,EAAA0mB,GAAArnE,OAAA8xD,EAAAnR,EAAA0mB,GAAArnE,OACAsnE,GAAA,GAKA,OAAA,EAGA,QAAAC,MACA,MAAA/jE,MAAA0sD,SAGA,QAAAsX,MACA,MAAAC,IAAAp8D,KAGA,QAAAq8D,IAAAxyD,GACA,GAAAkgD,GAAAH,EAAA//C,GACAyyD,EAAAvS,EAAAjd,MAAA,EACAyvB,EAAAxS,EAAAld,SAAA,EACAwhB,EAAAtE,EAAAnd,OAAA,EACA4vB,EAAAzS,EAAApd,MAAA,EACA8vB,EAAA1S,EAAArd,KAAA,EACA6nB,EAAAxK,EAAAtd,MAAA,EACAioB,EAAA3K,EAAAvd,QAAA,EACAkwB,EAAA3S,EAAAxd,QAAA,EACAowB,EAAA5S,EAAAzd,aAAA,CAEAn0C,MAAA0sD,SAAAkX,GAAAhS,GAGA5xD,KAAAykE,eAAAD,EACA,IAAAD,EACA,IAAAhI,EACA,IAAAH,EAAA,GAAA,GAGAp8D,KAAA0kE,OAAAJ,EACA,EAAAD,EAIArkE,KAAAo1D,SAAAc,EACA,EAAAkO,EACA,GAAAD,EAEAnkE,KAAAiZ,SAEAjZ,KAAA8tD,QAAAyP,KAEAv9D,KAAA2kE,UAGA,QAAAC,IAAA5jD,GACA,MAAAA,aAAAkjD,IAGA,QAAAW,IAAAxW,GACA,MAAAA,GAAA,EACApqD,KAAAif,OAAA,EAAAmrC,IAAA,EAEApqD,KAAAif,MAAAmrC,GAMA,QAAAvjD,IAAAioD,EAAA+R,GACAhS,EAAAC,EAAA,EAAA,EAAA,WACA,GAAAjoD,GAAA9K,KAAA+kE,YACA1hD,EAAA,GAKA,OAJAvY,GAAA,IACAA,GAAAA,EACAuY,EAAA,KAEAA,EAAAmvC,KAAA1nD,EAAA,IAAA,GAAAg6D,EAAAtS,IAAA,EAAA,GAAA,KAuBA,QAAAwS,IAAAC,EAAA54C,GACA,GAAAge,IAAAhe,GAAA,IAAAie,MAAA26B,EAEA,IAAA,OAAA56B,EACA,MAAA,KAGA,IAAA66B,GAAA76B,EAAAA,EAAAttC,OAAA,OACAooE,GAAAD,EAAA,IAAA56B,MAAA86B,MAAA,IAAA,EAAA,GACA7I,IAAA,GAAA4I,EAAA,IAAA7W,EAAA6W,EAAA,GAEA,OAAA,KAAA5I,EACA,EACA,MAAA4I,EAAA,GAAA5I,GAAAA,EAIA,QAAA8I,IAAAza,EAAAvkD,GACA,GAAA8W,GAAAy4B,CACA,OAAAvvC,GAAAunD,QACAzwC,EAAA9W,EAAA2D,QACA4rC,GAAAuY,EAAAvD,IAAAI,EAAAJ,GAAAA,EAAAO,UAAA6W,GAAApX,GAAAO,WAAAhuC,EAAAguC,UAEAhuC,EAAA4vC,GAAAuY,QAAAnoD,EAAA4vC,GAAA5B,UAAAvV,GACA8U,EAAAwD,aAAA/wC,GAAA,GACAA,GAEA6kD,GAAApX,GAAA2a,QAIA,QAAAC,IAAAroB,GAGA,MAAA,KAAAl5C,KAAAif,MAAAi6B,EAAA4P,GAAA0Y,oBAAA,IAqBA,QAAAC,IAAA9a,EAAA+a,EAAAC,GACA,GACAC,GADA/6D,EAAA9K,KAAA6tD,SAAA,CAEA,KAAA7tD,KAAAw1C,UACA,MAAA,OAAAoV,EAAA5qD,KAAA6H,GAEA,IAAA,MAAA+iD,EAAA,CACA,GAAA,gBAAAA,IAEA,GAAA,QADAA,EAAAoa,GAAAc,GAAAlb,IAEA,MAAA5qD,UAEAiE,MAAAyI,IAAAk+C,GAAA,KAAAgb,IACAhb,GAAA,GAmBA,QAjBA5qD,KAAA4tD,QAAA+X,IACAE,EAAAL,GAAAxlE,OAEAA,KAAA6tD,QAAAjD,EACA5qD,KAAA4tD,QAAA,EACA,MAAAiY,GACA7lE,KAAAy2C,IAAAovB,EAAA,KAEA/6D,IAAA8/C,KACA+a,GAAA3lE,KAAA+lE,kBACAC,GAAAhmE,KAAAikE,GAAArZ,EAAA9/C,EAAA,KAAA,GAAA,GACA9K,KAAA+lE,oBACA/lE,KAAA+lE,mBAAA,EACArb,EAAAwD,aAAAluD,MAAA,GACAA,KAAA+lE,kBAAA,OAGA/lE,KAEA,MAAAA,MAAA4tD,OAAA9iD,EAAA06D,GAAAxlE,MAIA,QAAAimE,IAAArb,EAAA+a,GACA,MAAA,OAAA/a,GACA,gBAAAA,KACAA,GAAAA,GAGA5qD,KAAA+kE,UAAAna,EAAA+a,GAEA3lE,OAEAA,KAAA+kE,YAIA,QAAAmB,IAAAP,GACA,MAAA3lE,MAAA+kE,UAAA,EAAAY,GAGA,QAAAQ,IAAAR,GASA,MARA3lE,MAAA4tD,SACA5tD,KAAA+kE,UAAA,EAAAY,GACA3lE,KAAA4tD,QAAA,EAEA+X,GACA3lE,KAAAomE,SAAAZ,GAAAxlE,MAAA,MAGAA,KAGA,QAAAqmE,MACA,GAAA,MAAArmE,KAAA2tD,KACA3tD,KAAA+kE,UAAA/kE,KAAA2tD,MAAA,GAAA,OACA,IAAA,gBAAA3tD,MAAAwtD,GAAA,CACA,GAAA8Y,GAAAtB,GAAAuB,GAAAvmE,KAAAwtD,GACA,OAAA8Y,EACAtmE,KAAA+kE,UAAAuB,GAGAtmE,KAAA+kE,UAAA,GAAA,GAGA,MAAA/kE,MAGA,QAAAwmE,IAAA5b,GACA,QAAA5qD,KAAAw1C,YAGAoV,EAAAA,EAAAoX,GAAApX,GAAAma,YAAA,GAEA/kE,KAAA+kE,YAAAna,GAAA,IAAA,GAGA,QAAA6b,MACA,MACAzmE,MAAA+kE,YAAA/kE,KAAAgK,QAAAyqC,MAAA,GAAAswB,aACA/kE,KAAA+kE,YAAA/kE,KAAAgK,QAAAyqC,MAAA,GAAAswB,YAIA,QAAA2B,MACA,IAAA3b,EAAA/qD,KAAA2mE,eACA,MAAA3mE,MAAA2mE,aAGA,IAAAj6C,KAKA,IAHA4gC,EAAA5gC,EAAA1sB,MACA0sB,EAAA42C,GAAA52C,GAEAA,EAAAqoC,GAAA,CACA,GAAA6R,GAAAl6C,EAAAkhC,OAAAxC,EAAA1+B,EAAAqoC,IAAAiN,GAAAt1C,EAAAqoC,GACA/0D,MAAA2mE,cAAA3mE,KAAAw1C,WACAiZ,EAAA/hC,EAAAqoC,GAAA6R,EAAAC,WAAA,MAEA7mE,MAAA2mE,eAAA,CAGA,OAAA3mE,MAAA2mE,cAGA,QAAAG,MACA,QAAA9mE,KAAAw1C,YAAAx1C,KAAA4tD,OAGA,QAAAmZ,MACA,QAAA/mE,KAAAw1C,WAAAx1C,KAAA4tD,OAGA,QAAAoZ,MACA,QAAAhnE,KAAAw1C,YAAAx1C,KAAA4tD,QAAA,IAAA5tD,KAAA6tD,SAWA,QAAAoW,IAAArZ,EAAA9tC,GACA,GAGAuG,GACAqL,EACAu4C,EALAv1D,EAAAk5C,EAEAtgB,EAAA,IAuDA,OAlDAs6B,IAAAha,GACAl5C,GACAomD,GAAAlN,EAAA6Z,cACAz+D,EAAA4kD,EAAA8Z,MACA7M,EAAAjN,EAAAwK,SAEA/1C,EAAAurC,IACAl5C,KACAoL,EACApL,EAAAoL,GAAA8tC,EAEAl5C,EAAA8yD,aAAA5Z,IAEAtgB,EAAA48B,GAAAjd,KAAAW,KACAvnC,EAAA,MAAAinB,EAAA,IAAA,EAAA,EACA54B,GACA/O,EAAA,EACAqD,EAAAsoD,EAAAhkB,EAAA4zB,KAAA76C,EACAuH,EAAA0jC,EAAAhkB,EAAA8zB,KAAA/6C,EACA85B,EAAAmR,EAAAhkB,EAAA+zB,KAAAh7C,EACAlnB,EAAAmyD,EAAAhkB,EAAAg0B,KAAAj7C,EACAy0C,GAAAxJ,EAAAuW,GAAA,IAAAv6B,EAAAi0B,MAAAl7C,KAEAinB,EAAA68B,GAAAld,KAAAW,KACAvnC,EAAA,MAAAinB,EAAA,IAAA,EAAA,EACA54B,GACA/O,EAAAykE,GAAA98B,EAAA,GAAAjnB,GACAw0C,EAAAuP,GAAA98B,EAAA,GAAAjnB,GACAoH,EAAA28C,GAAA98B,EAAA,GAAAjnB,GACArd,EAAAohE,GAAA98B,EAAA,GAAAjnB,GACAuH,EAAAw8C,GAAA98B,EAAA,GAAAjnB,GACA85B,EAAAiqB,GAAA98B,EAAA,GAAAjnB,GACAlnB,EAAAirE,GAAA98B,EAAA,GAAAjnB,KAEA,MAAA3R,EACAA,KACA,gBAAAA,KAAA,QAAAA,IAAA,MAAAA,MACAu1D,EAAAI,GAAArF,GAAAtwD,EAAAw4C,MAAA8X,GAAAtwD,EAAAy4C,KAEAz4C,KACAA,EAAAomD,GAAAmP,EAAAzC,aACA9yD,EAAAmmD,EAAAoP,EAAA/Q,QAGAxnC,EAAA,GAAAw1C,IAAAxyD,GAEAkzD,GAAAha,IAAAM,EAAAN,EAAA,aACAl8B,EAAAo/B,QAAAlD,EAAAkD,SAGAp/B,EAMA,QAAA04C,IAAAE,EAAAjkD,GAIA,GAAAlG,GAAAmqD,GAAA1kD,WAAA0kD,EAAA7W,QAAA,IAAA,KAEA,QAAAxqD,MAAAkX,GAAA,EAAAA,GAAAkG,EAGA,QAAAkkD,IAAAvkE,EAAA4jE,GACA,GAAAzpD,IAAAqnD,aAAA,EAAAtO,OAAA,EAUA,OARA/4C,GAAA+4C,OAAA0Q,EAAAnyB,QAAAzxC,EAAAyxC,QACA,IAAAmyB,EAAAjyB,OAAA3xC,EAAA2xC,QACA3xC,EAAAgH,QAAAysC,IAAAt5B,EAAA+4C,OAAA,KAAAsR,QAAAZ,MACAzpD,EAAA+4C,OAGA/4C,EAAAqnD,cAAAoC,GAAA5jE,EAAAgH,QAAAysC,IAAAt5B,EAAA+4C,OAAA,KAEA/4C,EAGA,QAAAkqD,IAAArkE,EAAA4jE,GACA,GAAAzpD,EACA,OAAAna,GAAAwyC,WAAAoxB,EAAApxB,WAIAoxB,EAAAvB,GAAAuB,EAAA5jE,GACAA,EAAAykE,SAAAb,GACAzpD,EAAAoqD,GAAAvkE,EAAA4jE,IAEAzpD,EAAAoqD,GAAAX,EAAA5jE,GACAma,EAAAqnD,cAAArnD,EAAAqnD,aACArnD,EAAA+4C,QAAA/4C,EAAA+4C,QAGA/4C,IAZAqnD,aAAA,EAAAtO,OAAA,GAgBA,QAAAwR,IAAAC,EAAAl0B,GACA,MAAA,UAAAqG,EAAA8tB,GACA,GAAAC,GAAAC,CAWA,OATA,QAAAF,GAAA3hE,OAAA2hE,KACAxY,EAAA3b,EAAA,YAAAA,EAAA,uDAAAA,EAAA,kGAEAq0B,EAAAhuB,EAAAA,EAAA8tB,EAAAA,EAAAE,GAGAhuB,EAAA,gBAAAA,IAAAA,EAAAA,EACA+tB,EAAA5D,GAAAnqB,EAAA8tB,GACA5B,GAAAhmE,KAAA6nE,EAAAF,GACA3nE,MAIA,QAAAgmE,IAAA7V,EAAAz+C,EAAAq2D,EAAA7Z,GACA,GAAAsW,GAAA9yD,EAAA+yD,cACAH,EAAAO,GAAAnzD,EAAAgzD,OACAxO,EAAA2O,GAAAnzD,EAAA0jD,QAEAjF,GAAA3a,YAKA0Y,EAAA,MAAAA,GAAAA,EAEAsW,GACArU,EAAApD,GAAAuY,QAAAnV,EAAApD,GAAA5B,UAAAqZ,EAAAuD,GAEAzD,GACAlS,EAAAjC,EAAA,OAAA15C,EAAA05C,EAAA,QAAAmU,EAAAyD,GAEA7R,GACAI,GAAAnG,EAAA15C,EAAA05C,EAAA,SAAA+F,EAAA6R,GAEA7Z,GACAxD,EAAAwD,aAAAiC,EAAAmU,GAAApO,IAOA,QAAA8R,IAAAC,EAAAz0D,GACA,GAAAoiC,GAAAqyB,EAAAryB,KAAApiC,EAAA,QAAA,EACA,OAAAoiC,IAAA,EAAA,WACAA,GAAA,EAAA,WACAA,EAAA,EAAA,UACAA,EAAA,EAAA,UACAA,EAAA,EAAA,UACAA,EAAA,EAAA,WAAA,WAGA,QAAAsyB,IAAA30B,EAAA40B,GAGA,GAAA30D,GAAA+/B,GAAAyuB,KACAoG,EAAA/C,GAAA7xD,EAAAxT,MAAAm1C,QAAA,OACAtB,EAAA6W,EAAA2d,eAAAroE,KAAAooE,IAAA,WAEAhY,EAAA+X,IAAA7Y,EAAA6Y,EAAAt0B,IAAAs0B,EAAAt0B,GAAA/2C,KAAAkD,KAAAwT,GAAA20D,EAAAt0B,GAEA,OAAA7zC,MAAA6zC,OAAAuc,GAAApwD,KAAAkzD,aAAAhD,SAAArc,EAAA7zC,KAAAgiE,GAAAxuD,KAGA,QAAAxJ,MACA,MAAA,IAAAgkD,GAAAhuD,MAGA,QAAAwnE,IAAA5c,EAAApX,GACA,GAAA80B,GAAAna,EAAAvD,GAAAA,EAAAoX,GAAApX,EACA,UAAA5qD,KAAAw1C,YAAA8yB,EAAA9yB,aAGAhC,EAAAge,EAAAzG,EAAAvX,GAAA,cAAAA,GACA,gBAAAA,EACAxzC,KAAAmrD,UAAAmd,EAAAnd,UAEAmd,EAAAnd,UAAAnrD,KAAAgK,QAAAmrC,QAAA3B,GAAA2X,WAIA,QAAAsc,IAAA7c,EAAApX,GACA,GAAA80B,GAAAna,EAAAvD,GAAAA,EAAAoX,GAAApX,EACA,UAAA5qD,KAAAw1C,YAAA8yB,EAAA9yB,aAGAhC,EAAAge,EAAAzG,EAAAvX,GAAA,cAAAA,GACA,gBAAAA,EACAxzC,KAAAmrD,UAAAmd,EAAAnd,UAEAnrD,KAAAgK,QAAAu+D,MAAA/0B,GAAA2X,UAAAmd,EAAAnd,WAIA,QAAAqd,IAAAte,EAAAC,EAAA3W,EAAAi1B,GAEA,MADAA,GAAAA,GAAA,MACA,MAAAA,EAAA,GAAAzoE,KAAAwnE,QAAAtd,EAAA1W,IAAAxzC,KAAAynE,SAAAvd,EAAA1W,MACA,MAAAi1B,EAAA,GAAAzoE,KAAAynE,SAAAtd,EAAA3W,IAAAxzC,KAAAwnE,QAAArd,EAAA3W,IAGA,QAAAk1B,IAAA9d,EAAApX,GACA,GACAm1B,GADAL,EAAAna,EAAAvD,GAAAA,EAAAoX,GAAApX,EAEA,UAAA5qD,KAAAw1C,YAAA8yB,EAAA9yB,aAGAhC,EAAAge,EAAAhe,GAAA,eACA,gBAAAA,EACAxzC,KAAAmrD,YAAAmd,EAAAnd,WAEAwd,EAAAL,EAAAnd,UACAnrD,KAAAgK,QAAAmrC,QAAA3B,GAAA2X,WAAAwd,GAAAA,GAAA3oE,KAAAgK,QAAAu+D,MAAA/0B,GAAA2X,YAIA,QAAAyd,IAAAhe,EAAApX,GACA,MAAAxzC,MAAA0oE,OAAA9d,EAAApX,IAAAxzC,KAAAwnE,QAAA5c,EAAApX,GAGA,QAAAq1B,IAAAje,EAAApX,GACA,MAAAxzC,MAAA0oE,OAAA9d,EAAApX,IAAAxzC,KAAAynE,SAAA7c,EAAApX,GAGA,QAAAoC,IAAAgV,EAAApX,EAAAs1B,GACA,GAAAC,GACAC,EACA9pC,EAAAkxB,CAEA,OAAApwD,MAAAw1C,WAIAuzB,EAAA1D,GAAAza,EAAA5qD,MAEA+oE,EAAAvzB,WAIAwzB,EAAA,KAAAD,EAAAhE,YAAA/kE,KAAA+kE,aAEAvxB,EAAAge,EAAAhe,GAEA,SAAAA,GAAA,UAAAA,GAAA,YAAAA,GACA4c,EAAA6Y,GAAAjpE,KAAA+oE,GACA,YAAAv1B,EACA4c,GAAA,EACA,SAAA5c,IACA4c,GAAA,MAGAlxB,EAAAl/B,KAAA+oE,EACA3Y,EAAA,WAAA5c,EAAAtU,EAAA,IACA,WAAAsU,EAAAtU,EAAA,IACA,SAAAsU,EAAAtU,EAAA,KACA,QAAAsU,GAAAtU,EAAA8pC,GAAA,MACA,SAAAx1B,GAAAtU,EAAA8pC,GAAA,OACA9pC,GAEA4pC,EAAA1Y,EAAAhC,EAAAgC,IAvBAvoD,KANAA,IAgCA,QAAAohE,IAAA3sE,EAAAgyB,GAEA,GAGA46C,GAAAC,EAHAC,EAAA,IAAA96C,EAAAqmB,OAAAr4C,EAAAq4C,SAAArmB,EAAAmmB,QAAAn4C,EAAAm4C,SAEA40B,EAAA/sE,EAAA0N,QAAAysC,IAAA2yB,EAAA,SAcA,OAXA96C,GAAA+6C,EAAA,GACAH,EAAA5sE,EAAA0N,QAAAysC,IAAA2yB,EAAA,EAAA,UAEAD,GAAA76C,EAAA+6C,IAAAA,EAAAH,KAEAA,EAAA5sE,EAAA0N,QAAAysC,IAAA2yB,EAAA,EAAA,UAEAD,GAAA76C,EAAA+6C,IAAAH,EAAAG,MAIAD,EAAAD,IAAA,EAMA,QAAAn1D,MACA,MAAAhU,MAAAgK,QAAAqhD,OAAA,MAAAxX,OAAA,oCAGA,QAAAy1B,MACA,IAAAtpE,KAAAw1C,UACA,MAAA,KAEA,IAAA2H,GAAAn9C,KAAAgK,QAAAwhD,KACA,OAAArO,GAAAxI,OAAA,GAAAwI,EAAAxI,OAAA,KACA2e,EAAAnW,EAAA,kCAEAmS,EAAA/7C,KAAAxT,UAAAupE,aAEAtpE,KAAAupE,SAAAD,cAEAhW,EAAAnW,EAAA,gCASA,QAAAqsB,MACA,IAAAxpE,KAAAw1C,UACA,MAAA,qBAAAx1C,KAAAwtD,GAAA,MAEA,IAAA1D,GAAA,SACA2f,EAAA,EACAzpE,MAAA8mE,YACAhd,EAAA,IAAA9pD,KAAA+kE,YAAA,aAAA,mBACA0E,EAAA,IAEA,IAAAC,GAAA,IAAA5f,EAAA,MACAnV,EAAA,GAAA30C,KAAA20C,QAAA30C,KAAA20C,QAAA,KAAA,OAAA,SAEAg1B,EAAAF,EAAA,MAEA,OAAAzpE,MAAA6zC,OAAA61B,EAAA/0B,EAHA,wBAGAg1B,GAGA,QAAA91B,IAAA+1B,GACAA,IACAA,EAAA5pE,KAAAgnE,QAAAtc,EAAAmf,iBAAAnf,EAAAof,cAEA,IAAA1Z,GAAAkD,EAAAtzD,KAAA4pE,EACA,OAAA5pE,MAAAkzD,aAAA6W,WAAA3Z,GAGA,QAAAlG,IAAA3W,EAAAwd,GACA,MAAA/wD,MAAAw1C,YACA2Y,EAAA5a,IAAAA,EAAAiC,WACAwsB,GAAAzuB,GAAAiC,WACAyuB,IAAA9Z,GAAAnqD,KAAAkqD,KAAA3W,IAAA8X,OAAArrD,KAAAqrD,UAAA2e,UAAAjZ,GAEA/wD,KAAAkzD,aAAAxC,cAIA,QAAAuZ,IAAAlZ,GACA,MAAA/wD,MAAAkqD,KAAA8X,KAAAjR,GAGA,QAAA5G,IAAA5W,EAAAwd,GACA,MAAA/wD,MAAAw1C,YACA2Y,EAAA5a,IAAAA,EAAAiC,WACAwsB,GAAAzuB,GAAAiC,WACAyuB,IAAA/Z,KAAAlqD,KAAAmqD,GAAA5W,IAAA8X,OAAArrD,KAAAqrD,UAAA2e,UAAAjZ,GAEA/wD,KAAAkzD,aAAAxC,cAIA,QAAAwZ,IAAAnZ,GACA,MAAA/wD,MAAAmqD,GAAA6X,KAAAjR,GAMA,QAAA1F,IAAAvuC,GACA,GAAAqtD,EAEA,OAAA9oE,UAAAyb,EACA9c,KAAA8tD,QAAAuP,OAEA8M,EAAA5M,GAAAzgD,GACA,MAAAqtD,IACAnqE,KAAA8tD,QAAAqc,GAEAnqE,MAeA,QAAAkzD,MACA,MAAAlzD,MAAA8tD,QAGA,QAAA3Y,IAAA3B,GAIA,OAHAA,EAAAge,EAAAhe,IAIA,IAAA,OACAxzC,KAAAy0C,MAAA,EAEA,KAAA,UACA,IAAA,QACAz0C,KAAAy2D,KAAA,EAEA,KAAA,OACA,IAAA,UACA,IAAA,MACA,IAAA,OACAz2D,KAAAo8D,MAAA,EAEA,KAAA,OACAp8D,KAAAu8D,QAAA,EAEA,KAAA,SACAv8D,KAAAukE,QAAA,EAEA,KAAA,SACAvkE,KAAAwkE,aAAA,GAgBA,MAZA,SAAAhxB,GACAxzC,KAAA04D,QAAA,GAEA,YAAAllB,GACAxzC,KAAAg0C,WAAA,GAIA,YAAAR,GACAxzC,KAAAy0C,MAAA,EAAAxwC,KAAAyP,MAAA1T,KAAAy0C,QAAA,IAGAz0C,KAGA,QAAAuoE,IAAA/0B,GAEA,MAAAnyC,WADAmyC,EAAAge,EAAAhe,KACA,gBAAAA,EACAxzC,MAIA,SAAAwzC,IACAA,EAAA,OAGAxzC,KAAAm1C,QAAA3B,GAAAiD,IAAA,EAAA,YAAAjD,EAAA,OAAAA,GAAA4yB,SAAA,EAAA,OAGA,QAAAjb,MACA,MAAAnrD,MAAA+sD,GAAA5B,UAAA,KAAAnrD,KAAA6tD,SAAA,GAGA,QAAAuc,MACA,MAAAnmE,MAAAyP,MAAA1T,KAAAmrD,UAAA,KAGA,QAAAoe,MACA,MAAA,IAAAh2D,MAAAvT,KAAAmrD,WAGA,QAAA0b,MACA,GAAA1pB,GAAAn9C,IACA,QAAAm9C,EAAAxI,OAAAwI,EAAA1I,QAAA0I,EAAAsZ,OAAAtZ,EAAA7I,OAAA6I,EAAA9I,SAAA8I,EAAA/I,SAAA+I,EAAAhJ,eAGA,QAAAk2B,MACA,GAAAltB,GAAAn9C,IACA,QACAmkE,MAAAhnB,EAAAxI,OACAuhB,OAAA/Y,EAAA1I,QACAgiB,KAAAtZ,EAAAsZ,OACA2F,MAAAjf,EAAAif,QACAG,QAAApf,EAAAof,UACAgI,QAAApnB,EAAAonB,UACAC,aAAArnB,EAAAqnB,gBAIA,QAAAtoB,MAEA,MAAAl8C,MAAAw1C,UAAAx1C,KAAAspE,cAAA,KAGA,QAAAgB,MACA,MAAA90B,GAAAx1C,MAGA,QAAAuqE,MACA,MAAA/qE,MAAAgtD,EAAAxsD,OAGA,QAAAwqE,MACA,MAAAhe,GAAAxsD,MAAA6rD,SAGA,QAAA4e,MACA,OACA7f,MAAA5qD,KAAAwtD,GACA3Z,OAAA7zC,KAAAytD,GACApC,OAAArrD,KAAA8tD,QACA2V,MAAAzjE,KAAA4tD,OACAtC,OAAAtrD,KAAAktD,SAcA,QAAAwd,IAAA3X,EAAA4X,GACA7X,EAAA,GAAAC,EAAAA,EAAAh2D,QAAA,EAAA4tE,GAwCA,QAAAC,IAAAhgB,GACA,MAAAigB,IAAA/tE,KAAAkD,KACA4qD,EACA5qD,KAAAw0C,OACAx0C,KAAA04D,UACA14D,KAAAkzD,aAAAmG,MAAAhB,IACAr4D,KAAAkzD,aAAAmG,MAAAf,KAGA,QAAAwS,IAAAlgB,GACA,MAAAigB,IAAA/tE,KAAAkD,KACA4qD,EAAA5qD,KAAA+qE,UAAA/qE,KAAAg0C,aAAA,EAAA,GAGA,QAAAg3B,MACA,MAAA9R,IAAAl5D,KAAA20C,OAAA,EAAA,GAGA,QAAAs2B,MACA,GAAAC,GAAAlrE,KAAAkzD,aAAAmG,KACA,OAAAH,IAAAl5D,KAAA20C,OAAAu2B,EAAA7S,IAAA6S,EAAA5S,KAGA,QAAAuS,IAAAjgB,EAAApW,EAAAkkB,EAAAL,EAAAC,GACA,GAAA6S,EACA,OAAA,OAAAvgB,EACAoO,GAAAh5D,KAAAq4D,EAAAC,GAAA3jB,MAEAw2B,EAAAjS,GAAAtO,EAAAyN,EAAAC,GACA9jB,EAAA22B,IACA32B,EAAA22B,GAEAC,GAAAtuE,KAAAkD,KAAA4qD,EAAApW,EAAAkkB,EAAAL,EAAAC,IAIA,QAAA8S,IAAA1J,EAAAltB,EAAAkkB,EAAAL,EAAAC,GACA,GAAA+S,GAAA5S,GAAAiJ,EAAAltB,EAAAkkB,EAAAL,EAAAC,GACA7B,EAAAwB,GAAAoT,EAAA12B,KAAA,EAAA02B,EAAAtS,UAKA,OAHA/4D,MAAA20C,KAAA8hB,EAAAyB,kBACAl4D,KAAAy0C,MAAAgiB,EAAAuK,eACAhhE,KAAAy2D,KAAAA,EAAAvB,cACAl1D,KAwBA,QAAAsrE,IAAA1gB,GACA,MAAA,OAAAA,EAAA3mD,KAAAu6B,MAAAx+B,KAAAy0C,QAAA,GAAA,GAAAz0C,KAAAy0C,MAAA,GAAAmW,EAAA,GAAA5qD,KAAAy0C,QAAA,GAyDA,QAAA82B,IAAA3gB,GACA,GAAAmO,GAAA90D,KAAAif,OAAAljB,KAAAgK,QAAAmrC,QAAA,OAAAn1C,KAAAgK,QAAAmrC,QAAA,SAAA,OAAA,CACA,OAAA,OAAAyV,EAAAmO,EAAA/4D,KAAAy2C,IAAAmU,EAAAmO,EAAA,KAiGA,QAAAyS,IAAA5gB,EAAAnuC,GACAA,EAAA8hD,IAAAjQ,EAAA,KAAA,KAAA1D,IAiBA,QAAA6gB,MACA,MAAAzrE,MAAA4tD,OAAA,MAAA,GAGA,QAAA8d,MACA,MAAA1rE,MAAA4tD,OAAA,6BAAA,GA2GA,QAAA+d,IAAA/gB,GACA,MAAAoX,IAAA,IAAApX,GAGA,QAAAghB,MACA,MAAA5J,IAAA9mD,MAAA,KAAAC,WAAA0wD,YAGA,QAAAC,IAAAz/C,GACA,MAAAA,GAyCA,QAAA0/C,IAAAl4B,EAAAnyC,EAAAsqE,EAAAC,GACA,GAAA5gB,GAAAkS,KACA/R,EAAAJ,IAAAoE,IAAAyc,EAAAvqE,EACA,OAAA2pD,GAAA2gB,GAAAxgB,EAAA3X,GAGA,QAAAq4B,IAAAr4B,EAAAnyC,EAAAsqE,GAQA,GAPA3sD,EAAAw0B,KACAnyC,EAAAmyC,EACAA,EAAAxyC,QAGAwyC,EAAAA,GAAA,GAEA,MAAAnyC,EACA,MAAAqqE,IAAAl4B,EAAAnyC,EAAAsqE,EAAA,QAGA,IAAAxvE,GACA2vE,IACA,KAAA3vE,EAAA,EAAAA,EAAA,GAAAA,IACA2vE,EAAA3vE,GAAAuvE,GAAAl4B,EAAAr3C,EAAAwvE,EAAA,QAEA,OAAAG,GAWA,QAAAC,IAAAC,EAAAx4B,EAAAnyC,EAAAsqE,GACA,iBAAAK,IACAhtD,EAAAw0B,KACAnyC,EAAAmyC,EACAA,EAAAxyC,QAGAwyC,EAAAA,GAAA,KAEAA,EAAAw4B,EACA3qE,EAAAmyC,EACAw4B,GAAA,EAEAhtD,EAAAw0B,KACAnyC,EAAAmyC,EACAA,EAAAxyC,QAGAwyC,EAAAA,GAAA,GAGA,IAAAwX,GAAAkS,KACAj/C,EAAA+tD,EAAAhhB,EAAAgO,MAAAhB,IAAA,CAEA,IAAA,MAAA32D,EACA,MAAAqqE,IAAAl4B,GAAAnyC,EAAA4c,GAAA,EAAA0tD,EAAA,MAGA,IAAAxvE,GACA2vE,IACA,KAAA3vE,EAAA,EAAAA,EAAA,EAAAA,IACA2vE,EAAA3vE,GAAAuvE,GAAAl4B,GAAAr3C,EAAA8hB,GAAA,EAAA0tD,EAAA,MAEA,OAAAG,GAGA,QAAAG,IAAAz4B,EAAAnyC,GACA,MAAAwqE,IAAAr4B,EAAAnyC,EAAA,UAGA,QAAA6qE,IAAA14B,EAAAnyC,GACA,MAAAwqE,IAAAr4B,EAAAnyC,EAAA,eAGA,QAAA8qE,IAAAH,EAAAx4B,EAAAnyC,GACA,MAAA0qE,IAAAC,EAAAx4B,EAAAnyC,EAAA,YAGA,QAAA+qE,IAAAJ,EAAAx4B,EAAAnyC,GACA,MAAA0qE,IAAAC,EAAAx4B,EAAAnyC,EAAA,iBAGA,QAAAgrE,IAAAL,EAAAx4B,EAAAnyC,GACA,MAAA0qE,IAAAC,EAAAx4B,EAAAnyC,EAAA,eAqBA,QAAAgL,MACA,GAAA7L,GAAAb,KAAAiZ,KAaA,OAXAjZ,MAAAykE,cAAAkI,GAAA3sE,KAAAykE,eACAzkE,KAAA0kE,MAAAiI,GAAA3sE,KAAA0kE,OACA1kE,KAAAo1D,QAAAuX,GAAA3sE,KAAAo1D,SAEAv0D,EAAA2jE,aAAAmI,GAAA9rE,EAAA2jE,cACA3jE,EAAA0jE,QAAAoI,GAAA9rE,EAAA0jE,SACA1jE,EAAA07D,QAAAoQ,GAAA9rE,EAAA07D,SACA17D,EAAAu7D,MAAAuQ,GAAA9rE,EAAAu7D,OACAv7D,EAAAq1D,OAAAyW,GAAA9rE,EAAAq1D,QACAr1D,EAAAsjE,MAAAwI,GAAA9rE,EAAAsjE,OAEAnkE,KAGA,QAAA4sE,IAAAl7D,EAAAk5C,EAAAhnD,EAAA+jE,GACA,GAAAf,GAAA3C,GAAArZ,EAAAhnD,EAMA,OAJA8N,GAAA+yD,eAAAkD,EAAAf,EAAAnC,cACA/yD,EAAAgzD,OAAAiD,EAAAf,EAAAlC,MACAhzD,EAAA0jD,SAAAuS,EAAAf,EAAAxR,QAEA1jD,EAAAizD,UAIA,QAAAkI,IAAAjiB,EAAAhnD,GACA,MAAAgpE,IAAA5sE,KAAA4qD,EAAAhnD,EAAA,GAIA,QAAAkpE,IAAAliB,EAAAhnD,GACA,MAAAgpE,IAAA5sE,KAAA4qD,EAAAhnD,GAAA,GAGA,QAAAmpE,IAAA1e,GACA,MAAAA,GAAA,EACApqD,KAAAyP,MAAA26C,GAEApqD,KAAAu6B,KAAA6vB,GAIA,QAAAhnD,MACA,GAIAk9D,GAAAhI,EAAAH,EAAA+H,EAAA6I,EAJAxI,EAAAxkE,KAAAykE,cACAH,EAAAtkE,KAAA0kE,MACAxO,EAAAl2D,KAAAo1D,QACAv0D,EAAAb,KAAAiZ,KAwCA,OAnCAurD,IAAA,GAAAF,GAAA,GAAApO,GAAA,GACAsO,GAAA,GAAAF,GAAA,GAAApO,GAAA,IACAsO,GAAA,MAAAuI,GAAAE,GAAA/W,GAAAoO,GACAA,EAAA,EACApO,EAAA,GAKAr1D,EAAA2jE,aAAAA,EAAA,IAEAD,EAAAnW,EAAAoW,EAAA,KACA3jE,EAAA0jE,QAAAA,EAAA,GAEAhI,EAAAnO,EAAAmW,EAAA,IACA1jE,EAAA07D,QAAAA,EAAA,GAEAH,EAAAhO,EAAAmO,EAAA,IACA17D,EAAAu7D,MAAAA,EAAA,GAEAkI,GAAAlW,EAAAgO,EAAA,IAGA4Q,EAAA5e,EAAA8e,GAAA5I,IACApO,GAAA8W,EACA1I,GAAAyI,GAAAE,GAAAD,IAGA7I,EAAA/V,EAAA8H,EAAA,IACAA,GAAA,GAEAr1D,EAAAyjE,KAAAA,EACAzjE,EAAAq1D,OAAAA,EACAr1D,EAAAsjE,MAAAA,EAEAnkE,KAGA,QAAAktE,IAAA5I,GAGA,MAAA,MAAAA,EAAA,OAGA,QAAA2I,IAAA/W,GAEA,MAAA,QAAAA,EAAA,KAGA,QAAAiX,IAAA35B,GACA,IAAAxzC,KAAAw1C,UACA,MAAA3tC,IAEA,IAAAy8D,GACApO,EACAsO,EAAAxkE,KAAAykE,aAIA,IAAA,WAFAjxB,EAAAge,EAAAhe,KAEA,SAAAA,EAGA,MAFA8wB,GAAAtkE,KAAA0kE,MAAAF,EAAA,MACAtO,EAAAl2D,KAAAo1D,QAAA8X,GAAA5I,GACA,UAAA9wB,EAAA0iB,EAAAA,EAAA,EAIA,QADAoO,EAAAtkE,KAAA0kE,MAAAzgE,KAAAif,MAAA+pD,GAAAjtE,KAAAo1D,UACA5hB,GACA,IAAA,OAAA,MAAA8wB,GAAA,EAAAE,EAAA,MACA,KAAA,MAAA,MAAAF,GAAAE,EAAA,KACA,KAAA,OAAA,MAAA,IAAAF,EAAAE,EAAA,IACA,KAAA,SAAA,MAAA,MAAAF,EAAAE,EAAA,GACA,KAAA,SAAA,MAAA,OAAAF,EAAAE,EAAA,GAEA,KAAA,cAAA,MAAAvgE,MAAAyP,MAAA,MAAA4wD,GAAAE,CACA,SAAA,KAAA,IAAA9nE,OAAA,gBAAA82C,IAMA,QAAA45B,MACA,MAAAptE,MAAAw1C,UAIAx1C,KAAAykE,cACA,MAAAzkE,KAAA0kE,MACA1kE,KAAAo1D,QAAA,GAAA,OACA,QAAA9G,EAAAtuD,KAAAo1D,QAAA,IANAvtD,IAUA,QAAAwlE,IAAAC,GACA,MAAA,YACA,MAAAttE,MAAAmtE,GAAAG,IAaA,QAAAC,IAAA/5B,GAEA,MADAA,GAAAge,EAAAhe,GACAxzC,KAAAw1C,UAAAx1C,KAAAwzC,EAAA,OAAA3rC,IAGA,QAAA2lE,IAAA/5B,GACA,MAAA,YACA,MAAAzzC,MAAAw1C,UAAAx1C,KAAAiZ,MAAAw6B,GAAA5rC,KAYA,QAAAw8D,MACA,MAAAjW,GAAApuD,KAAAskE,OAAA,GAcA,QAAAmJ,IAAAphD,EAAAgiC,EAAA0C,EAAAC,EAAA3F,GACA,MAAAA,GAAAyF,aAAAzC,GAAA,IAAA0C,EAAA1kC,EAAA2kC,GAGA,QAAA0c,IAAAC,EAAA5c,EAAA1F,GACA,GAAA35C,GAAAuyD,GAAA0J,GAAAjhE,MACA63D,EAAArhD,GAAAxR,EAAAy7D,GAAA,MACA5Q,EAAAr5C,GAAAxR,EAAAy7D,GAAA,MACA/Q,EAAAl5C,GAAAxR,EAAAy7D,GAAA,MACA7I,EAAAphD,GAAAxR,EAAAy7D,GAAA,MACAjX,EAAAhzC,GAAAxR,EAAAy7D,GAAA,MACAhJ,EAAAjhD,GAAAxR,EAAAy7D,GAAA,MAEA7wE,EAAAioE,GAAAqJ,GAAAC,KAAA,IAAAtJ,IACAA,EAAAqJ,GAAAzxE,IAAA,KAAAooE,IACAhI,GAAA,IAAA,MACAA,EAAAqR,GAAAzwB,IAAA,KAAAof,IACAH,GAAA,IAAA,MACAA,EAAAwR,GAAAhjD,IAAA,KAAAwxC,IACAkI,GAAA,IAAA,MACAA,EAAAsJ,GAAA5nE,IAAA,KAAAs+D,IACApO,GAAA,IAAA,MACAA,EAAA0X,GAAA/V,IAAA,KAAA3B,IACAiO,GAAA,IAAA,OAAA,KAAAA,EAKA,OAHA7nE,GAAA,GAAAy0D,EACAz0D,EAAA,IAAAqxE,EAAA,EACArxE,EAAA,GAAA+uD,EACAoiB,GAAAvyD,MAAA,KAAA5e,GAIA,QAAAwxE,IAAAC,GACA,MAAA1sE,UAAA0sE,EACA7qD,GAEA,kBAAA,KACAA,GAAA6qD,GACA,GAMA,QAAAC,IAAAC,EAAAC,GACA,MAAA7sE,UAAAusE,GAAAK,KAGA5sE,SAAA6sE,EACAN,GAAAK,IAEAL,GAAAK,GAAAC,EACA,MAAAD,IACAL,GAAAC,GAAAK,EAAA,IAEA,IAGA,QAAAlE,IAAAmE,GACA,IAAAnuE,KAAAw1C,UACA,MAAAx1C,MAAAkzD,aAAAxC,aAGA,IAAArF,GAAArrD,KAAAkzD,aACA9C,EAAAsd,GAAA1tE,MAAAmuE,EAAA9iB,EAMA,OAJA8iB,KACA/d,EAAA/E,EAAA6F,YAAAlxD,KAAAowD,IAGA/E,EAAA0e,WAAA3Z,GAKA,QAAAge,MAQA,IAAApuE,KAAAw1C,UACA,MAAAx1C,MAAAkzD,aAAAxC,aAGA,IAGA6L,GAAAH,EAAA+H,EAHAI,EAAA8J,GAAAruE,KAAAykE,eAAA,IACAH,EAAA+J,GAAAruE,KAAA0kE,OACAxO,EAAAmY,GAAAruE,KAAAo1D,QAIAmH,GAAAnO,EAAAmW,EAAA,IACAnI,EAAAhO,EAAAmO,EAAA,IACAgI,GAAA,GACAhI,GAAA,GAGA4H,EAAA/V,EAAA8H,EAAA,IACAA,GAAA,EAIA,IAAAoY,GAAAnK,EACAtM,EAAA3B,EACAqY,EAAAjK,EACA15C,EAAAwxC,EACAjf,EAAAof,EACApgE,EAAAooE,EACAr4D,EAAAlM,KAAAg3C,WAEA,OAAA9qC,IAMAA,EAAA,EAAA,IAAA,IACA,KACAoiE,EAAAA,EAAA,IAAA,KACAzW,EAAAA,EAAA,IAAA,KACA0W,EAAAA,EAAA,IAAA,KACA3jD,GAAAuyB,GAAAhhD,EAAA,IAAA,KACAyuB,EAAAA,EAAA,IAAA,KACAuyB,EAAAA,EAAA,IAAA,KACAhhD,EAAAA,EAAA,IAAA,IAXA,MAxvIA,GAAAwuD,IAwGA6jB,EAEAA,IADAtxD,MAAAnd,UAAAyuE,KACAtxD,MAAAnd,UAAAyuE,KAEA,SAAAC,GAIA,IAAA,GAHAzyE,GAAAua,OAAAvW,MACAyF,EAAAzJ,EAAAe,SAAA,EAEAP,EAAA,EAAAA,EAAAiJ,EAAAjJ,IACA,GAAAA,IAAAR,IAAAyyE,EAAA3xE,KAAAkD,KAAAhE,EAAAQ,GAAAA,EAAAR,GACA,OAAA,CAIA,QAAA,EAIA,IAAA6wD,IAAA2hB,GAiDAzgB,GAAArD,EAAAqD,oBAiDAE,IAAA,EA8FAoB,KAYA3E,GAAAsE,6BAAA,EACAtE,EAAAyE,mBAAA,IAyDA,IAAApuC,GAGAA,IADAxK,OAAAwK,KACAxK,OAAAwK,KAEA,SAAAC,GACA,GAAAxkB,GAAA2gB,IACA,KAAA3gB,IAAAwkB,GACAkqC,EAAAlqC,EAAAxkB,IACA2gB,EAAA7b,KAAA9E,EAGA,OAAA2gB,GAIA,IA+WA/b,IA/WA28D,GAAAh9C,GAEA2tD,IACAC,QAAA,gBACAC,QAAA,mBACAC,SAAA,eACAC,QAAA,oBACAC,SAAA,sBACAC,SAAA,KAQAC,IACAC,IAAA,YACAC,GAAA,SACAC,EAAA,aACAC,GAAA,eACAC,IAAA,sBACAC,KAAA,6BA+BAC,IACAC,OAAA,QACAC,KAAA,SACAvzE,EAAA,gBACA0xE,GAAA,aACA1wB,EAAA,WACAwyB,GAAA,aACA/kD,EAAA,UACAglD,GAAA,WACA5pE,EAAA,QACA6pE,GAAA,UACAhY,EAAA,UACAiY,GAAA,YACAntE,EAAA,SACAotE,GAAA,YAeAxe,MA4BAQ,MA2EAsB,GAAA,uLAEAK,GAAA,6CAEAF,MAEAP,MAwFA+c,GAAA,aAWAzJ,GAAA,qBACAT,GAAA,0BAMAmK,GAAA,mHAGAjc,MA2BAW,MA8BAwJ,GAAA,EACAF,GAAA,EACAC,GAAA,EACAE,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAG,GAAA,EACAE,GAAA;ufAKAx9D,IADA8b,MAAAnd,UAAAqB,QACA8b,MAAAnd,UAAAqB,QAEA,SAAAhF,GAEA,GAAAI,EACA,KAAAA,EAAA,EAAAA,EAAAwD,KAAAjD,SAAAP,EACA,GAAAwD,KAAAxD,KAAAJ,EACA,MAAAI,EAGA,QAAA,EAIA,IAAA25D,IAAA/0D,EAQA0xD,GAAA,KAAA,KAAA,GAAA,KAAA,WACA,MAAA9yD,MAAAy0C,QAAA,IAGAqe,EAAA,MAAA,EAAA,EAAA,SAAAjf,GACA,MAAA7zC,MAAAkzD,aAAA+C,YAAAj2D,KAAA6zC,KAGAif,EAAA,OAAA,EAAA,EAAA,SAAAjf,GACA,MAAA7zC,MAAAkzD,aAAAgD,OAAAl2D,KAAA6zC,KAKAsd,EAAA,QAAA,KAIAU,EAAA,QAAA,GAIAgC,EAAA,IAtIA,SAuIAA,EAAA,KAvIA,QAJA,QA4IAA,EAAA,MAAA,SAAAI,EAAA5I,GACA,MAAAA,GAAAuL,iBAAA3C,KAEAJ,EAAA,OAAA,SAAAI,EAAA5I,GACA,MAAAA,GAAA4L,YAAAhD,KAGAS,IAAA,IAAA,MAAA,SAAA9J,EAAAnuC,GACAA,EAAAwhD,IAAA3P,EAAA1D,GAAA,IAGA8J,IAAA,MAAA,QAAA,SAAA9J,EAAAnuC,EAAAnf,EAAAy1D,GACA,GAAAte,GAAAn3C,EAAAwwD,QAAA0I,YAAA5L,EAAAmI,EAAAz1D,EAAA4vD,QAEA,OAAAzY,EACAh4B,EAAAwhD,IAAAxpB,EAEA+X,EAAAlvD,GAAA0uD,aAAApB,GAMA,IAAA0K,IAAA,gCACA4a,GAAA,wFAAAlT,MAAA,KAUAmT,GAAA,kDAAAnT,MAAA,KAkIAhG,GAAAiZ,GAoBA7Y,GAAA6Y,EAwDAnd,GAAA,IAAA,EAAA,EAAA,WACA,GAAAnwD,GAAA3C,KAAA20C,MACA,OAAAhyC,IAAA,KAAA,GAAAA,EAAA,IAAAA,IAGAmwD,EAAA,GAAA,KAAA,GAAA,EAAA,WACA,MAAA9yD,MAAA20C,OAAA,MAGAme,EAAA,GAAA,OAAA,GAAA,EAAA,QACAA,EAAA,GAAA,QAAA,GAAA,EAAA,QACAA,EAAA,GAAA,SAAA,GAAA,GAAA,EAAA,QAIA3B,EAAA,OAAA,KAIAU,EAAA,OAAA,GAIAgC,EAAA,IAvYA,YAwYAA,EAAA,KAhZA,QAJA,QAqZAA,EAAA,OA7YA,UANA,SAoZAA,EAAA,QA7YA,eA6YAmc,IACAnc,EAAA,SA9YA,eA8YAmc,IAEAtb,IAAA,QAAA,UAAAyJ,IACAzJ,GAAA,OAAA,SAAA9J,EAAAnuC,GACAA,EAAA0hD,IAAA,IAAAvT,EAAA7tD,OAAA2tD,EAAA0lB,kBAAAxlB,GAAA0D,EAAA1D,KAEA8J,GAAA,KAAA,SAAA9J,EAAAnuC,GACAA,EAAA0hD,IAAAzT,EAAA0lB,kBAAAxlB,KAEA8J,GAAA,IAAA,SAAA9J,EAAAnuC,GACAA,EAAA0hD,IAAAx+C,SAAAirC,EAAA,MAeAF,EAAA0lB,kBAAA,SAAAxlB,GACA,MAAA0D,GAAA1D,IAAA0D,EAAA1D,GAAA,GAAA,KAAA,KAKA,IAAAylB,IAAAne,EAAA,YAAA,EA4FAY,GAAA,KAAA,KAAA,GAAA,KAAA,QACAA,EAAA,KAAA,KAAA,GAAA,KAAA,WAIA3B,EAAA,OAAA,KACAA,EAAA,UAAA,KAIAU,EAAA,OAAA,GACAA,EAAA,UAAA,GAIAgC,EAAA,IA7hBA,SA8hBAA,EAAA,KA9hBA,QAJA,QAmiBAA,EAAA,IA/hBA,SAgiBAA,EAAA,KAhiBA,QAJA,QAsiBAe,IAAA,IAAA,KAAA,IAAA,MAAA,SAAAhK,EAAApW,EAAAl3C,EAAAy1D,GACAve,EAAAue,EAAAF,OAAA,EAAA,IAAAvE,EAAA1D,IAWA,IAAA0lB,KACAjY,IAAA,EACAC,IAAA,EAyBAxF,GAAA,IAAA,EAAA,KAAA,OAEAA,EAAA,KAAA,EAAA,EAAA,SAAAjf,GACA,MAAA7zC,MAAAkzD,aAAAsH,YAAAx6D,KAAA6zC,KAGAif,EAAA,MAAA,EAAA,EAAA,SAAAjf,GACA,MAAA7zC,MAAAkzD,aAAAuH,cAAAz6D,KAAA6zC,KAGAif,EAAA,OAAA,EAAA,EAAA,SAAAjf,GACA,MAAA7zC,MAAAkzD,aAAAwH,SAAA16D,KAAA6zC,KAGAif,EAAA,IAAA,EAAA,EAAA,WACAA,EAAA,IAAA,EAAA,EAAA,cAIA3B,EAAA,MAAA,KACAA,EAAA,UAAA,KACAA,EAAA,aAAA,KAGAU,EAAA,MAAA,IACAA,EAAA,UAAA,IACAA,EAAA,aAAA,IAIAgC,EAAA,IAvmBA,SAwmBAA,EAAA,IAxmBA,SAymBAA,EAAA,IAzmBA,SA0mBAA,EAAA,KAAA,SAAAI,EAAA5I,GACA,MAAAA,GAAAsQ,iBAAA1H,KAEAJ,EAAA,MAAA,SAAAI,EAAA5I,GACA,MAAAA,GAAAkQ,mBAAAtH,KAEAJ,EAAA,OAAA,SAAAI,EAAA5I,GACA,MAAAA,GAAA6P,cAAAjH,KAGAW,IAAA,KAAA,MAAA,QAAA,SAAAhK,EAAApW,EAAAl3C,EAAAy1D,GACA,GAAA2F,GAAAp7D,EAAAwwD,QAAA6L,cAAA/O,EAAAmI,EAAAz1D,EAAA4vD,QAEA,OAAAwL,EACAlkB,EAAAxuC,EAAA0yD,EAEAlM,EAAAlvD,GAAA2vD,eAAArC,IAIAgK,IAAA,IAAA,IAAA,KAAA,SAAAhK,EAAApW,EAAAl3C,EAAAy1D,GACAve,EAAAue,GAAAzE,EAAA1D,IA+BA,IAAA2lB,IAAA,2DAAAvT,MAAA,KAUAwT,GAAA,8BAAAxT,MAAA,KAKAyT,GAAA,uBAAAzT,MAAA,KAqJA1B,GAAA2U,GAoBAvU,GAAAuU,GAoBAnU,GAAAmU,EAwEAnd,GAAA,KAAA,KAAA,GAAA,EAAA,QACAA,EAAA,KAAA,KAAA,GAAA,EAAAqJ,IACArJ,EAAA,KAAA,KAAA,GAAA,EAAAuJ,IAEAvJ,EAAA,MAAA,EAAA,EAAA,WACA,MAAA,GAAAqJ,GAAAjhD,MAAAlb,MAAAwyD,EAAAxyD,KAAAu8D,UAAA,KAGAzJ,EAAA,QAAA,EAAA,EAAA,WACA,MAAA,GAAAqJ,GAAAjhD,MAAAlb,MAAAwyD,EAAAxyD,KAAAu8D,UAAA,GACA/J,EAAAxyD,KAAAukE,UAAA,KAGAzR,EAAA,MAAA,EAAA,EAAA,WACA,MAAA,GAAA9yD,KAAAo8D,QAAA5J,EAAAxyD,KAAAu8D,UAAA,KAGAzJ,EAAA,QAAA,EAAA,EAAA,WACA,MAAA,GAAA9yD,KAAAo8D,QAAA5J,EAAAxyD,KAAAu8D,UAAA,GACA/J,EAAAxyD,KAAAukE,UAAA,KASAlY,GAAA,KAAA,GACAA,GAAA,KAAA,GAIA8E,EAAA,OAAA,KAGAU,EAAA,OAAA,IAQAgC,EAAA,IAAA2I,IACA3I,EAAA,IAAA2I,IACA3I,EAAA,IAh+BA,SAi+BAA,EAAA,IAj+BA,SAk+BAA,EAAA,IAl+BA,SAm+BAA,EAAA,KAn+BA,QAJA,QAw+BAA,EAAA,KAp+BA,QAJA,QAy+BAA,EAAA,KAr+BA,QAJA,QA2+BAA,EAAA,MAt+BA,aAu+BAA,EAAA,QAt+BA,iBAu+BAA,EAAA,MAx+BA,aAy+BAA,EAAA,QAx+BA,iBA0+BAa,IAAA,IAAA,MAAA0J,IACA1J,IAAA,IAAA,MAAA,SAAA9J,EAAAnuC,EAAAnf,GACA,GAAAozE,GAAApiB,EAAA1D,EACAnuC,GAAA2hD,IAAA,KAAAsS,EAAA,EAAAA,IAEAhc,IAAA,IAAA,KAAA,SAAA9J,EAAAnuC,EAAAnf,GACAA,EAAAqzE,MAAArzE,EAAAwwD,QAAA+U,KAAAjY,GACAttD,EAAAmlE,UAAA7X,IAEA8J,IAAA,IAAA,MAAA,SAAA9J,EAAAnuC,EAAAnf,GACAmf,EAAA2hD,IAAA9P,EAAA1D,GACA4B,EAAAlvD,GAAA6vD,SAAA,IAEAuH,GAAA,MAAA,SAAA9J,EAAAnuC,EAAAnf,GACA,GAAAuiC,GAAA+qB,EAAA7tD,OAAA,CACA0f,GAAA2hD,IAAA9P,EAAA1D,EAAAiI,OAAA,EAAAhzB,IACApjB,EAAA4hD,IAAA/P,EAAA1D,EAAAiI,OAAAhzB,IACA2sB,EAAAlvD,GAAA6vD,SAAA,IAEAuH,GAAA,QAAA,SAAA9J,EAAAnuC,EAAAnf,GACA,GAAAszE,GAAAhmB,EAAA7tD,OAAA,EACA8zE,EAAAjmB,EAAA7tD,OAAA,CACA0f,GAAA2hD,IAAA9P,EAAA1D,EAAAiI,OAAA,EAAA+d,IACAn0D,EAAA4hD,IAAA/P,EAAA1D,EAAAiI,OAAA+d,EAAA,IACAn0D,EAAA6hD,IAAAhQ,EAAA1D,EAAAiI,OAAAge,IACArkB,EAAAlvD,GAAA6vD,SAAA,IAEAuH,GAAA,MAAA,SAAA9J,EAAAnuC,EAAAnf,GACA,GAAAuiC,GAAA+qB,EAAA7tD,OAAA,CACA0f,GAAA2hD,IAAA9P,EAAA1D,EAAAiI,OAAA,EAAAhzB,IACApjB,EAAA4hD,IAAA/P,EAAA1D,EAAAiI,OAAAhzB,MAEA60B,GAAA,QAAA,SAAA9J,EAAAnuC,EAAAnf,GACA,GAAAszE,GAAAhmB,EAAA7tD,OAAA,EACA8zE,EAAAjmB,EAAA7tD,OAAA,CACA0f,GAAA2hD,IAAA9P,EAAA1D,EAAAiI,OAAA,EAAA+d,IACAn0D,EAAA4hD,IAAA/P,EAAA1D,EAAAiI,OAAA+d,EAAA,IACAn0D,EAAA6hD,IAAAhQ,EAAA1D,EAAAiI,OAAAge,KAWA,IA6CAzT,IA7BA0T,GAAA5e,EAAA,SAAA,GAMAuL,IACAvN,SAAAwe,GACApe,eAAA2e,GACAve,YAryCA,eAsyCAE,QAhyCA,KAiyCAmgB,uBAhyCA,UAiyCAjgB,aAAA0e,GAEAtZ,OAAAga,GACAja,YAAAka,GAEA37B,KAAA87B,GAEA5V,SAAA6V,GACA/V,YAAAiW,GACAhW,cAAA+V,GAEAQ,cAvCA,iBA2CA7T,MACAS,MA8MAsB,GAAA,mJACAC,GAAA,8IAEAG,GAAA,wBAEAF,KACA,eAAA,wBACA,aAAA,oBACA,eAAA,mBACA,aAAA,eAAA,IACA,WAAA,gBACA,UAAA,cAAA,IACA,aAAA,eACA,WAAA,UAEA,aAAA,gBACA,YAAA,eAAA,IACA,UAAA,UAIAC,KACA,gBAAA,wBACA,gBAAA,uBACA,WAAA,mBACA,QAAA,cACA,cAAA,sBACA,cAAA,qBACA,SAAA,iBACA,OAAA,aACA,KAAA,SAGAsB,GAAA,sBAwDAJ,GAAA,8LAiGA7V,GAAAkW,wBAAA3R,EACA,iVAIA,SAAA3xD,GACAA,EAAAyvD,GAAA,GAAAx5C,MAAAjW,EAAAkwD,IAAAlwD,EAAAyjE,QAAA,OAAA,OAoJArW,EAAAyX,SAAA,aAGAzX,EAAA0X,SAAA,YA6PA,IAAA6O,IAAAhiB,EACA,qGACA,WACA,GAAA2X,GAAA5E,GAAA9mD,MAAA,KAAAC,UACA,OAAAnb,MAAAw1C,WAAAoxB,EAAApxB,UACAoxB,EAAA5mE,KAAAA,KAAA4mE,EAEAvZ,MAKA6jB,GAAAjiB,EACA,qGACA,WACA,GAAA2X,GAAA5E,GAAA9mD,MAAA,KAAAC,UACA,OAAAnb,MAAAw1C,WAAAoxB,EAAApxB,UACAoxB,EAAA5mE,KAAAA,KAAA4mE,EAEAvZ,MAwCA75C,GAAA,WACA,MAAAD,MAAAC,IAAAD,KAAAC,OAAA,GAAAD,OAGAswD,IAAA,OAAA,UAAA,QAAA,OAAA,MAAA,OAAA,SAAA,SAAA,cA+FA/4D,IAAA,IAAA,KACAA,GAAA,KAAA,IAIA+oD,EAAA,IAAAiS,IACAjS,EAAA,KAAAiS,IACApR,IAAA,IAAA,MAAA,SAAA9J,EAAAnuC,EAAAnf,GACAA,EAAAyjE,SAAA,EACAzjE,EAAAqwD,KAAAqX,GAAAc,GAAAlb,IAQA,IAAAwa,IAAA,iBA2CA1a,GAAAwD,aAAA,YAmJA,IAAAgZ,IAAA,wDAKAC,GAAA,6IA+DAlD,IAAA/2C,GAAAg3C,GAAAnkE,UACAkkE,GAAAkN,QAAAnN,EAuFA,IAAAvtB,IAAAixB,GAAA,EAAA,OACAtB,GAAAsB,IAAA,EAAA,WA8IAhd,GAAAof,cAAA,uBACApf,EAAAmf,iBAAA,wBAkGA,IAAAuH,IAAAniB,EACA,kJACA,SAAAnyC,GACA,MAAAzb,UAAAyb,EACA9c,KAAAkzD,aAEAlzD,KAAAqrD,OAAAvuC,IA8HAg2C,GAAA,GAAA,KAAA,GAAA,EAAA,WACA,MAAA9yD,MAAA0hE,WAAA,MAGA5O,EAAA,GAAA,KAAA,GAAA,EAAA,WACA,MAAA9yD,MAAAqxE,cAAA,MAOA3G,GAAA,OAAA,YACAA,GAAA,QAAA,YACAA,GAAA,OAAA,eACAA,GAAA,QAAA,eAIAvZ,EAAA,WAAA,MACAA,EAAA,cAAA,MAIAU,EAAA,WAAA,GACAA,EAAA,cAAA,GAKAgC,EAAA,IA/vFA,YAgwFAA,EAAA,IAhwFA,YAiwFAA,EAAA,KAzwFA,QAJA,QA8wFAA,EAAA,KA1wFA,QAJA,QA+wFAA,EAAA,OAvwFA,UANA,SA8wFAA,EAAA,OAxwFA,UANA,SA+wFAA,EAAA,QAxwFA,eAwwFAmc,IACAnc,EAAA,QAzwFA,eAywFAmc,IAEApb,IAAA,OAAA,QAAA,OAAA,SAAA,SAAAhK,EAAApW,EAAAl3C,EAAAy1D,GACAve,EAAAue,EAAAF,OAAA,EAAA,IAAAvE,EAAA1D,KAGAgK,IAAA,KAAA,MAAA,SAAAhK,EAAApW,EAAAl3C,EAAAy1D,GACAve,EAAAue,GAAArI,EAAA0lB,kBAAAxlB,KAqDAkI,EAAA,IAAA,EAAA,KAAA,WAIA3B,EAAA,UAAA,KAIAU,EAAA,UAAA,GAIAgC,EAAA,IA31FA,MA41FAa,GAAA,IAAA,SAAA9J,EAAAnuC,GACAA,EAAAwhD,IAAA,GAAA3P,EAAA1D,GAAA,KAWAkI,EAAA,KAAA,KAAA,GAAA,KAAA,QAIA3B,EAAA,OAAA,KAGAU,EAAA,OAAA,GAIAgC,EAAA,IA92FA,SA+2FAA,EAAA,KA/2FA,QAJA,QAo3FAA,EAAA,KAAA,SAAAI,EAAA5I,GAEA,MAAA4I,GACA5I,EAAAuE,yBAAAvE,EAAAwE,cACAxE,EAAAqE,iCAGAgF,IAAA,IAAA,MAAAwJ,IACAxJ,GAAA,KAAA,SAAA9J,EAAAnuC,GACAA,EAAAyhD,IAAA5P,EAAA1D,EAAAtgB,MAz3FA,SAy3FA,GAAA,KAKA,IAAAgnC,IAAApf,EAAA,QAAA,EAIAY,GAAA,OAAA,OAAA,GAAA,OAAA,aAIA3B,EAAA,YAAA,OAGAU,EAAA,YAAA,GAIAgC,EAAA,MA14FA,WA24FAA,EAAA,OAj5FA,SAk5FAa,IAAA,MAAA,QAAA,SAAA9J,EAAAnuC,EAAAnf,GACAA,EAAAgkE,WAAAhT,EAAA1D,KAcAkI,EAAA,KAAA,KAAA,GAAA,EAAA,UAIA3B,EAAA,SAAA,KAIAU,EAAA,SAAA,IAIAgC,EAAA,IA16FA,SA26FAA,EAAA,KA36FA,QAJA,QAg7FAa,IAAA,IAAA,MAAA2J,GAIA,IAAAkT,IAAArf,EAAA,WAAA,EAIAY,GAAA,KAAA,KAAA,GAAA,EAAA,UAIA3B,EAAA,SAAA,KAIAU,EAAA,SAAA,IAIAgC,EAAA,IAh8FA,SAi8FAA,EAAA,KAj8FA,QAJA,QAs8FAa,IAAA,IAAA,MAAA4J,GAIA,IAAAkT,IAAAtf,EAAA,WAAA,EAIAY,GAAA,IAAA,EAAA,EAAA,WACA,SAAA9yD,KAAAm0C,cAAA,OAGA2e,EAAA,GAAA,KAAA,GAAA,EAAA,WACA,SAAA9yD,KAAAm0C,cAAA,MAGA2e,EAAA,GAAA,MAAA,GAAA,EAAA,eACAA,EAAA,GAAA,OAAA,GAAA,EAAA,WACA,MAAA,IAAA9yD,KAAAm0C,gBAEA2e,EAAA,GAAA,QAAA,GAAA,EAAA,WACA,MAAA,KAAA9yD,KAAAm0C,gBAEA2e,EAAA,GAAA,SAAA,GAAA,EAAA,WACA,MAAA,KAAA9yD,KAAAm0C,gBAEA2e,EAAA,GAAA,UAAA,GAAA,EAAA,WACA,MAAA,KAAA9yD,KAAAm0C,gBAEA2e,EAAA,GAAA,WAAA,GAAA,EAAA,WACA,MAAA,KAAA9yD,KAAAm0C,gBAEA2e,EAAA,GAAA,YAAA,GAAA,EAAA,WACA,MAAA,KAAA9yD,KAAAm0C,gBAMAgd,EAAA,cAAA,MAIAU,EAAA,cAAA,IAIAgC,EAAA,IA9+FA,UARA,MAu/FAA,EAAA,KA/+FA,UAPA,QAu/FAA,EAAA,MAh/FA,UANA,QAw/FA,IAAAd,GACA,KAAAA,GAAA,OAAAA,GAAAh2D,QAAA,EAAAg2D,IAAA,IACAc,EAAAd,GAh/FA,MAu/FA,KAAAA,GAAA,IAAAA,GAAAh2D,QAAA,EAAAg2D,IAAA,IACA2B,GAAA3B,GAAAyY,GAIA,IAAAiG,IAAAvf,EAAA,gBAAA,EAIAY,GAAA,IAAA,EAAA,EAAA,YACAA,EAAA,KAAA,EAAA,EAAA,WAYA,IAAA4e,IAAA1jB,EAAAjuD,SAEA2xE,IAAAj7B,IAAAA,GACAi7B,GAAAxhB,SAAAgY,GACAwJ,GAAA1nE,MAAAA,GACA0nE,GAAA97B,KAAAA,GACA87B,GAAAnJ,MAAAA,GACAmJ,GAAA79B,OAAAA,GACA69B,GAAAxnB,KAAAA,GACAwnB,GAAAzH,QAAAA,GACAyH,GAAAvnB,GAAAA,GACAunB,GAAAxH,MAAAA,GACAwH,GAAAj7D,IAAA47C,EACAqf,GAAAlH,UAAAA,GACAkH,GAAAlK,QAAAA,GACAkK,GAAAjK,SAAAA,GACAiK,GAAAlJ,UAAAA,GACAkJ,GAAAhJ,OAAAA,GACAgJ,GAAA9I,cAAAA,GACA8I,GAAA7I,eAAAA,GACA6I,GAAAl8B,QAAA80B,GACAoH,GAAAN,KAAAA,GACAM,GAAArmB,OAAAA,GACAqmB,GAAAxe,WAAAA,GACAwe,GAAAvtE,IAAA+sE,GACAQ,GAAAxtE,IAAA+sE,GACAS,GAAAnH,aAAAA,GACAmH,GAAAliB,IAAA8C,EACAof,GAAAv8B,QAAAA,GACAu8B,GAAAtL,SAAAA,GACAsL,GAAA7K,QAAAA,GACA6K,GAAArH,SAAAA,GACAqH,GAAAnI,OAAAA,GACAmI,GAAApI,YAAAA,GACAoI,GAAAlI,QAAAA,GACAkI,GAAAx1B,OAAAA,GACAw1B,GAAA19D,SAAAA,GACA09D,GAAAtH,KAAAA,GACAsH,GAAAvmB,QAAAA,GACAumB,GAAAjH,aAAAA,GAGAiH,GAAA/8B,KAAA07B,GACAqB,GAAAha,WAAAC,GAGA+Z,GAAAhQ,SAAAkJ,GACA8G,GAAAL,YAAAvG,GAGA4G,GAAAh9B,QAAAg9B,GAAAtN,SAAAkH,GAGAoG,GAAAj9B,MAAAiiB,GACAgb,GAAA1c,YAAA2B,GAGA+a,GAAAl9B,KAAAk9B,GAAArN,MAAA7K,GACAkY,GAAA3G,QAAA2G,GAAAC,SAAAlY,GACAiY,GAAAxY,YAAA+R,GACAyG,GAAAE,eAAA5G,GAGA0G,GAAAjb,KAAA6a,GACAI,GAAAn9B,IAAAm9B,GAAApN,KAAAxJ,GACA4W,GAAAhZ,QAAAsC,GACA0W,GAAA19B,WAAAinB,GACAyW,GAAA3Y,UAAAwS,GAGAmG,GAAAp9B,KAAAo9B,GAAAtV,MAAA0U,GAGAY,GAAAr9B,OAAAq9B,GAAAnV,QAAAgV,GAGAG,GAAAt9B,OAAAs9B,GAAAnN,QAAAiN,GAGAE,GAAAv9B,YAAAu9B,GAAAlN,aAAAiN,GAGAC,GAAA3M,UAAAW,GACAgM,GAAAlmB,IAAA0a,GACAwL,GAAAnM,MAAAY,GACAuL,GAAA7F,UAAAxF,GACAqL,GAAAlL,qBAAAA,GACAkL,GAAAG,MAAApL,GACAiL,GAAA5K,QAAAA,GACA4K,GAAA3K,YAAAA,GACA2K,GAAA1K,MAAAA,GACA0K,GAAAjO,MAAAuD,GAGA0K,GAAAI,SAAArG,GACAiG,GAAAK,SAAArG,GAGAgG,GAAAM,MAAA/iB,EAAA,kDAAAqiB,IACAI,GAAAxb,OAAAjH,EAAA,mDAAAyH,IACAgb,GAAAvN,MAAAlV,EAAA,iDAAAohB,IACAqB,GAAAjI,KAAAxa,EAAA,2GAAAgX,IACAyL,GAAAO,aAAAhjB,EAAA,0GAAAyX,GAcA,IAAAwL,IAAAjiB,EAAAlwD,SAEAmyE,IAAAhiB,SAAAA,EACAgiB,GAAA5hB,eAAAA,EACA4hB,GAAAxhB,YAAAA,EACAwhB,GAAAthB,QAAAA,EACAshB,GAAA3O,SAAAuI,GACAoG,GAAAnI,WAAA+B,GACAoG,GAAAphB,aAAAA,EACAohB,GAAAhhB,WAAAA,EACAghB,GAAA1iB,IAAAA,EAGA0iB,GAAAhc,OAAAf,GACA+c,GAAAjc,YAAAV,GACA2c,GAAA1b,YAAAJ,GACA8b,GAAAjb,YAAAA,GACAib,GAAAtb,iBAAAA,GAGAsb,GAAA19B,KAAA4kB,GACA8Y,GAAAC,eAAA5Y,GACA2Y,GAAAE,eAAA9Y,GAGA4Y,GAAAxX,SAAAb,GACAqY,GAAA1X,YAAAP,GACAiY,GAAAzX,cAAAV,GACAmY,GAAAvY,cAAAgB,GAEAuX,GAAAhX,cAAAA,GACAgX,GAAA3W,mBAAAA,GACA2W,GAAAvW,iBAAAA,GAGAuW,GAAArP,KAAAnG,GACAwV,GAAA7lB,SAAAsQ,GA4FAW,GAAA,MACAyT,uBAAA,uBACAngB,QAAA,SAAAvC,GACA,GAAA//B,GAAA+/B,EAAA,EAKA,OAAAA,IAJA,IAAAC,EAAAD,EAAA,IAAA,IAAA,KACA,IAAA//B,EAAA,KACA,IAAAA,EAAA,KACA,IAAAA,EAAA,KAAA,SAMAo8B,EAAA0mB,KAAAniB,EAAA,wDAAAqO,IACA5S,EAAA2nB,SAAApjB,EAAA,gEAAAsO,GAEA,IAAAoP,IAAA1oE,KAAAyI,IA0JA4lE,GAAAjF,GAAA,MACAr2B,GAAAq2B,GAAA,KACAkF,GAAAlF,GAAA,KACAmF,GAAAnF,GAAA,KACAoF,GAAApF,GAAA,KACAqF,GAAArF,GAAA,KACAsF,GAAAtF,GAAA,KACAuF,GAAAvF,GAAA,KAaA7I,GAAAgJ,GAAA,gBACAjJ,GAAAiJ,GAAA,WACAjR,GAAAiR,GAAA,WACApR,GAAAoR,GAAA,SACAlJ,GAAAkJ,GAAA,QACAtX,GAAAsX,GAAA,UACArJ,GAAAqJ,GAAA,SAMAtqD,GAAAjf,KAAAif,MACA0qD,IACAC,GAAA,GACA1xE,EAAA,GACAghD,EAAA,GACAvyB,EAAA,GACA5kB,EAAA,GACA6xD,EAAA,IA6EAwW,GAAApqE,KAAAyI,IAwDAmmE,GAAA3O,GAAAnkE,SA0FA,OAxFA8yE,IAAAr9B,QAAAuuB,GACA8O,GAAAnmE,IAAAA,GACAmmE,GAAAp8B,IAAAo2B,GACAgG,GAAAzM,SAAA0G,GACA+F,GAAA1F,GAAAA,GACA0F,GAAAP,eAAAA,GACAO,GAAA77B,UAAAA,GACA67B,GAAAN,UAAAA,GACAM,GAAAL,QAAAA,GACAK,GAAAJ,OAAAA,GACAI,GAAAH,QAAAA,GACAG,GAAAF,SAAAA,GACAE,GAAAD,QAAAA,GACAC,GAAA1nB,QAAAiiB,GACAyF,GAAAlO,QAAAt9D,GACAwrE,GAAAp8D,IAAA82D,GACAsF,GAAArO,aAAAA,GACAqO,GAAAtO,QAAAA,GACAsO,GAAAtW,QAAAA,GACAsW,GAAAzW,MAAAA,GACAyW,GAAAvO,KAAAA,GACAuO,GAAAxO,MAAAA,GACAwO,GAAA3c,OAAAA,GACA2c,GAAA1O,MAAAA,GACA0O,GAAA7I,SAAAA,GACA6I,GAAAvJ,YAAA8E,GACAyE,GAAA7+D,SAAAo6D,GACAyE,GAAA32B,OAAAkyB,GACAyE,GAAAxnB,OAAAA,GACAwnB,GAAA3f,WAAAA,GAGA2f,GAAAC,YAAA7jB,EAAA,sFAAAmf,IACAyE,GAAAzB,KAAAA,GAMAte,EAAA,IAAA,EAAA,EAAA,QACAA,EAAA,IAAA,EAAA,EAAA,WAIAe,EAAA,IApoHA,YAqoHAA,EAAA,IAhoHA,wBAioHAa,GAAA,IAAA,SAAA9J,EAAAnuC,EAAAnf,GACAA,EAAAyvD,GAAA,GAAAx5C,MAAA,IAAAqP,WAAAgoC,EAAA,OAEA8J,GAAA,IAAA,SAAA9J,EAAAnuC,EAAAnf,GACAA,EAAAyvD,GAAA,GAAAx5C,MAAA+6C,EAAA1D,MAMAF,EAAAqoB,QAAA,SAxzIA,SAAAv5D,GACAmxC,GAAAnxC,GAyzIAwoD,IAEAtX,EAAAx9B,GAAAwkD,GACAhnB,EAAAxmD,IAAAA,GACAwmD,EAAAvmD,IAAAA,GACAumD,EAAAl3C,IAAAA,GACAk3C,EAAAc,IAAAJ,EACAV,EAAA0f,KAAAuB,GACAjhB,EAAAwL,OAAAoW,GACA5hB,EAAAM,OAAAA,EACAN,EAAAW,OAAAiS,GACA5S,EAAAymB,QAAA9jB,EACA3C,EAAAh5C,SAAAuyD,GACAvZ,EAAAyD,SAAAA,EACAzD,EAAAgQ,SAAA8R,GACA9hB,EAAAmhB,UAAAD,GACAlhB,EAAAwI,WAAAqK,GACA7S,EAAAka,WAAAA,GACAla,EAAAuL,YAAAsW,GACA7hB,EAAA8P,YAAAkS,GACAhiB,EAAA8S,aAAAA,GACA9S,EAAAmT,aAAAA,GACAnT,EAAAyS,QAAAW,GACApT,EAAA+P,cAAAgS,GACA/hB,EAAA8G,eAAAA,EACA9G,EAAAsoB,qBAAAlF,GACApjB,EAAAuoB,sBAAAjF,GACAtjB,EAAA2d,eAAAL,GACAtd,EAAA3qD,UAAA2xE,GAEAhnB,6BC52IA,GAAA19B,GAAAzwB,EAAA,QACA22E,EAAA32E,EAAA,QAEA42E,EAAAD,CACAC,GAAAnmD,GAAAA,EACAmmD,EAAAD,GAAAA,EAEAj2E,EAAAJ,QAAAs2E,8CCEA,QAAAC,GAAAC,EAAAvoE,GACA,GAAAtO,GAAAsO,GAAA,EACAwoE,EAAAC,CACA,OAAAD,GAAAD,EAAA72E,MAAA82E,EAAAD,EAAA72E,MACA82E,EAAAD,EAAA72E,MAAA82E,EAAAD,EAAA72E,MAAA,IACA82E,EAAAD,EAAA72E,MAAA82E,EAAAD,EAAA72E,MAAA,IACA82E,EAAAD,EAAA72E,MAAA82E,EAAAD,EAAA72E,MAAA,IACA82E,EAAAD,EAAA72E,MAAA82E,EAAAD,EAAA72E,MAAA,IACA82E,EAAAD,EAAA72E,MAAA82E,EAAAD,EAAA72E,MACA82E,EAAAD,EAAA72E,MAAA82E,EAAAD,EAAA72E,MACA82E,EAAAD,EAAA72E,MAAA82E,EAAAD,EAAA72E,MAdA,IAAA,GADA+2E,MACA/2E,EAAA,EAAAA,EAAA,MAAAA,EACA+2E,EAAA/2E,IAAAA,EAAA,KAAAwX,SAAA,IAAA6+C,OAAA,EAgBA51D,GAAAJ,QAAAu2E,wCClBA,GAAAI,GAEAC,EAAAhiE,EAAAgiE,QAAAhiE,EAAAiiE,QACA,IAAAD,GAAAA,EAAAE,gBAAA,CAEA,GAAAC,GAAA,GAAAC,YAAA,GACAL,GAAA,WAEA,MADAC,GAAAE,gBAAAC,GACAA,GAIA,IAAAJ,EAAA,CAKA,GAAAM,GAAA,GAAA52D,OAAA,GACAs2D,GAAA,WACA,IAAA,GAAAt3E,GAAAM,EAAA,EAAAA,EAAA,GAAAA,IACA,IAAA,EAAAA,KAAAN,EAAA,WAAA+H,KAAA8vE,UACAD,EAAAt3E,GAAAN,MAAA,EAAAM,IAAA,GAAA,GAGA,OAAAs3E,IAIA72E,EAAAJ,QAAA22E,6ICLA,QAAAxmD,GAAA9rB,EAAAmyE,EAAAvoE,GACA,GAAAtO,GAAA62E,GAAAvoE,GAAA,EACAwjB,EAAA+kD,KAEAnyE,GAAAA,KAEA,IAAA8yE,GAAA3yE,SAAAH,EAAA8yE,SAAA9yE,EAAA8yE,SAAAC,EAMAC,EAAA7yE,SAAAH,EAAAgzE,MAAAhzE,EAAAgzE,OAAA,GAAA3gE,OAAAy5C,UAIAmnB,EAAA9yE,SAAAH,EAAAizE,MAAAjzE,EAAAizE,MAAAC,EAAA,EAGAC,EAAAH,EAAAI,GAAAH,EAAAC,GAAA,GAcA,IAXAC,EAAA,GAAAhzE,SAAAH,EAAA8yE,WACAA,EAAAA,EAAA,EAAA,QAKAK,EAAA,GAAAH,EAAAI,IAAAjzE,SAAAH,EAAAizE,QACAA,EAAA,GAIAA,GAAA,IACA,KAAA,IAAAz3E,OAAA,kDAGA43E,GAAAJ,EACAE,EAAAD,EACAF,EAAAD,EAGAE,GAAA,WAGA,IAAA54C,IAAA,KAAA,UAAA44C,GAAAC,GAAA,UACA7lD,GAAA9xB,KAAA8+B,IAAA,GAAA,IACAhN,EAAA9xB,KAAA8+B,IAAA,GAAA,IACAhN,EAAA9xB,KAAA8+B,IAAA,EAAA,IACAhN,EAAA9xB,KAAA,IAAA8+B,CAGA,IAAAi5C,GAAAL,EAAA,WAAA,IAAA,SACA5lD,GAAA9xB,KAAA+3E,IAAA,EAAA,IACAjmD,EAAA9xB,KAAA,IAAA+3E,EAGAjmD,EAAA9xB,KAAA+3E,IAAA,GAAA,GAAA,GACAjmD,EAAA9xB,KAAA+3E,IAAA,GAAA,IAGAjmD,EAAA9xB,KAAAw3E,IAAA,EAAA,IAGA1lD,EAAA9xB,KAAA,IAAAw3E,CAIA,KAAA,GADAx0D,GAAAte,EAAAse,MAAAg1D,EACAv4E,EAAA,EAAAA,EAAA,IAAAA,EACAqyB,EAAA9xB,EAAAP,GAAAujB,EAAAvjB,EAGA,OAAAo3E,GAAAA,EAAAD,EAAA9kD,GAhGA,GAAAklD,GAAAj3E,EAAA,aACA62E,EAAA72E,EAAA,qBAQAk4E,EAAAjB,IAGAgB,GACA,EAAAC,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAIAR,EAAA,OAAAQ,EAAA,IAAA,EAAAA,EAAA,IAGAH,EAAA,EAAAF,EAAA,CA8EAn3E,GAAAJ,QAAAmwB,gECnGA,QAAAkmD,GAAAhyE,EAAAmyE,EAAAvoE,GACA,GAAAtO,GAAA62E,GAAAvoE,GAAA,CAEA,iBAAA,KACAuoE,EAAA,UAAAnyE,EAAA,GAAAgc,OAAA,IAAA,KACAhc,EAAA,MAEAA,EAAAA,KAEA,IAAA4yE,GAAA5yE,EAAA6yE,SAAA7yE,EAAAsyE,KAAAA,IAOA,IAJAM,EAAA,GAAA,GAAAA,EAAA,GAAA,GACAA,EAAA,GAAA,GAAAA,EAAA,GAAA,IAGAT,EACA,IAAA,GAAA1d,GAAA,EAAAA,EAAA,KAAAA,EACA0d,EAAA72E,EAAAm5D,GAAAme,EAAAne,EAIA,OAAA0d,IAAAD,EAAAU,GAzBA,GAAAN,GAAAj3E,EAAA,aACA62E,EAAA72E,EAAA,oBA2BAU,GAAAJ,QAAAq2E,gICFA,QAASwB,GAAiBv2E,EAAII,EAAOhB,EAAM8wD,EAAQoI,GAC/C,GAAMke,GAAaC,EAASC,IAAI,UAAY12E,EAC5Cw2E,GAAWnlB,KACPjxD,MAAOA,EACPhB,KAAMA,EACN8wD,OAAQA,EACRoI,KAAMA,IAEVke,EAAWG,GAAG,QAAS,SAASC,GAC5Br+D,QAAQ6M,IAAI,WACZpmB,OAAO63E,SAAW,iBAkE1B,QAASC,GAAW92E,EAAII,EAAOhB,EAAM8wD,EAAQoI,GACzC,GAAMke,GAAaC,EAASC,IAAI,UAAY12E,EAC5Cw2E,GAAWpzE,QACPhD,MAAOA,EACPhB,KAAMA,EACN8wD,OAAQA,EACRoI,KAAMA,IAEVke,EAAWG,GAAG,QAAS,SAASC,GAE5B53E,OAAO63E,SAAW,iBAI1B,QAASE,GAAW/2E,GAChB,GAAMw2E,GAAaC,EAASC,IAAI,UAAY12E,EAC5Cw2E,GAAWQ,SACXR,EAAWG,GAAG,QAAS,SAASC,GAU5B53E,OAAO63E,SAAW,iBAI1B,QAASI,GAAeC,GACpB,GAAMC,GAAan1D,SAASo1D,cAAc,YAC1CD,GAAW35D,iBAAiB,SAAU,SAAS5f,GAC3CA,EAAEy5E,gBACF,IAAMr3E,GAAKs3E,EAAAC,QAAK1oD,KACVzuB,EAAQ+2E,EAAW/2E,MAAMqF,MACzBrG,EAAO+3E,EAAW/3E,KAAKqG,MACvByqD,EAASinB,EAAWjnB,OAAOzqD,MAC3B6yD,EAAO6e,EAAW7e,KAAK7yD,KAC7B,IAAmB,WAAfyxE,EACAX,EAAiBv2E,EAAII,EAAOhB,EAAM8wD,EAAQoI,OACvC,CAGHwe,EAFe93E,OAAO63E,SAASW,OAAOllB,QAAQ,IAAK,IAAIuM,MAAM,KAC3C,GAAGA,MAAM,KAAK,GACjBz+D,EAAOhB,EAAM8wD,EAAQoI,MAKhD,QAASmf,KACL,GAAMC,GAAa11D,SAAS21D,iBAAiB,cAC7Cp/D,SAAQ6M,IAAIsyD,EACZ,KAAK,GAAIr5E,GAAI,EAAGA,EAAIq5E,EAAW94E,OAAQP,KAHd,SAGhBA,GACLq5E,EAAWr5E,GAAGmf,iBAAiB,QAAS,SAAS5f,GAC7C,GAAMoC,GAAK03E,EAAWr5E,GAAGiuC,aAAa,UACtC1uC,GAAEy5E,iBACiBZ,EAASC,IAAI,UAAY12E,GACjC22E,GAAG,QAAS,SAASC,GAC5B53E,OAAO63E,SAAW,mBAAqB72E,EAAK,UAAY42E,EAASj7B,MAAMv7C,MAAQ,SAAWw2E,EAASj7B,MAAMv8C,KAAO,WAAaw3E,EAASj7B,MAAMuU,OAAS,SAAW0mB,EAASj7B,MAAM2c,UANlLj6D,GAYb,QAASu5E,KACL,GAAMC,GAAa71D,SAAS21D,iBAAiB,cAC7Cp/D,SAAQ6M,IAAIyyD,EACZ,KAAK,GAAIx5E,GAAI,EAAGA,EAAIw5E,EAAWj5E,OAAQP,KAHd,SAGhBA,GACLw5E,EAAWx5E,GAAGmf,iBAAiB,QAAS,SAAS5f,GAC7C,GAAMoC,GAAK63E,EAAWx5E,GAAGiuC,aAAa,UACtC1uC,GAAEy5E,iBAMFN,EAAW/2E,MATV3B,GAcb,QAASy5E,GAAUC,GACf,GAAIC,GAAO,EACPC,EAAO,EACPC,EAAgB,EAChBC,EAAM,EACNC,EAAU,EACVC,EAAS,EACTtqE,EAAQ,EACNuqE,EAASt2D,SAASo1D,cAAc,cACtBp1D,UAASo1D,cAAc,oBACtBp1D,SAASo1D,cAAc,gBACxC,KAAK,GAAMz4D,KAAOo5D,GACd,GAAIA,EAAQr3D,eAAe/B,GAAM,CAC7B,GAAMvf,GAAO24E,EAAQp5D,GAAKvf,KACpB8wD,EAAS6nB,EAAQp5D,GAAKuxC,MAE5B,QADAniD,GAASyT,SAAS0uC,GACV9wD,GACJ,IAAK,OACD44E,GAAQx2D,SAAS0uC,EACjB,MACJ,KAAK,OACD+nB,GAAQz2D,SAAS0uC,EACjB,MACJ,KAAK,gBACDgoB,GAAiB12D,SAAS0uC,EAC1B,MACJ,KAAK,MACDioB,GAAO32D,SAAS0uC,EAChB,MACJ,KAAK,UACDkoB,GAAW52D,SAAS0uC,EACpB,MACJ,KAAK,SACDmoB,GAAU72D,SAAS0uC,IAMnC,GAAMxtD,IACFgC,QACI,OACA,OACA,gBACA,UACA,UAEJ/B,WACItC,MAAO,GACPqC,MAAOs1E,EAAMC,EAAMC,EAAeE,EAASC,GAC3CpzE,iBACI,0BACA,0BACA,0BACA,yBACA,2BAEJG,aACI,wBACA,uBACA,uBACA,sBACA,wBAEJC,YAAa,IAgBF,IAAAkzE,GAAAhB,QAAUe,GACzBl5E,KAAM,MACNsD,KAAMA,EACNK,SACI0H,QACI8pB,SAAS,MA7QzB,GAAAikD,GAAAp6E,EAAA,eACAqQ,EAAArQ,EAAA,mBAEIe,GACAs5E,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,cAAe,yBACfC,kBAAmB,eAGvBC,UAASC,cAAc55E,EACvB,IAAMs3E,GAAWqC,SAASrC,UAyQ1B,QAFaz3E,OAAO63E,SAASmC,UAGzB,IAAK,eACD/B,EAAe,SACf,MACJ,KAAK,gBA7LT,WACI,GAAM9+C,GAASn5B,OAAO63E,SAASW,OAAOllB,QAAQ,IAAK,IAAIuM,MAAM,IAC7DtmD,SAAQ6M,IAAI+S,EACZ,IAAMg/C,GAAan1D,SAASo1D,cAAc,YAC1CD,GAAW/2E,MAAMqF,MAAQwzE,UAAU9gD,EAAO,GAAG0mC,MAAM,KAAK,IACxDsY,EAAW/3E,KAAKqG,MAAQ0yB,EAAO,GAAG0mC,MAAM,KAAK,GAC7CsY,EAAWjnB,OAAOzqD,MAAQ0yB,EAAO,GAAG0mC,MAAM,KAAK,GAC/CsY,EAAW7e,KAAK7yD,MAAQ0yB,EAAO,GAAG0mC,MAAM,KAAK,MAwLzCoY,EAAe,SACf,MACJ,UArPJ,WACI,GAAI38B,GAAA,gVAaEk8B,EAAaC,EAASC,IAAI,WAC1BwC,EAAUl3D,SAASo1D,cAAc,oBACjC+B,EAAen3D,SAASo1D,cAAc,cAE5CZ,GAAW4C,KAAK,SAASC,KAAK,SAASzC,GACnC,GAAMl0E,GAAOk0E,EAASj7B,KACtBpjC,SAAQ6M,IAAI1iB,GACC,OAATA,GAEAy2E,EAAaG,UAAY,6BACzBJ,EAAQI,UAAY,0BAGpBxB,EAAUp1E,GACV0V,OAAOwK,KAAKlgB,GAAM2U,QAAQ,SAASsH,EAAKpb,GACpC+2C,GAAA,4DAIE53C,EAAKic,GAAKve,MAJZ,0BAKEsC,EAAKic,GAAKvf,KALZ,4BAMIsD,EAAKic,GAAKuxC,OANd,0BAOExtD,EAAKic,GAAK25C,KAPZ,8GASkE35C,EATlE,qGAUiEA,EAVjE,2FAgBJqD,SAASo1D,cAAc,eAAekC,UAAYh/B,EAClDm9B,IACAG","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core.js')();\n\nrequire('./core/core.helpers')(Chart);\nrequire('./platforms/platform.js')(Chart);\nrequire('./core/core.canvasHelpers')(Chart);\nrequire('./core/core.plugin.js')(Chart);\nrequire('./core/core.element')(Chart);\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.layoutService')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.ticks.js')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.title')(Chart);\nrequire('./core/core.legend')(Chart);\nrequire('./core/core.interaction')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./elements/element.arc')(Chart);\nrequire('./elements/element.line')(Chart);\nrequire('./elements/element.point')(Chart);\nrequire('./elements/element.rectangle')(Chart);\n\nrequire('./scales/scale.linearbase.js')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\nwindow.Chart = module.exports = Chart;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear', // scatter should not use a category axis\n\t\t\t\tposition: 'bottom',\n\t\t\t\tid: 'x-axis-1' // need an ID so datasets can reference the scale\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'left',\n\t\t\t\tid: 'y-axis-1'\n\t\t\t}]\n\t\t},\n\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem) {\n\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Register the default config for this type\n\tChart.defaults.scatter = defaultConfig;\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.bar = {\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'category',\n\n\t\t\t\t// Specific to Bar Controller\n\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\tbarPercentage: 0.9,\n\n\t\t\t\t// grid line settings\n\t\t\t\tgridLines: {\n\t\t\t\t\toffsetGridLines: true\n\t\t\t\t}\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear'\n\t\t\t}]\n\t\t}\n\t};\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Rectangle,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\n\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tmeta.stack = dataset.stack;\n\t\t\t// Use this to indicate that this is a bar dataset.\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\t// Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\n\t\tgetStackCount: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\n\t\t\tvar stacks = [];\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) &&\n\t\t\t\t\t(yScale.options.stacked === false ||\n\t\t\t\t\t(yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn stacks.length;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\n\t\t\t\tme.updateElement(rectangle, index, reset);\n\t\t\t}, me);\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar scaleBase = yScale.getBasePixel();\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\trectangle._xScale = xScale;\n\t\t\trectangle._yScale = yScale;\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\tvar ruler = me.getRuler(index); // The index argument for compatible\n\t\t\trectangle._model = {\n\t\t\t\tx: me.calculateBarX(index, me.index, ruler),\n\t\t\t\ty: reset ? scaleBase : me.calculateBarY(index, me.index),\n\n\t\t\t\t// Tooltip\n\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\tdatasetLabel: dataset.label,\n\n\t\t\t\t// Appearance\n\t\t\t\thorizontal: false,\n\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\twidth: me.calculateBarWidth(ruler),\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t};\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar base = yScale.getBaseValue();\n\t\t\tvar original = base;\n\n\t\t\tif ((yScale.options.stacked === true) ||\n\t\t\t\t(yScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === currentDsMeta.stack) {\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, original) : Math.max(currentVal, original);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn yScale.getPixelForValue(base);\n\t\t\t}\n\n\t\t\treturn yScale.getBasePixel();\n\t\t},\n\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar stackCount = me.getStackCount();\n\n\t\t\tvar tickWidth = xScale.width / xScale.ticks.length;\r\n\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\n\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\n\t\t\tvar fullBarWidth = categoryWidth / stackCount;\n\n\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\n\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\n\n\t\t\treturn {\n\t\t\t\tstackCount: stackCount,\n\t\t\t\ttickWidth: tickWidth,\n\t\t\t\tcategoryWidth: categoryWidth,\n\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\tfullBarWidth: fullBarWidth,\n\t\t\t\tbarWidth: barWidth,\n\t\t\t\tbarSpacing: barSpacing\n\t\t\t};\n\t\t},\n\n\t\tcalculateBarWidth: function(ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tif (xScale.options.barThickness) {\n\t\t\t\treturn xScale.options.barThickness;\n\t\t\t}\n\t\t\treturn ruler.barWidth;\r\n\t\t},\n\n\t\t// Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\n\t\tgetStackIndex: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar dsMeta, j;\n\t\t\tvar stacks = [meta.stack];\n\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\n\t\t\t\tdsMeta = this.chart.getDatasetMeta(j);\n\t\t\t\tif (dsMeta.bar && this.chart.isDatasetVisible(j) &&\n\t\t\t\t\t(yScale.options.stacked === false ||\n\t\t\t\t\t(yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks.length - 1;\n\t\t},\n\n\t\tcalculateBarX: function(index, datasetIndex, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex);\n\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\tleftTick -= me.chart.isCombo ? (ruler.tickWidth / 2) : 0;\n\n\t\t\treturn leftTick +\n\t\t\t\t(ruler.barWidth / 2) +\n\t\t\t\truler.categorySpacing +\n\t\t\t\t(ruler.barWidth * stackIndex) +\n\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t(ruler.barSpacing * stackIndex);\n\t\t},\n\n\t\tcalculateBarY: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar value = Number(me.getDataset().data[index]);\n\n\t\t\tif (yScale.options.stacked ||\n\t\t\t\t(yScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar base = yScale.getBaseValue();\n\t\t\t\tvar sumPos = base,\n\t\t\t\t\tsumNeg = base;\r\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && me.chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === dsMeta.stack) {\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar metaData = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar i, len;\n\n\t\t\tChart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea);\n\t\t\tfor (i = 0, len = metaData.length; i < len; ++i) {\n\t\t\t\tvar d = dataset.data[i];\n\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\n\t\t\t\t\tmetaData[i].transition(easingDecimal).draw();\n\t\t\t\t}\n\t\t\t}\n\t\t\tChart.canvasHelpers.unclipArea(me.chart.chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\n\t});\n\n\n\t// including horizontalBar in the bar file, instead of a file of its own\n\t// it extends bar (like pie extends doughnut)\n\tChart.defaults.horizontalBar = {\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'bottom'\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\tposition: 'left',\n\t\t\t\ttype: 'category',\n\n\t\t\t\t// Specific to Horizontal Bar Controller\n\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\tbarPercentage: 0.9,\n\n\t\t\t\t// grid line settings\n\t\t\t\tgridLines: {\n\t\t\t\t\toffsetGridLines: true\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\t\telements: {\n\t\t\trectangle: {\n\t\t\t\tborderSkipped: 'left'\n\t\t\t}\n\t\t},\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t\t// Pick first xLabel for now\n\t\t\t\t\tvar title = '';\n\n\t\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\n\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\n\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\n\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn title;\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\n\t\t// Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\n\t\tgetStackCount: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\n\t\t\tvar stacks = [];\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) &&\n\t\t\t\t\t(xScale.options.stacked === false ||\n\t\t\t\t\t(xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn stacks.length;\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar scaleBase = xScale.getBasePixel();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = xScale;\n\t\t\trectangle._yScale = yScale;\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\tvar ruler = me.getRuler(index); // The index argument for compatible\n\t\t\trectangle._model = {\n\t\t\t\tx: reset ? scaleBase : me.calculateBarX(index, me.index),\n\t\t\t\ty: me.calculateBarY(index, me.index, ruler),\n\n\t\t\t\t// Tooltip\n\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\tdatasetLabel: dataset.label,\n\n\t\t\t\t// Appearance\n\t\t\t\thorizontal: true,\n\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\theight: me.calculateBarHeight(ruler),\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t};\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar base = xScale.getBaseValue();\n\t\t\tvar originalBase = base;\n\n\t\t\tif (xScale.options.stacked ||\n\t\t\t\t(xScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.xAxisID === xScale.id && chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === currentDsMeta.stack) {\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, originalBase) : Math.max(currentVal, originalBase);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn xScale.getPixelForValue(base);\n\t\t\t}\n\n\t\t\treturn xScale.getBasePixel();\n\t\t},\n\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar stackCount = me.getStackCount();\n\n\t\t\tvar tickHeight = yScale.height / yScale.ticks.length;\n\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\n\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\n\t\t\tvar fullBarHeight = categoryHeight / stackCount;\n\n\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\n\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\n\n\t\t\treturn {\n\t\t\t\tstackCount: stackCount,\n\t\t\t\ttickHeight: tickHeight,\n\t\t\t\tcategoryHeight: categoryHeight,\n\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\tfullBarHeight: fullBarHeight,\n\t\t\t\tbarHeight: barHeight,\n\t\t\t\tbarSpacing: barSpacing\n\t\t\t};\n\t\t},\n\n\t\tcalculateBarHeight: function(ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tif (yScale.options.barThickness) {\n\t\t\t\treturn yScale.options.barThickness;\n\t\t\t}\n\t\t\treturn ruler.barHeight;\n\t\t},\n\n\t\t// Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\n\t\tgetStackIndex: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar dsMeta, j;\n\t\t\tvar stacks = [meta.stack];\n\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\n\t\t\t\tdsMeta = this.chart.getDatasetMeta(j);\n\t\t\t\tif (dsMeta.bar && this.chart.isDatasetVisible(j) &&\n\t\t\t\t\t(xScale.options.stacked === false ||\n\t\t\t\t\t(xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks.length - 1;\r\n\t\t},\n\n\t\tcalculateBarX: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar value = Number(me.getDataset().data[index]);\n\n\t\t\tif (xScale.options.stacked ||\n\t\t\t\t(xScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar base = xScale.getBaseValue();\n\t\t\t\tvar sumPos = base,\n\t\t\t\t\tsumNeg = base;\r\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === dsMeta.stack) {\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value < 0) {\n\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\n\t\t\t\t}\n\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\n\t\t\t}\n\n\t\t\treturn xScale.getPixelForValue(value);\n\t\t},\n\n\t\tcalculateBarY: function(index, datasetIndex, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex);\n\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\ttopTick -= me.chart.isCombo ? (ruler.tickHeight / 2) : 0;\n\n\t\t\treturn topTick +\n\t\t\t\t(ruler.barHeight / 2) +\n\t\t\t\truler.categorySpacing +\n\t\t\t\t(ruler.barHeight * stackIndex) +\n\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t(ruler.barSpacing * stackIndex);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.bubble = {\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\t\tposition: 'bottom',\n\t\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'left',\n\t\t\t\tid: 'y-axis-0'\n\t\t\t}]\n\t\t},\n\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\t\t\t\t\treturn datasetLabel + ': (' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar dsIndex = me.index;\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_xScale: xScale,\n\t\t\t\t_yScale: yScale,\n\t\t\t\t_datasetIndex: dsIndex,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex, me.chart.isCombo),\n\t\t\t\t\ty: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),\n\t\t\t\t\t// Appearance\n\t\t\t\t\tradius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trick to reset the styles of the point\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);\n\n\t\t\tvar model = point._model;\n\t\t\tmodel.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\tgetRadius: function(value) {\n\t\t\treturn value.r || this.chart.options.elements.point.radius;\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tChart.DatasetController.prototype.setHoverStyle.call(me, point);\n\n\t\t\t// Radius\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);\n\n\t\t\tvar dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : me.getRadius(dataVal);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tdefaults = Chart.defaults;\n\n\tdefaults.doughnut = {\n\t\tanimation: {\n\t\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\t\tanimateRotate: true,\n\t\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\t\tanimateScale: false\n\t\t},\n\t\taspectRatio: 1,\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\t\tlegendCallback: function(chart) {\n\t\t\tvar text = [];\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar labels = data.labels;\n\n\t\t\tif (datasets.length) {\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\t\tif (labels[i]) {\n\t\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext.push('</ul>');\n\t\t\treturn text.join('');\n\t\t},\n\t\tlegend: {\n\t\t\tlabels: {\n\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonClick: function(e, legendItem) {\n\t\t\t\tvar index = legendItem.index;\n\t\t\t\tvar chart = this.chart;\n\t\t\t\tvar i, ilen, meta;\n\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\t// toggle visibility of index if exists\n\t\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tchart.update();\n\t\t\t}\n\t\t},\n\n\t\t// The percentage of the chart that we cut out of the middle.\n\t\tcutoutPercentage: 50,\n\n\t\t// The rotation of the chart, where the first data arc begins.\n\t\trotation: Math.PI * -0.5,\n\n\t\t// The total circumference of the chart.\n\t\tcircumference: Math.PI * 2.0,\n\n\t\t// Need to override these to give a nice default\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataLabel += value;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn dataLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tdefaults.pie = helpers.clone(defaults.doughnut);\n\thelpers.extend(defaults.pie, {\n\t\tcutoutPercentage: 0\n\t});\n\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart,\n\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\topts = chart.options,\n\t\t\t\tarcOpts = opts.elements.arc,\n\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\n\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\n\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\n\t\t\t\toffset = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0\n\t\t\t\t},\n\t\t\t\tmeta = me.getMeta(),\n\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\n\t\t\t\tcircumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart,\n\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\topts = chart.options,\n\t\t\t\tanimationOpts = opts.animation,\n\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\n\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\n\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\n\t\t\t\tendAngle = opts.rotation, // non reset case handled later\n\t\t\t\tdataset = me.getDataset(),\n\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\n\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,\n\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,\n\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (value / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(elements) {\n\t\t\tvar max = 0,\n\t\t\t\tindex = this.index,\n\t\t\t\tlength = elements.length,\n\t\t\t\tborderWidth,\n\t\t\t\thoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = elements[i]._model ? elements[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = elements[i]._chart ? elements[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.line = {\n\t\tshowLines: true,\n\t\tspanGaps: false,\n\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'category',\n\t\t\t\tid: 'x-axis-0'\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tid: 'y-axis-0'\n\t\t\t}]\n\t\t}\n\t};\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.getValueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: Chart.elements.Line,\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.getValueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.getValueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t\t// Scale\n\t\t\t\t\tscaleTop: scale.top,\n\t\t\t\t\tscaleBottom: scale.bottom,\n\t\t\t\t\tscaleZero: scale.getBasePixel()\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\t\t\tvar labels = me.chart.data.labels || [];\n\t\t\tvar includeOffset = (labels.length === 1 || dataset.data.length === 1) || me.chart.isCombo;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex, includeOffset);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar i, ilen;\n\n\t\t\t// Transition Point Locations\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].transition(easingDecimal);\n\t\t\t}\n\n\t\t\tChart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea);\n\t\t\t// Transition and Draw the line\n\t\t\tif (lineEnabled(me.getDataset(), me.chart.options)) {\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\n\t\t\t}\n\t\t\tChart.canvasHelpers.unclipArea(me.chart.chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].draw(me.chart.chartArea);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.polarArea = {\n\n\t\tscale: {\n\t\t\ttype: 'radialLinear',\n\t\t\tlineArc: true, // so that lines are circular\n\t\t\tticks: {\n\t\t\t\tbeginAtZero: true\n\t\t\t}\n\t\t},\n\n\t\t// Boolean - Whether to animate the rotation of the chart\n\t\tanimation: {\n\t\t\tanimateRotate: true,\n\t\t\tanimateScale: true\n\t\t},\n\n\t\tstartAngle: -0.5 * Math.PI,\n\t\taspectRatio: 1,\n\t\tlegendCallback: function(chart) {\n\t\t\tvar text = [];\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar labels = data.labels;\n\n\t\t\tif (datasets.length) {\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\t\tif (labels[i]) {\n\t\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext.push('</ul>');\n\t\t\treturn text.join('');\n\t\t},\n\t\tlegend: {\n\t\t\tlabels: {\n\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonClick: function(e, legendItem) {\n\t\t\t\tvar index = legendItem.index;\n\t\t\t\tvar chart = this.chart;\n\t\t\t\tvar i, ilen, meta;\n\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\n\t\t\t\tchart.update();\n\t\t\t}\n\t\t},\n\n\t\t// Need to override these to give a nice default\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.radar = {\n\t\taspectRatio: 1,\n\t\tscale: {\n\t\t\ttype: 'radialLinear'\n\t\t},\n\t\telements: {\n\t\t\tline: {\n\t\t\t\ttension: 0 // no bezier in radar\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: Chart.elements.Line,\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\n\t\t\t\t\t// Scale\n\t\t\t\t\tscaleTop: scale.top,\n\t\t\t\t\tscaleBottom: scale.bottom,\n\t\t\t\t\tscaleZero: scale.getBasePosition()\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar easingDecimal = ease || 1;\n\n\t\t\t// Transition Point Locations\n\t\t\thelpers.each(meta.data, function(point) {\n\t\t\t\tpoint.transition(easingDecimal);\n\t\t\t});\n\n\t\t\t// Transition and Draw the line\n\t\t\tmeta.dataset.transition(easingDecimal).draw();\n\n\t\t\t// Draw the points\n\t\t\thelpers.each(meta.data, function(point) {\n\t\t\t\tpoint.draw();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.radius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n","/* global window: false */\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.animation = {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t};\n\n\tChart.Animation = Chart.Element.extend({\n\t\tcurrentStep: null, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @function Chart.animationService.addAnimation\n\t\t * @param chartInstance {ChartController} the chart to animate\n\t\t * @param animationObject {IAnimation} the animation that we will animate\n\t\t * @param duration {Number} length of animation in ms\n\t\t * @param lazy {Boolean} if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chartInstance, animationObject, duration, lazy) {\n\t\t\tvar me = this;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchartInstance.animating = true;\n\t\t\t}\n\n\t\t\tfor (var index = 0; index < me.animations.length; ++index) {\n\t\t\t\tif (me.animations[index].chartInstance === chartInstance) {\n\t\t\t\t\t// replacing an in progress animation\n\t\t\t\t\tme.animations[index].animationObject = animationObject;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.animations.push({\n\t\t\t\tchartInstance: chartInstance,\n\t\t\t\tanimationObject: animationObject\n\t\t\t});\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (me.animations.length === 1) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\t\t// Cancel the animation for a given chart instance\n\t\tcancelAnimation: function(chartInstance) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animationWrapper) {\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchartInstance.animating = false;\n\t\t\t}\n\t\t},\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tvar i = 0;\n\t\t\twhile (i < me.animations.length) {\n\t\t\t\tif (me.animations[i].animationObject.currentStep === null) {\n\t\t\t\t\tme.animations[i].animationObject.currentStep = 0;\n\t\t\t\t}\n\n\t\t\t\tme.animations[i].animationObject.currentStep += 1 + framesToDrop;\n\n\t\t\t\tif (me.animations[i].animationObject.currentStep > me.animations[i].animationObject.numSteps) {\n\t\t\t\t\tme.animations[i].animationObject.currentStep = me.animations[i].animationObject.numSteps;\n\t\t\t\t}\n\n\t\t\t\tme.animations[i].animationObject.render(me.animations[i].chartInstance, me.animations[i].animationObject);\n\t\t\t\tif (me.animations[i].animationObject.onAnimationProgress && me.animations[i].animationObject.onAnimationProgress.call) {\n\t\t\t\t\tme.animations[i].animationObject.onAnimationProgress.call(me.animations[i].chartInstance, me.animations[i]);\n\t\t\t\t}\n\n\t\t\t\tif (me.animations[i].animationObject.currentStep === me.animations[i].animationObject.numSteps) {\n\t\t\t\t\tif (me.animations[i].animationObject.onAnimationComplete && me.animations[i].animationObject.onAnimationComplete.call) {\n\t\t\t\t\t\tme.animations[i].animationObject.onAnimationComplete.call(me.animations[i].chartInstance, me.animations[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// executed the last frame. Remove the animation.\n\t\t\t\t\tme.animations[i].chartInstance.animating = false;\n\n\t\t\t\t\tme.animations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar endTime = Date.now();\n\t\t\tvar dropFrames = (endTime - startTime) / me.frameDuration;\n\n\t\t\tme.dropFrames += dropFrames;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t}\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\t// Global Chart canvas helpers object for drawing items to canvas\n\tvar helpers = Chart.canvasHelpers = {};\n\n\thelpers.drawPoint = function(ctx, pointStyle, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (typeof pointStyle === 'object') {\n\t\t\ttype = pointStyle.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (pointStyle) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tChart.helpers.drawRoundedRectangle(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t};\n\n\thelpers.clipArea = function(ctx, clipArea) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(clipArea.left, clipArea.top, clipArea.right - clipArea.left, clipArea.bottom - clipArea.top);\n\t\tctx.clip();\n\t};\n\n\thelpers.unclipArea = function(ctx) {\n\t\tctx.restore();\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar plugins = Chart.plugins;\n\tvar platform = Chart.platform;\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart.Controller} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\t// Update Scale(s) with options\n\t\tif (newOptions.scale) {\n\t\t\tchart.scale.options = newOptions.scale;\n\t\t} else if (newOptions.scales) {\n\t\t\tnewOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function(scaleOptions) {\n\t\t\t\tchart.scales[scaleOptions.id].options = scaleOptions;\n\t\t\t});\n\t\t}\n\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t}\n\n\t/**\n\t * @class Chart.Controller\n\t * The main controller of a chart.\n\t */\n\tChart.Controller = function(item, config, instance) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tinstance.ctx = context;\n\t\tinstance.canvas = canvas;\n\t\tinstance.config = config;\n\t\tinstance.width = width;\n\t\tinstance.height = height;\n\t\tinstance.aspectRatio = height? width / height : null;\n\n\t\tme.id = helpers.uid();\n\t\tme.chart = instance;\n\t\tme.config = config;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn me;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\n\t\treturn me;\n\t};\n\n\thelpers.extend(Chart.Controller.prototype, /** @lends Chart.Controller.prototype */ {\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me.chart);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.clear(this.chart);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = chart.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && chart.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\t\t\tvar newWidth = Math.floor(helpers.getMaximumWidth(canvas));\n\t\t\tvar newHeight = Math.floor(aspectRatio? newWidth / aspectRatio : helpers.getMaximumHeight(canvas));\n\n\t\t\tif (chart.width === newWidth && chart.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = chart.width = newWidth;\n\t\t\tcanvas.height = chart.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(chart);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales = {};\n\t\t\tvar items = [];\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({options: options.scale, dtype: 'radialLinear', isDefault: true});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\n\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar scale = new scaleClass({\n\t\t\t\t\tid: scaleOptions.id,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.chart.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\n\t\t\t\tscales[scale.id] = scale;\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tif (!meta.type) {\n\t\t\t\t\tmeta.type = dataset.type || me.config.type;\n\t\t\t\t}\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t} else {\n\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\tif (types.length > 1) {\n\t\t\t\tfor (var i = 1; i < types.length; i++) {\n\t\t\t\t\tif (types[i] !== types[i - 1]) {\n\t\t\t\t\t\tme.isCombo = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(animationDuration, lazy) {\n\t\t\tvar me = this;\n\n\t\t\tupdateConfig(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tlazy: lazy,\n\t\t\t\t\tduration: animationDuration\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(animationDuration, lazy);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.getDatasetMeta(i).controller.update();\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\trender: function(duration, lazy) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function() {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\tvar callback = animationOptions && animationOptions.onComplete;\n\t\t\t\tif (callback && callback.call) {\n\t\t\t\t\tcallback.call(me);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation();\n\t\t\t\tanimation.numSteps = (duration || animationOptions.duration) / 16.66; // 60 fps\n\t\t\t\tanimation.easing = animationOptions.easing;\n\n\t\t\t\t// render function\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n\t\t\t\t};\n\n\t\t\t\t// user events\n\t\t\t\tanimation.onAnimationProgress = animationOptions.onProgress;\n\t\t\t\tanimation.onAnimationComplete = onComplete;\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\t\t\t\tonComplete();\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (easingValue === undefined || easingValue === null) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\n\t\t\t// Finally draw the tooltip\n\t\t\tme.tooltip.transition(easingValue).draw();\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.draw(easingValue);\n\t\t\t\t}\n\t\t\t}, me, true);\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Chart.Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Chart.Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.chart.canvas;\n\t\t\tvar meta, i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tmeta = me.getDatasetMeta(i);\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.destroy();\n\t\t\t\t\tmeta.controller = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.clear(me.chart);\n\t\t\t\tplatform.releaseContext(me.chart.ctx);\n\t\t\t\tme.chart.canvas = null;\n\t\t\t\tme.chart.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_chartInstance: me,\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t\tme.tooltip.initialize();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Responsiveness is currently based on the use of an iframe, however this method causes\n\t\t\t// performance issues and could be troublesome when used with ad blockers. So make sure\n\t\t\t// that the user is still able to create a chart without iframe when responsive is false.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\tchanged |= tooltip && tooltip.handleEvent(e);\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest.duration, bufferedRequest.lazy);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// On Hover hook\n\t\t\tif (hoverOptions.onHover) {\n\t\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\t\thoverOptions.onHover.call(me, e.native, me.active);\n\t\t\t}\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i=0, ilen=data.length; i<ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\tdraw: function(ease) {\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar i, len;\n\t\t\tvar metaData = this.getMeta().data;\n\t\t\tfor (i = 0, len = metaData.length; i < len; ++i) {\n\t\t\t\tmetaData[i].transition(easingDecimal).draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\n\t\t\t\tindex = element._index,\n\t\t\t\tcustom = element.custom || {},\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\n\t\t\t\tmodel = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\n\t\t\t\tindex = element._index,\n\t\t\t\tcustom = element.custom || {},\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\n\t\t\t\tgetHoverColor = helpers.getHoverColor,\n\t\t\t\tmodel = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i=0; i<count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length-1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.elements = {};\n\n\tChart.Element = function(configuration) {\n\t\thelpers.extend(this, configuration);\n\t\tthis.initialize.apply(this, arguments);\n\t};\n\n\thelpers.extend(Chart.Element.prototype, {\n\n\t\tinitialize: function() {\n\t\t\tthis.hidden = false;\n\t\t},\n\n\t\tpivot: function() {\n\t\t\tvar me = this;\n\t\t\tif (!me._view) {\n\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t}\n\t\t\tme._start = helpers.clone(me._view);\n\t\t\treturn me;\n\t\t},\n\n\t\ttransition: function(ease) {\n\t\t\tvar me = this;\n\n\t\t\tif (!me._view) {\n\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t}\n\n\t\t\t// No animation -> No Transition\n\t\t\tif (ease === 1) {\n\t\t\t\tme._view = me._model;\n\t\t\t\tme._start = null;\n\t\t\t\treturn me;\n\t\t\t}\n\n\t\t\tif (!me._start) {\n\t\t\t\tme.pivot();\n\t\t\t}\n\n\t\t\thelpers.each(me._model, function(value, key) {\n\n\t\t\t\tif (key[0] === '_') {\n\t\t\t\t\t// Only non-underscored properties\n\t\t\t\t// Init if doesn't exist\n\t\t\t\t} else if (!me._view.hasOwnProperty(key)) {\n\t\t\t\t\tif (typeof value === 'number' && !isNaN(me._view[key])) {\n\t\t\t\t\t\tme._view[key] = value * ease;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t}\n\t\t\t\t// No unnecessary computations\n\t\t\t\t} else if (value === me._view[key]) {\n\t\t\t\t\t// It's the same! Woohoo!\n\t\t\t\t// Color transitions if possible\n\t\t\t\t} else if (typeof value === 'string') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar color = helpers.color(me._model[key]).mix(helpers.color(me._start[key]), ease);\n\t\t\t\t\t\tme._view[key] = color.rgbString();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t}\n\t\t\t\t// Number transitions\n\t\t\t\t} else if (typeof value === 'number') {\n\t\t\t\t\tvar startVal = me._start[key] !== undefined && isNaN(me._start[key]) === false ? me._start[key] : 0;\n\t\t\t\t\tme._view[key] = ((me._model[key] - startVal) * ease) + startVal;\n\t\t\t\t// Everything else\n\t\t\t\t} else {\n\t\t\t\t\tme._view[key] = value;\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn me;\n\t\t},\n\n\t\ttooltipPosition: function() {\n\t\t\treturn {\n\t\t\t\tx: this._model.x,\n\t\t\t\ty: this._model.y\n\t\t\t};\n\t\t},\n\n\t\thasValue: function() {\n\t\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t\t}\n\t});\n\n\tChart.Element.extend = helpers.inherits;\n\n};\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nmodule.exports = function(Chart) {\n\t// Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t// -- Basic js utility methods\n\thelpers.each = function(loopable, callback, self, reverse) {\n\t\t// Check to see if null or undefined firstly.\n\t\tvar i, len;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tcallback.call(self, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcallback.call(self, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof loopable === 'object') {\n\t\t\tvar keys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t};\n\thelpers.clone = function(obj) {\n\t\tvar objClone = {};\n\t\thelpers.each(obj, function(value, key) {\n\t\t\tif (helpers.isArray(value)) {\n\t\t\t\tobjClone[key] = value.slice(0);\n\t\t\t} else if (typeof value === 'object' && value !== null) {\n\t\t\t\tobjClone[key] = helpers.clone(value);\n\t\t\t} else {\n\t\t\t\tobjClone[key] = value;\n\t\t\t}\n\t\t});\n\t\treturn objClone;\n\t};\n\thelpers.extend = function(base) {\n\t\tvar setFn = function(value, key) {\n\t\t\tbase[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; i++) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn base;\n\t};\n\t// Need a special merge function to chart configs since they are now grouped\n\thelpers.configMerge = function(_base) {\n\t\tvar base = helpers.clone(_base);\n\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\n\t\t\thelpers.each(extension, function(value, key) {\n\t\t\t\tvar baseHasProperty = base.hasOwnProperty(key);\n\t\t\t\tvar baseVal = baseHasProperty ? base[key] : {};\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// Scale config merging is complex. Add our own function here for that\n\t\t\t\t\tbase[key] = helpers.scaleMerge(baseVal, value);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\n\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, Chart.scaleService.getScaleDefaults(value.type), value);\n\t\t\t\t} else if (baseHasProperty\n\t\t\t\t\t\t&& typeof baseVal === 'object'\n\t\t\t\t\t\t&& !helpers.isArray(baseVal)\n\t\t\t\t\t\t&& baseVal !== null\n\t\t\t\t\t\t&& typeof value === 'object'\n\t\t\t\t\t\t&& !helpers.isArray(value)) {\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\n\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, value);\n\t\t\t\t} else {\n\t\t\t\t\t// can just overwrite the value in this case\n\t\t\t\t\tbase[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn base;\n\t};\n\thelpers.scaleMerge = function(_base, extension) {\n\t\tvar base = helpers.clone(_base);\n\n\t\thelpers.each(extension, function(value, key) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t// These properties are arrays of items\n\t\t\t\tif (base.hasOwnProperty(key)) {\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\n\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\n\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\n\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\n\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Type is the same\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tbase[key] = [];\n\t\t\t\t\thelpers.each(value, function(valueObj) {\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\n\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === 'object' && base[key] !== null && typeof value === 'object') {\n\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\n\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\n\n\t\t\t} else {\n\t\t\t\t// can just overwrite the value in this case\n\t\t\t\tbase[key] = value;\n\t\t\t}\n\t\t});\n\n\t\treturn base;\n\t};\n\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\tif (helpers.isArray(value)) {\n\t\t\treturn index < value.length ? value[index] : defaultValue;\n\t\t}\n\n\t\treturn value;\n\t};\n\thelpers.getValueOrDefault = function(value, defaultValue) {\n\t\treturn value === undefined ? defaultValue : value;\n\t};\n\thelpers.indexOf = Array.prototype.indexOf?\n\t\tfunction(array, item) {\n\t\t\treturn array.indexOf(item);\n\t\t}:\n\t\tfunction(array, item) {\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (array[i] === item) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (startIndex === undefined || startIndex === null) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (startIndex === undefined || startIndex === null) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.inherits = function(extensions) {\n\t\t// Basic javascript inheritance based on the model created in Backbone.js\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\n\t\treturn ChartElement;\n\t};\n\thelpers.noop = function() {};\n\thelpers.uid = (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}());\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\treturn Math.log(x) / Math.LN10;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\n\t\t\tcurrent = middlePoint,\n\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Easing functions adapted from Robert Penner's easing equations\n\t// http://www.robertpenner.com/easing/\n\tvar easingEffects = helpers.easingEffects = {\n\t\tlinear: function(t) {\n\t\t\treturn t;\n\t\t},\n\t\teaseInQuad: function(t) {\n\t\t\treturn t * t;\n\t\t},\n\t\teaseOutQuad: function(t) {\n\t\t\treturn -1 * t * (t - 2);\n\t\t},\n\t\teaseInOutQuad: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t;\n\t\t\t}\n\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t},\n\t\teaseInCubic: function(t) {\n\t\t\treturn t * t * t;\n\t\t},\n\t\teaseOutCubic: function(t) {\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t},\n\t\teaseInOutCubic: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t;\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t},\n\t\teaseInQuart: function(t) {\n\t\t\treturn t * t * t * t;\n\t\t},\n\t\teaseOutQuart: function(t) {\n\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t},\n\t\teaseInOutQuart: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t * t;\n\t\t\t}\n\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t},\n\t\teaseInQuint: function(t) {\n\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t},\n\t\teaseOutQuint: function(t) {\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t},\n\t\teaseInOutQuint: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t * t * t;\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t},\n\t\teaseInSine: function(t) {\n\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t},\n\t\teaseOutSine: function(t) {\n\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t},\n\t\teaseInOutSine: function(t) {\n\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t},\n\t\teaseInExpo: function(t) {\n\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t},\n\t\teaseOutExpo: function(t) {\n\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t},\n\t\teaseInOutExpo: function(t) {\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (t === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t}\n\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t},\n\t\teaseInCirc: function(t) {\n\t\t\tif (t >= 1) {\n\t\t\t\treturn t;\n\t\t\t}\n\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t},\n\t\teaseOutCirc: function(t) {\n\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t},\n\t\teaseInOutCirc: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t}\n\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t},\n\t\teaseInElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1) === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * 0.3;\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t},\n\t\teaseOutElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1) === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * 0.3;\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t},\n\t\teaseInOutElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1 / 2) === 2) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * (0.3 * 1.5);\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\tif (t < 1) {\n\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t}\n\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t},\n\t\teaseInBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t},\n\t\teaseOutBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t},\n\t\teaseInOutBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t},\n\t\teaseInBounce: function(t) {\n\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t},\n\t\teaseOutBounce: function(t) {\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t}\n\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t},\n\t\teaseInOutBounce: function(t) {\n\t\t\tif (t < 1 / 2) {\n\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t}\n\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t}\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt,\n\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\thelpers.addEvent = function(node, eventType, method) {\n\t\tif (node.addEventListener) {\n\t\t\tnode.addEventListener(eventType, method);\n\t\t} else if (node.attachEvent) {\n\t\t\tnode.attachEvent('on' + eventType, method);\n\t\t} else {\n\t\t\tnode['on' + eventType] = method;\n\t\t}\n\t};\n\thelpers.removeEvent = function(node, eventType, handler) {\n\t\tif (node.removeEventListener) {\n\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t} else if (node.detachEvent) {\n\t\t\tnode.detachEvent('on' + eventType, handler);\n\t\t} else {\n\t\t\tnode['on' + eventType] = helpers.noop;\n\t\t}\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof(styleValue) === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw)? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch)? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tcanvas.style.height = height + 'px';\n\t\tcanvas.style.width = width + 'px';\n\t};\n\t// -- Canvas methods\n\thelpers.clear = function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t};\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\t};\n\thelpers.color = function(c) {\n\t\tif (!color) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn c;\n\t\t}\n\n\t\t/* global CanvasGradient */\n\t\tif (c instanceof CanvasGradient) {\n\t\t\treturn color(Chart.defaults.global.defaultColor);\n\t\t}\n\n\t\treturn color(c);\n\t};\n\thelpers.isArray = Array.isArray?\n\t\tfunction(obj) {\n\t\t\treturn Array.isArray(obj);\n\t\t} :\n\t\tfunction(obj) {\n\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\n\t\t};\n\t// ! @see http://stackoverflow.com/a/14853974\n\thelpers.arrayEquals = function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen=a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n\thelpers.callCallback = function(fn, args, _tArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\tfn.apply(_tArg, args);\n\t\t}\n\t};\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tvar helpers = Chart.helpers;\n\n\t/**\n\t * Helper function to get relative position for an event\n\t * @param {Event|IEvent} event - The event to get the position for\n\t * @param {Chart} chart - The chart\n\t * @returns {Point} the event position\n\t */\n\tfunction getRelativePosition(e, chart) {\n\t\tif (e.native) {\n\t\t\treturn {\n\t\t\t\tx: e.x,\n\t\t\t\ty: e.y\n\t\t\t};\n\t\t}\n\n\t\treturn helpers.getRelativePosition(e, chart);\n\t}\n\n\t/**\n\t * Helper function to traverse all of the visible elements in the chart\n\t * @param chart {chart} the chart\n\t * @param handler {Function} the callback to execute for each visible item\n\t */\n\tfunction parseVisibleItems(chart, handler) {\n\t\tvar datasets = chart.data.datasets;\n\t\tvar meta, i, j, ilen, jlen;\n\n\t\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\t\tvar element = meta.data[j];\n\t\t\t\tif (!element._view.skip) {\n\t\t\t\t\thandler(element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper function to get the items that intersect the event position\n\t * @param items {ChartElement[]} elements to filter\n\t * @param position {Point} the point to be nearest to\n\t * @return {ChartElement[]} the nearest items\n\t */\n\tfunction getIntersectItems(chart, position) {\n\t\tvar elements = [];\n\n\t\tparseVisibleItems(chart, function(element) {\n\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t});\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * Helper function to get the items nearest to the event position considering all visible items in teh chart\n\t * @param chart {Chart} the chart to look at elements from\n\t * @param position {Point} the point to be nearest to\n\t * @param intersect {Boolean} if true, only consider items that intersect the position\n\t * @param distanceMetric {Function} Optional function to provide the distance between\n\t * @return {ChartElement[]} the nearest items\n\t */\n\tfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar nearestItems = [];\n\n\t\tif (!distanceMetric) {\n\t\t\tdistanceMetric = helpers.distanceBetweenPoints;\n\t\t}\n\n\t\tparseVisibleItems(chart, function(element) {\n\t\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar center = element.getCenterPoint();\n\t\t\tvar distance = distanceMetric(position, center);\n\n\t\t\tif (distance < minDistance) {\n\t\t\t\tnearestItems = [element];\n\t\t\t\tminDistance = distance;\n\t\t\t} else if (distance === minDistance) {\n\t\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\t\tnearestItems.push(element);\n\t\t\t}\n\t\t});\n\n\t\treturn nearestItems;\n\t}\n\n\tfunction indexMode(chart, e, options) {\n\t\tvar position = getRelativePosition(e, chart.chart);\n\t\tvar distanceMetric = function(pt1, pt2) {\n\t\t\treturn Math.abs(pt1.x - pt2.x);\n\t\t};\n\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\t\tvar elements = [];\n\n\t\tif (!items.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex),\n\t\t\t\t\telement = meta.data[items[0]._index];\n\n\t\t\t\t// don't count items that are skipped (null data)\n\t\t\t\tif (element && !element._view.skip) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * @interface IInteractionOptions\n\t */\n\t/**\n\t * If true, only consider items that intersect the point\n\t * @name IInterfaceOptions#boolean\n\t * @type Boolean\n\t */\n\n\t/**\n\t * Contains interaction related functions\n\t * @namespace Chart.Interaction\n\t */\n\tChart.Interaction = {\n\t\t// Helper function for different modes\n\t\tmodes: {\n\t\t\tsingle: function(chart, e) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar elements = [];\n\n\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\telements.push(element);\n\t\t\t\t\t\treturn elements;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn elements.slice(0, 1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @function Chart.Interaction.modes.label\n\t\t\t * @deprecated since version 2.4.0\n\t\t\t */\n\t\t\tlabel: indexMode,\n\n\t\t\t/**\n\t\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t\t * @function Chart.Interaction.modes.index\n\t\t\t * @since v2.4.0\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tindex: indexMode,\n\n\t\t\t/**\n\t\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t\t * @function Chart.Interaction.modes.dataset\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tdataset: function(chart, e, options) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false);\n\n\t\t\t\tif (items.length > 0) {\n\t\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t\t}\n\n\t\t\t\treturn items;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @function Chart.Interaction.modes.x-axis\n\t\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t\t */\n\t\t\t'x-axis': function(chart, e) {\n\t\t\t\treturn indexMode(chart, e, true);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Point mode returns all elements that hit test based on the event position\n\t\t\t * of the event\n\t\t\t * @function Chart.Interaction.modes.intersect\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tpoint: function(chart, e) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\treturn getIntersectItems(chart, position);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * nearest mode returns the element closest to the point\n\t\t\t * @function Chart.Interaction.modes.intersect\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tnearest: function(chart, e, options) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect);\n\n\t\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\t\tif (nearestItems.length > 1) {\n\t\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Return only 1 item\n\t\t\t\treturn nearestItems.slice(0, 1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t\t * @function Chart.Interaction.modes.x\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tx: function(chart, e, options) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar items = [];\n\t\t\t\tvar intersectsItem = false;\n\n\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\t\titems.push(element);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\tintersectsItem = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t\t// that intersect the position, return nothing\n\t\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\t\titems = [];\n\t\t\t\t}\n\t\t\t\treturn items;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t\t * @function Chart.Interaction.modes.y\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\ty: function(chart, e, options) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar items = [];\n\t\t\t\tvar intersectsItem = false;\n\n\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\t\titems.push(element);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\tintersectsItem = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t\t// that intersect the position, return nothing\n\t\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\t\titems = [];\n\t\t\t\t}\n\t\t\t\treturn items;\n\t\t\t}\n\t\t}\n\t};\n};\n","'use strict';\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.controller = new Chart.Controller(item, config, this);\n\t\treturn this.controller;\n\t};\n\n\t// Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\tresponsive: true,\n\t\t\tresponsiveAnimationDuration: 0,\n\t\t\tmaintainAspectRatio: true,\n\t\t\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\t\t\thover: {\n\t\t\t\tonHover: null,\n\t\t\t\tmode: 'nearest',\n\t\t\t\tintersect: true,\n\t\t\t\tanimationDuration: 400\n\t\t\t},\n\t\t\tonClick: null,\n\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\n\t\t\tdefaultFontColor: '#666',\n\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\t\t\tdefaultFontSize: 12,\n\t\t\tdefaultFontStyle: 'normal',\n\t\t\tshowLines: true,\n\n\t\t\t// Element defaults defined in element extensions\n\t\t\telements: {},\n\n\t\t\t// Legend callback string\n\t\t\tlegendCallback: function(chart) {\n\t\t\t\tvar text = [];\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t\ttext.push('</ul>');\n\n\t\t\t\treturn text.join('');\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n\t// It is this service's responsibility of carrying out that layout.\n\tChart.layoutService = {\n\t\tdefaults: {},\n\n\t\t// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.\n\t\taddBox: function(chartInstance, box) {\n\t\t\tif (!chartInstance.boxes) {\n\t\t\t\tchartInstance.boxes = [];\n\t\t\t}\n\t\t\tchartInstance.boxes.push(box);\n\t\t},\n\n\t\tremoveBox: function(chartInstance, box) {\n\t\t\tif (!chartInstance.boxes) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tchartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);\n\t\t},\n\n\t\t// The most important function\n\t\tupdate: function(chartInstance, width, height) {\n\n\t\t\tif (!chartInstance) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar layoutOptions = chartInstance.options.layout;\n\t\t\tvar padding = layoutOptions ? layoutOptions.padding : null;\n\n\t\t\tvar leftPadding = 0;\n\t\t\tvar rightPadding = 0;\n\t\t\tvar topPadding = 0;\n\t\t\tvar bottomPadding = 0;\n\n\t\t\tif (!isNaN(padding)) {\n\t\t\t\t// options.layout.padding is a number. assign to all\n\t\t\t\tleftPadding = padding;\n\t\t\t\trightPadding = padding;\n\t\t\t\ttopPadding = padding;\n\t\t\t\tbottomPadding = padding;\n\t\t\t} else {\n\t\t\t\tleftPadding = padding.left || 0;\n\t\t\t\trightPadding = padding.right || 0;\n\t\t\t\ttopPadding = padding.top || 0;\n\t\t\t\tbottomPadding = padding.bottom || 0;\n\t\t\t}\n\n\t\t\tvar leftBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'left';\n\t\t\t});\n\t\t\tvar rightBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'right';\n\t\t\t});\n\t\t\tvar topBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'top';\n\t\t\t});\n\t\t\tvar bottomBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'bottom';\n\t\t\t});\n\n\t\t\t// Boxes that overlay the chartarea such as the radialLinear scale\n\t\t\tvar chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'chartArea';\n\t\t\t});\n\n\t\t\t// Ensure that full width boxes are at the very top / bottom\n\t\t\ttopBoxes.sort(function(a, b) {\n\t\t\t\treturn (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);\n\t\t\t});\n\t\t\tbottomBoxes.sort(function(a, b) {\n\t\t\t\treturn (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);\n\t\t\t});\n\n\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t\t// Our canvas looks like the following.\n\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t\t// B1 is the bottom axis\n\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t\t// an error will be thrown.\n\t\t\t//\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |                  T1 (Full Width)                   |\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |    |    |                 T2                  |    |\n\t\t\t// |    |----|-------------------------------------|----|\n\t\t\t// |    |    | C1 |                           | C2 |    |\n\t\t\t// |    |    |----|                           |----|    |\n\t\t\t// |    |    |                                     |    |\n\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t\t// |    |    |                                     |    |\n\t\t\t// |    |    |----|                           |----|    |\n\t\t\t// |    |    | C3 |                           | C4 |    |\n\t\t\t// |    |----|-------------------------------------|----|\n\t\t\t// |    |    |                 B1                  |    |\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |                  B2 (Full Width)                   |\n\t\t\t// |----------------------------------------------------|\n\t\t\t//\n\t\t\t// What we do to find the best sizing, we do the following\n\t\t\t// 1. Determine the minimum size of the chart area.\n\t\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t\t// 6. Refit each axis\n\t\t\t// 7. Position each axis in the final location\n\t\t\t// 8. Tell the chart the final location of the chart area\n\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t\t// Step 1\n\t\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t\t// Step 2\n\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t\t// Step 3\n\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t\t// Step 4\n\t\t\tvar maxChartAreaWidth = chartWidth;\n\t\t\tvar maxChartAreaHeight = chartHeight;\n\t\t\tvar minBoxSizes = [];\n\n\t\t\tfunction getMinimumBoxSize(box) {\n\t\t\t\tvar minSize;\n\t\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t\t} else {\n\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\n\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t\t}\n\n\t\t\t\tminBoxSizes.push({\n\t\t\t\t\thorizontal: isHorizontal,\n\t\t\t\t\tminSize: minSize,\n\t\t\t\t\tbox: box,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\t\tvar maxHorizontalLeftPadding = 0;\n\t\t\tvar maxHorizontalRightPadding = 0;\n\t\t\tvar maxVerticalTopPadding = 0;\n\t\t\tvar maxVerticalBottomPadding = 0;\n\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\t\tif (verticalBox.getPadding) {\n\t\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t\t// be if the axes are drawn at their minimum sizes.\n\t\t\t// Steps 5 & 6\n\t\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\t\tvar totalRightBoxesWidth = rightPadding;\n\t\t\tvar totalTopBoxesHeight = topPadding;\n\t\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t\t// Function to fit a box\n\t\t\tfunction fitBox(box) {\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\t\treturn minBox.box === box;\n\t\t\t\t});\n\n\t\t\t\tif (minBoxSize) {\n\t\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\t\tbox.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\ttotalRightBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\t// Set the Left and Right margins for the horizontal boxes\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\ttotalTopBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\tfunction finalFitVerticalBox(box) {\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\t\treturn minSize.box === box;\n\t\t\t\t});\n\n\t\t\t\tvar scaleMargin = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t\t};\n\n\t\t\t\tif (minBoxSize) {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Let the left layout know the final margin\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\t\ttotalLeftBoxesWidth = leftPadding;\n\t\t\ttotalRightBoxesWidth = rightPadding;\n\t\t\ttotalTopBoxesHeight = topPadding;\n\t\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\ttotalRightBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\ttotalTopBoxesHeight += box.height;\n\t\t\t});\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\t// We may be adding some padding to account for rotated x axis labels\n\t\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t\t// without calling `fit` again\n\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t\t});\n\n\t\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t\t});\n\n\t\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\t\tif (!box.options.fullWidth) {\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\t\tif (!box.options.fullWidth) {\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t\t}\n\n\t\t\t// Step 7 - Position the boxes\n\t\t\tvar left = leftPadding + leftPaddingAddition;\n\t\t\tvar top = topPadding + topPaddingAddition;\n\n\t\t\tfunction placeBox(box) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tbox.left = box.options.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\t\tbox.right = box.options.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\t\tbox.top = top;\n\t\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t\t// Move to next point\n\t\t\t\t\ttop = box.bottom;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.left = left;\n\t\t\t\t\tbox.right = left + box.width;\n\t\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t\t// Move to next point\n\t\t\t\t\tleft = box.right;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t\t// Account for chart width and height\n\t\t\tleft += maxChartAreaWidth;\n\t\t\ttop += maxChartAreaHeight;\n\n\t\t\thelpers.each(rightBoxes, placeBox);\n\t\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t\t// Step 8\n\t\t\tchartInstance.chartArea = {\n\t\t\t\tleft: totalLeftBoxesWidth,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t\t};\n\n\t\t\t// Step 9\n\t\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\t\tbox.left = chartInstance.chartArea.left;\n\t\t\t\tbox.top = chartInstance.chartArea.top;\n\t\t\t\tbox.right = chartInstance.chartArea.right;\n\t\t\t\tbox.bottom = chartInstance.chartArea.bottom;\n\n\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t\t});\n\t\t}\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar noop = helpers.noop;\n\n\tChart.defaults.global.legend = {\n\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\t\treverse: false,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Helper function to get the box width based on the usePointStyle option\n\t * @param labelopts {Object} the label options on the legend\n\t * @param fontSize {Number} the label font size\n\t * @return {Number} width of the color box area\n\t */\n\tfunction getBoxWidth(labelOpts, fontSize) {\n\t\treturn labelOpts.usePointStyle ?\n\t\t\tfontSize * Math.SQRT2 :\n\t\t\tlabelOpts.boxWidth;\n\t}\n\n\tChart.Legend = Chart.Element.extend({\n\n\t\tinitialize: function(config) {\n\t\t\thelpers.extend(this, config);\n\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\tthis.legendHitBoxes = [];\n\n\t\t\t// Are we in doughnut mode which has a different data type\n\t\t\tthis.doughnutMode = false;\n\t\t},\n\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\t\t// Any function defined here is inherited by all legend types.\n\t\t// Any function can be extended by the legend type\n\n\t\tbeforeUpdate: noop,\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = margins;\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\t\t\t// Labels\n\t\t\tme.beforeBuildLabels();\n\t\t\tme.buildLabels();\n\t\t\tme.afterBuildLabels();\n\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\t\t},\n\t\tafterUpdate: noop,\n\n\t\t//\n\n\t\tbeforeSetDimensions: noop,\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\n\t\t\t// Reset minSize\n\t\t\tme.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t},\n\t\tafterSetDimensions: noop,\n\n\t\t//\n\n\t\tbeforeBuildLabels: noop,\n\t\tbuildLabels: function() {\n\t\t\tvar me = this;\n\t\t\tvar labelOpts = me.options.labels;\n\t\t\tvar legendItems = labelOpts.generateLabels.call(me, me.chart);\n\n\t\t\tif (labelOpts.filter) {\n\t\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (me.options.reverse) {\n\t\t\t\tlegendItems.reverse();\n\t\t\t}\n\n\t\t\tme.legendItems = legendItems;\n\t\t},\n\t\tafterBuildLabels: noop,\n\n\t\t//\n\n\t\tbeforeFit: noop,\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar labelOpts = opts.labels;\n\t\t\tvar display = opts.display;\n\n\t\t\tvar ctx = me.ctx;\n\n\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t\t// Reset hit boxes\n\t\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\t\tvar minSize = me.minSize;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\tminSize.height = display ? 10 : 0;\n\t\t\t} else {\n\t\t\t\tminSize.width = display ? 10 : 0;\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Increase sizes here\n\t\t\tif (display) {\n\t\t\t\tctx.font = labelFont;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// Labels\n\n\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t\t});\n\n\t\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t\t} else {\n\t\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\t\tvar currentColWidth = 0;\n\t\t\t\t\tvar currentColHeight = 0;\n\t\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Get max width\n\t\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\t\tminSize.width += totalWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\t\tafterFit: noop,\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\n\t\t// Actually draw the legend on the canvas\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar labelOpts = opts.labels;\n\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\tlineDefault = globalDefault.elements.line,\n\t\t\t\tlegendWidth = me.width,\n\t\t\t\tlineWidths = me.lineWidths;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx,\n\t\t\t\t\tcursor,\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t\t\t// Canvas setup\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\tctx.lineWidth = 0.5;\n\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\t\tctx.font = labelFont;\n\n\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize),\n\t\t\t\t\thitboxes = me.legendHitBoxes;\n\n\t\t\t\t// current position\n\t\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set the ctx for the box\n\t\t\t\t\tctx.save();\n\n\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\t\tvar isLineWidthZero = (itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\t\tChart.canvasHelpers.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.restore();\n\t\t\t\t};\n\t\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\n\n\t\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\n\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Horizontal\n\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor = {\n\t\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcursor = {\n\t\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\n\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\n\t\t\t\t\t\tx = cursor.x,\n\t\t\t\t\t\ty = cursor.y;\n\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\t\thitboxes[i].left = x;\n\t\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t\t// Fill the actual label\n\t\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @return {Boolean} true if a change occured\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\t\tvar changed = false;\n\n\t\t\tif (type === 'mousemove') {\n\t\t\t\tif (!opts.onHover) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else if (type === 'click') {\n\t\t\t\tif (!opts.onClick) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Chart event already has relative position in it\n\t\t\tvar x = e.x,\n\t\t\t\ty = e.y;\n\n\t\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t\t// See if we are touching one of the dataset boxes\n\t\t\t\tvar lh = me.legendHitBoxes;\n\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t\t// Touching an element\n\t\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\tfunction createNewLegendAndAttach(chartInstance, legendOpts) {\n\t\tvar legend = new Chart.Legend({\n\t\t\tctx: chartInstance.chart.ctx,\n\t\t\toptions: legendOpts,\n\t\t\tchart: chartInstance\n\t\t});\n\t\tchartInstance.legend = legend;\n\t\tChart.layoutService.addBox(chartInstance, legend);\n\t}\n\n\t// Register the legend plugin\n\tChart.plugins.register({\n\t\tbeforeInit: function(chartInstance) {\n\t\t\tvar legendOpts = chartInstance.options.legend;\n\n\t\t\tif (legendOpts) {\n\t\t\t\tcreateNewLegendAndAttach(chartInstance, legendOpts);\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function(chartInstance) {\n\t\t\tvar legendOpts = chartInstance.options.legend;\n\n\t\t\tif (legendOpts) {\n\t\t\t\tlegendOpts = helpers.configMerge(Chart.defaults.global.legend, legendOpts);\n\n\t\t\t\tif (chartInstance.legend) {\n\t\t\t\t\tchartInstance.legend.options = legendOpts;\n\t\t\t\t} else {\n\t\t\t\t\tcreateNewLegendAndAttach(chartInstance, legendOpts);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tChart.layoutService.removeBox(chartInstance, chartInstance.legend);\n\t\t\t\tdelete chartInstance.legend;\n\t\t\t}\n\t\t},\n\t\tafterEvent: function(chartInstance, e) {\n\t\t\tvar legend = chartInstance.legend;\n\t\t\tif (legend) {\n\t\t\t\tlegend.handleEvent(e);\n\t\t\t}\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.plugins = {};\n\n\t/**\n\t * The plugin service singleton\n\t * @namespace Chart.plugins\n\t * @since 2.1.0\n\t */\n\tChart.plugins = {\n\t\t/**\n\t\t * Globally registered plugins.\n\t\t * @private\n\t\t */\n\t\t_plugins: [],\n\n\t\t/**\n\t\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t\t * incremented and descriptors are regenerated during following API calls.\n\t\t * @private\n\t\t */\n\t\t_cacheId: 0,\n\n\t\t/**\n\t\t * Registers the given plugin(s) if not already registered.\n\t\t * @param {Array|Object} plugins plugin instance(s).\n\t\t */\n\t\tregister: function(plugins) {\n\t\t\tvar p = this._plugins;\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\t\tp.push(plugin);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._cacheId++;\n\t\t},\n\n\t\t/**\n\t\t * Unregisters the given plugin(s) only if registered.\n\t\t * @param {Array|Object} plugins plugin instance(s).\n\t\t */\n\t\tunregister: function(plugins) {\n\t\t\tvar p = this._plugins;\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\t\tvar idx = p.indexOf(plugin);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tp.splice(idx, 1);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._cacheId++;\n\t\t},\n\n\t\t/**\n\t\t * Remove all registered plugins.\n\t\t * @since 2.1.5\n\t\t */\n\t\tclear: function() {\n\t\t\tthis._plugins = [];\n\t\t\tthis._cacheId++;\n\t\t},\n\n\t\t/**\n\t\t * Returns the number of registered plugins?\n\t\t * @returns {Number}\n\t\t * @since 2.1.5\n\t\t */\n\t\tcount: function() {\n\t\t\treturn this._plugins.length;\n\t\t},\n\n\t\t/**\n\t\t * Returns all registered plugin instances.\n\t\t * @returns {Array} array of plugin objects.\n\t\t * @since 2.1.5\n\t\t */\n\t\tgetAll: function() {\n\t\t\treturn this._plugins;\n\t\t},\n\n\t\t/**\n\t\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t\t * returned value can be used, for instance, to interrupt the current action.\n\t\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t\t */\n\t\tnotify: function(chart, hook, args) {\n\t\t\tvar descriptors = this.descriptors(chart);\n\t\t\tvar ilen = descriptors.length;\n\t\t\tvar i, descriptor, plugin, params, method;\n\n\t\t\tfor (i=0; i<ilen; ++i) {\n\t\t\t\tdescriptor = descriptors[i];\n\t\t\t\tplugin = descriptor.plugin;\n\t\t\t\tmethod = plugin[hook];\n\t\t\t\tif (typeof method === 'function') {\n\t\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\t\tparams.push(descriptor.options);\n\t\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Returns descriptors of enabled plugins for the given chart.\n\t\t * @returns {Array} [{ plugin, options }]\n\t\t * @private\n\t\t */\n\t\tdescriptors: function(chart) {\n\t\t\tvar cache = chart._plugins || (chart._plugins = {});\n\t\t\tif (cache.id === this._cacheId) {\n\t\t\t\treturn cache.descriptors;\n\t\t\t}\n\n\t\t\tvar plugins = [];\n\t\t\tvar descriptors = [];\n\t\t\tvar config = (chart && chart.config) || {};\n\t\t\tvar defaults = Chart.defaults.global.plugins;\n\t\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar id = plugin.id;\n\t\t\t\tvar opts = options[id];\n\t\t\t\tif (opts === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (opts === true) {\n\t\t\t\t\topts = helpers.clone(defaults[id]);\n\t\t\t\t}\n\n\t\t\t\tplugins.push(plugin);\n\t\t\t\tdescriptors.push({\n\t\t\t\t\tplugin: plugin,\n\t\t\t\t\toptions: opts || {}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tcache.descriptors = descriptors;\n\t\t\tcache.id = this._cacheId;\n\t\t\treturn descriptors;\n\t\t}\n\t};\n\n\t/**\n\t * Plugin extension hooks.\n\t * @interface IPlugin\n\t * @since 2.1.0\n\t */\n\t/**\n\t * @method IPlugin#beforeInit\n\t * @desc Called before initializing `chart`.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#afterInit\n\t * @desc Called after `chart` has been initialized and before the first update.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeUpdate\n\t * @desc Called before updating `chart`. If any plugin returns `false`, the update\n\t * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart update.\n\t */\n\t/**\n\t * @method IPlugin#afterUpdate\n\t * @desc Called after `chart` has been updated and before rendering. Note that this\n\t * hook will not be called if the chart update has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeDatasetsUpdate\n \t * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n\t * the datasets update is cancelled until another `update` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} false to cancel the datasets update.\n\t * @since version 2.1.5\n\t */\n\t/**\n\t * @method IPlugin#afterDatasetsUpdate\n\t * @desc Called after the `chart` datasets have been updated. Note that this hook\n\t * will not be called if the datasets update has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @since version 2.1.5\n\t */\n\t/**\n\t * @method IPlugin#beforeLayout\n\t * @desc Called before laying out `chart`. If any plugin returns `false`,\n\t * the layout update is cancelled until another `update` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart layout.\n\t */\n\t/**\n\t * @method IPlugin#afterLayout\n\t * @desc Called after the `chart` has been layed out. Note that this hook will not\n\t * be called if the layout update has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeRender\n\t * @desc Called before rendering `chart`. If any plugin returns `false`,\n\t * the rendering is cancelled until another `render` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart rendering.\n\t */\n\t/**\n\t * @method IPlugin#afterRender\n\t * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n\t * that this hook will not be called if the rendering has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeDraw\n\t * @desc Called before drawing `chart` at every animation frame specified by the given\n\t * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n\t * another `render` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart drawing.\n\t */\n\t/**\n\t * @method IPlugin#afterDraw\n\t * @desc Called after the `chart` has been drawn for the specific easing value. Note\n\t * that this hook will not be called if the drawing has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeDatasetsDraw\n \t * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n\t * the datasets drawing is cancelled until another `render` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart datasets drawing.\n\t */\n\t/**\n\t * @method IPlugin#afterDatasetsDraw\n\t * @desc Called after the `chart` datasets have been drawn. Note that this hook\n\t * will not be called if the datasets drawing has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeEvent\n \t * @desc Called before processing the specified `event`. If any plugin returns `false`,\n\t * the event will be discarded.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {IEvent} event - The event object.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#afterEvent\n\t * @desc Called after the `event` has been consumed. Note that this hook\n\t * will not be called if the `event` has been previously discarded.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {IEvent} event - The event object.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#resize\n\t * @desc Called after the chart as been resized.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#destroy\n\t * @desc Called after the chart as been destroyed.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\n\t/**\n\t * Provided for backward compatibility, use Chart.plugins instead\n\t * @namespace Chart.pluginService\n\t * @deprecated since version 2.1.5\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.pluginService = Chart.plugins;\n\n\t/**\n\t * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n\t * effect, instead simply create/register plugins via plain JavaScript objects.\n\t * @interface Chart.PluginBase\n\t * @deprecated since version 2.5.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.PluginBase = helpers.inherits({});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.scale = {\n\t\tdisplay: true,\n\t\tposition: 'left',\n\n\t\t// grid line settings\n\t\tgridLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1,\n\t\t\tdrawBorder: true,\n\t\t\tdrawOnChartArea: true,\n\t\t\tdrawTicks: true,\n\t\t\ttickMarkLength: 10,\n\t\t\tzeroLineWidth: 1,\n\t\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\t\toffsetGridLines: false,\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0\n\t\t},\n\n\t\t// scale label\n\t\tscaleLabel: {\n\t\t\t// actual label\n\t\t\tlabelString: '',\n\n\t\t\t// display property\n\t\t\tdisplay: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tbeginAtZero: false,\n\t\t\tminRotation: 0,\n\t\t\tmaxRotation: 50,\n\t\t\tmirror: false,\n\t\t\tpadding: 0,\n\t\t\treverse: false,\n\t\t\tdisplay: true,\n\t\t\tautoSkip: true,\n\t\t\tautoSkipPadding: 0,\n\t\t\tlabelOffset: 0,\n\t\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\t\tcallback: Chart.Ticks.formatters.values\n\t\t}\n\t};\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\tvar globalDefaults = Chart.defaults.global;\n\t\tvar size = getValueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = getValueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = getValueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tChart.Scale = Chart.Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks\n\t\t\tme.beforeBuildTicks();\n\t\t\tme.buildTicks();\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\t\t\tme.convertTicksToLabels();\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, me.ticks, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation;\n\t\t\t\tvar sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar scaleLabelFontSize = parseFontOptions(scaleLabelOpts).size * 1.5;\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += scaleLabelFontSize;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += scaleLabelFontSize;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, me.ticks, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * tallestLabelHeightInLines);\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\n\t\t\t\t\tvar firstTick = me.ticks[0];\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, firstTick, tickFont.font);\n\n\t\t\t\t\tvar lastTick = me.ticks[me.ticks.length - 1];\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, lastTick, tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\n\t\t\t\t\t// by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom'? (cosRotation * firstLabelWidth) + 3: (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom'? (cosRotation * lineSpace) + 3: (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\n\t\t\t\t\t// Account for padding\n\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlargestTextWidth += me.options.ticks.padding;\n\t\t\t\t\t}\n\t\t\t\t\tminSize.width += largestTextWidth;\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callCallback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof(rawValue) === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (typeof(rawValue) === 'object') {\n\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\n\t\t\t\t\treturn rawValue;\n\t\t\t\t}\n\t\t\t\treturn this.getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t// Used to get the value to display in the tooltip for the data at the given index\n\t\t// function getLabelForIndex(index, datasetIndex)\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t// Used for tick location, should\n\t\tgetPixelForTick: function(index, includeOffset) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (includeOffset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me.ticks.length - 1)));\n\t\t},\n\n\t\t// Utility for getting the pixel location of a percentage of scale\n\t\tgetPixelForDecimal: function(decimal /* , includeOffset*/) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0:\n\t\t\t\tmin < 0 && max < 0? max :\n\t\t\t\tmin > 0 && max > 0? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar optionTicks = options.ticks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar skipRatio;\n\t\t\tvar useAutoskipper = optionTicks.autoSkip;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\t\t\tvar borderDash = helpers.getValueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\tvar borderDashOffset = helpers.getValueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\n\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\n\t\t\t// Make sure we draw text in the correct color and font\n\t\t\tcontext.fillStyle = tickFontColor;\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\t// Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation\n\t\t\t\t// See #2584\n\t\t\t\tif (isRotated) {\n\t\t\t\t\tlongestRotatedLabel /= 2;\n\t\t\t\t}\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && me.ticks.length > maxTicks) {\n\t\t\t\t\twhile (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {\n\t\t\t\t\t\tif (!skipRatio) {\n\t\t\t\t\t\t\tskipRatio = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tskipRatio += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!useAutoskipper) {\n\t\t\t\t\tskipRatio = false;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;\n\n\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\n\t\t\t\tif (label === undefined || label === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar isLastTick = me.ticks.length === index + 1;\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);\n\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar lineWidth, lineColor;\n\t\t\t\tif (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\n\t\t\t\tif (isHorizontal) {\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated? 'top':'middle';\n\t\t\t\t\t\ttextAlign = !isRotated? 'center': 'right';\n\t\t\t\t\t\tlabelY = me.top + tl;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated? 'bottom':'middle';\n\t\t\t\t\t\ttextAlign = !isRotated? 'center': 'left';\n\t\t\t\t\t\tlabelY = me.bottom - tl;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines\n\t\t\t\t\tlabelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar tickPadding = optionTicks.padding;\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = me.getPixelForTick(index); // xvalues for grid lines\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\t\t\t\t\tlabelY = me.getPixelForTick(index, gridLines.offsetGridLines);\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = tickFont.font;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tfor (var i = 0, y = 0; i < label.length; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += (tickFont.size * 1.5);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFont.size / 2) : me.top + (scaleLabelFont.size / 2);\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft ? me.left + (scaleLabelFont.size / 2) : me.right - (scaleLabelFont.size / 2);\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left,\n\t\t\t\t\tx2 = me.right,\n\t\t\t\t\ty1 = me.top,\n\t\t\t\t\ty2 = me.bottom;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(defaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar defaults = this.defaults;\n\t\t\tif (defaults.hasOwnProperty(type)) {\n\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chartInstance) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chartInstance.scales, function(scale) {\n\t\t\t\tChart.layoutService.addBox(chartInstance, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t/**\n\t * Namespace to hold static tick generation functions\n\t * @namespace Chart.Ticks\n\t */\n\tChart.Ticks = {\n\t\t/**\n\t\t * Namespace to hold generators for different types of ticks\n\t\t * @namespace Chart.Ticks.generators\n\t\t */\n\t\tgenerators: {\n\t\t\t/**\n\t\t\t * Interface for the options provided to the numeric tick generator\n\t\t\t * @interface INumericTickGenerationOptions\n\t\t\t */\n\t\t\t/**\n\t\t\t * The maximum number of ticks to display\n\t\t\t * @name INumericTickGenerationOptions#maxTicks\n\t\t\t * @type Number\n\t\t\t */\n\t\t\t/**\n\t\t\t * The distance between each tick.\n\t\t\t * @name INumericTickGenerationOptions#stepSize\n\t\t\t * @type Number\n\t\t\t * @optional\n\t\t\t */\n\t\t\t/**\n\t\t\t * Forced minimum for the ticks. If not specified, the minimum of the data range is used to calculate the tick minimum\n\t\t\t * @name INumericTickGenerationOptions#min\n\t\t\t * @type Number\n\t\t\t * @optional\n\t\t\t */\n\t\t\t/**\n\t\t\t * The maximum value of the ticks. If not specified, the maximum of the data range is used to calculate the tick maximum\n\t\t\t * @name INumericTickGenerationOptions#max\n\t\t\t * @type Number\n\t\t\t * @optional\n\t\t\t */\n\n\t\t\t/**\n\t\t\t * Generate a set of linear ticks\n\t\t\t * @method Chart.Ticks.generators.linear\n\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\n\t\t\t * @param dataRange {IRange} the range of the data\n\t\t\t * @returns {Array<Number>} array of tick values\n\t\t\t */\n\t\t\tlinear: function(generationOptions, dataRange) {\n\t\t\t\tvar ticks = [];\n\t\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t\t\t\t// for details.\n\n\t\t\t\tvar spacing;\n\t\t\t\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\t\t\t\tspacing = generationOptions.stepSize;\n\t\t\t\t} else {\n\t\t\t\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\t\t\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t\t\t\t}\n\t\t\t\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\t\t\t\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t\t\t\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\t\t\t\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t\t\t\t// If very close to our whole number, use it.\n\t\t\t\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\t\t\t\tniceMin = generationOptions.min;\n\t\t\t\t\t\tniceMax = generationOptions.max;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t\t\t\t// If very close to our rounded value, use it.\n\t\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\t\t\t\tnumSpaces = Math.round(numSpaces);\n\t\t\t\t} else {\n\t\t\t\t\tnumSpaces = Math.ceil(numSpaces);\n\t\t\t\t}\n\n\t\t\t\t// Put the values into the ticks array\n\t\t\t\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\t\t\t\tfor (var j = 1; j < numSpaces; ++j) {\n\t\t\t\t\tticks.push(niceMin + (j * spacing));\n\t\t\t\t}\n\t\t\t\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\t\t\t\treturn ticks;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Generate a set of logarithmic ticks\n\t\t\t * @method Chart.Ticks.generators.logarithmic\n\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\n\t\t\t * @param dataRange {IRange} the range of the data\n\t\t\t * @returns {Array<Number>} array of tick values\n\t\t\t */\n\t\t\tlogarithmic: function(generationOptions, dataRange) {\n\t\t\t\tvar ticks = [];\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t\t// the graph\n\t\t\t\tvar tickVal = getValueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\t\t\t\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\t\t\t\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\t\t\t\tvar exp;\n\t\t\t\tvar significand;\n\n\t\t\t\tif (tickVal === 0) {\n\t\t\t\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\t\t\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\t\t\t\tticks.push(tickVal);\n\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\n\t\t\t\t} else {\n\t\t\t\t\texp = Math.floor(helpers.log10(tickVal));\n\t\t\t\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t\t\t\t}\n\n\t\t\t\tdo {\n\t\t\t\t\tticks.push(tickVal);\n\n\t\t\t\t\t++significand;\n\t\t\t\t\tif (significand === 10) {\n\t\t\t\t\t\tsignificand = 1;\n\t\t\t\t\t\t++exp;\n\t\t\t\t\t}\n\n\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\n\t\t\t\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\t\t\t\tvar lastTick = getValueOrDefault(generationOptions.max, tickVal);\n\t\t\t\tticks.push(lastTick);\n\n\t\t\t\treturn ticks;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Namespace to hold formatters for different types of ticks\n\t\t * @namespace Chart.Ticks.formatters\n\t\t */\n\t\tformatters: {\n\t\t\t/**\n\t\t\t * Formatter for value labels\n\t\t\t * @method Chart.Ticks.formatters.values\n\t\t\t * @param value the value to display\n\t\t\t * @return {String|Array} the label to display\n\t\t\t */\n\t\t\tvalues: function(value) {\n\t\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Formatter for linear numeric ticks\n\t\t\t * @method Chart.Ticks.formatters.linear\n\t\t\t * @param tickValue {Number} the value to be formatted\n\t\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t\t * @return {String} string representation of the tickValue parameter\n\t\t\t */\n\t\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t\t// not an integer\n\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\t\tvar tickString = '';\n\n\t\t\t\tif (tickValue !== 0) {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t} else {\n\t\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t\t}\n\n\t\t\t\treturn tickString;\n\t\t\t},\n\n\t\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\t\tif (tickValue === 0) {\n\t\t\t\t\treturn '0';\n\t\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\t\treturn tickValue.toExponential();\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.title = {\n\t\tdisplay: false,\n\t\tposition: 'top',\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\n\t\tfontStyle: 'bold',\n\t\tpadding: 10,\n\n\t\t// actual title\n\t\ttext: ''\n\t};\n\n\tvar noop = helpers.noop;\n\tChart.Title = Chart.Element.extend({\n\n\t\tinitialize: function(config) {\n\t\t\tvar me = this;\n\t\t\thelpers.extend(me, config);\n\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\tme.legendHitBoxes = [];\n\t\t},\n\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\t\tbeforeUpdate: noop,\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = margins;\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\t\t\t// Labels\n\t\t\tme.beforeBuildLabels();\n\t\t\tme.buildLabels();\n\t\t\tme.afterBuildLabels();\n\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: noop,\n\n\t\t//\n\n\t\tbeforeSetDimensions: noop,\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\n\t\t\t// Reset minSize\n\t\t\tme.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t},\n\t\tafterSetDimensions: noop,\n\n\t\t//\n\n\t\tbeforeBuildLabels: noop,\n\t\tbuildLabels: noop,\n\t\tafterBuildLabels: noop,\n\n\t\t//\n\n\t\tbeforeFit: noop,\n\t\tfit: function() {\n\t\t\tvar me = this,\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\topts = me.options,\n\t\t\t\tglobalDefaults = Chart.defaults.global,\n\t\t\t\tdisplay = opts.display,\n\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\tminSize = me.minSize;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t} else {\n\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\n\t\t},\n\t\tafterFit: noop,\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\tvar pos = this.options.position;\n\t\t\treturn pos === 'top' || pos === 'bottom';\n\t\t},\n\n\t\t// Actually draw the title block on the canvas\n\t\tdraw: function() {\n\t\t\tvar me = this,\n\t\t\t\tctx = me.ctx,\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\topts = me.options,\n\t\t\t\tglobalDefaults = Chart.defaults.global;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\n\t\t\t\t\trotation = 0,\n\t\t\t\t\ttitleX,\n\t\t\t\t\ttitleY,\n\t\t\t\t\ttop = me.top,\n\t\t\t\t\tleft = me.left,\n\t\t\t\t\tbottom = me.bottom,\n\t\t\t\t\tright = me.right,\n\t\t\t\t\tmaxWidth;\n\n\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\t\tctx.font = titleFont;\n\n\t\t\t\t// Horizontal\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\n\t\t\t\t\tmaxWidth = right - left;\n\t\t\t\t} else {\n\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t\t}\n\n\t\t\t\tctx.save();\n\t\t\t\tctx.translate(titleX, titleY);\n\t\t\t\tctx.rotate(rotation);\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\tctx.fillText(opts.text, 0, 0, maxWidth);\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction createNewTitleBlockAndAttach(chartInstance, titleOpts) {\n\t\tvar title = new Chart.Title({\n\t\t\tctx: chartInstance.chart.ctx,\n\t\t\toptions: titleOpts,\n\t\t\tchart: chartInstance\n\t\t});\n\t\tchartInstance.titleBlock = title;\n\t\tChart.layoutService.addBox(chartInstance, title);\n\t}\n\n\t// Register the title plugin\n\tChart.plugins.register({\n\t\tbeforeInit: function(chartInstance) {\n\t\t\tvar titleOpts = chartInstance.options.title;\n\n\t\t\tif (titleOpts) {\n\t\t\t\tcreateNewTitleBlockAndAttach(chartInstance, titleOpts);\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function(chartInstance) {\n\t\t\tvar titleOpts = chartInstance.options.title;\n\n\t\t\tif (titleOpts) {\n\t\t\t\ttitleOpts = helpers.configMerge(Chart.defaults.global.title, titleOpts);\n\n\t\t\t\tif (chartInstance.titleBlock) {\n\t\t\t\t\tchartInstance.titleBlock.options = titleOpts;\n\t\t\t\t} else {\n\t\t\t\t\tcreateNewTitleBlockAndAttach(chartInstance, titleOpts);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tChart.layoutService.removeBox(chartInstance, chartInstance.titleBlock);\n\t\t\t\tdelete chartInstance.titleBlock;\n\t\t\t}\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\tChart.defaults.global.tooltips = {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + tooltipItem.yLabel;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chartInstance) {\n\t\t\t\tvar meta = chartInstance.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t};\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index,\n\t\t\tdatasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = Chart.defaults.global;\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize,\n\t\t\tbodyFontSize = model.bodyFontSize,\n\t\t\tfooterFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chartInstance.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize,\n\t\t\tcaretPadding = vm.caretPadding,\n\t\t\tcornerRadius = vm.cornerRadius,\n\t\t\txAlign = alignment.xAlign,\n\t\t\tyAlign = alignment.yAlign,\n\t\t\tpaddingAndSize = caretSize + caretPadding,\n\t\t\tradiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Chart.Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments),\n\t\t\t\ttitle = callbacks.title.apply(me, arguments),\n\t\t\t\tafterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\t\t\tvar chartInstance = me._chartInstance;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position](active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, chartInstance));\n\t\t\t\t});\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = helpers.getValueOrDefault(tooltipPosition.padding, 2);\n\t\t\t\tmodel.labelColors = labelColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size, opacity) {\n\t\t\tvar vm = this._view;\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar x1, x2, x3;\n\t\t\tvar y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign,\n\t\t\t\tyAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x,\n\t\t\t\tptY = tooltipPoint.y;\n\t\t\tvar width = size.width,\n\t\t\t\theight = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\t// Left or right side\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t}\n\n\t\t\t\ty2 = ptY + (height / 2);\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX + cornerRadius;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx1 = ptX + width - cornerRadius;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = ptX + (width / 2);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.lineTo(x3, y3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize,\n\t\t\t\t\ttitleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar textColor = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\tctx.fillStyle = textColor;\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\thelpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);\n\t\t\tctx.fill();\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\tif (this._options.enabled) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Caret\n\t\t\t\tthis.drawCaret(pt, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chartInstance.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tvar model = me._model;\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\n\t\t\t\t// See if our tooltip position changed\n\t\t\t\tchanged |= (model.x !== me._model.x) || (model.y !== me._model.y);\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\n\t\t\tvar nearestElement;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tglobalOpts = Chart.defaults.global;\n\n\tglobalOpts.elements.arc = {\n\t\tbackgroundColor: globalOpts.defaultColor,\n\t\tborderColor: '#fff',\n\t\tborderWidth: 2\n\t};\n\n\tChart.elements.Arc = Chart.Element.extend({\n\t\tinLabelRange: function(mouseX) {\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm) {\n\t\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tinRange: function(chartX, chartY) {\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm) {\n\t\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {\n\t\t\t\t\t\tx: chartX,\n\t\t\t\t\t\ty: chartY\n\t\t\t\t\t}),\n\t\t\t\t\tangle = pointRelativePosition.angle,\n\t\t\t\t\tdistance = pointRelativePosition.distance;\n\n\t\t\t\t// Sanitise angle range\n\t\t\t\tvar startAngle = vm.startAngle;\n\t\t\t\tvar endAngle = vm.endAngle;\n\t\t\t\twhile (endAngle < startAngle) {\n\t\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t\t}\n\t\t\t\twhile (angle > endAngle) {\n\t\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t\t}\n\t\t\t\twhile (angle < startAngle) {\n\t\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\t// Check if within the range of the open/close angle\n\t\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle),\n\t\t\t\t\twithinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\t\treturn {\n\t\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t\t};\n\t\t},\n\t\tgetArea: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\n\t\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\n\t\t\t\trangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\t\t\treturn {\n\t\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw: function() {\n\n\t\t\tvar ctx = this._chart.ctx,\n\t\t\t\tvm = this._view,\n\t\t\t\tsA = vm.startAngle,\n\t\t\t\teA = vm.endAngle;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.lineWidth = vm.borderWidth;\n\n\t\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (vm.borderWidth) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar globalDefaults = Chart.defaults.global;\n\n\tChart.defaults.global.elements.line = {\n\t\ttension: 0.4,\n\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\tborderWidth: 3,\n\t\tborderColor: globalDefaults.defaultColor,\n\t\tborderCapStyle: 'butt',\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0,\n\t\tborderJoinStyle: 'miter',\n\t\tcapBezierPoints: true,\n\t\tfill: true, // do we fill in the area between the line and its base axis\n\t};\n\n\tChart.elements.Line = Chart.Element.extend({\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar vm = me._view;\n\t\t\tvar spanGaps = vm.spanGaps;\n\t\t\tvar fillPoint = vm.scaleZero;\n\t\t\tvar loop = me._loop;\n\n\t\t\t// Handle different fill modes for cartesian lines\n\t\t\tif (!loop) {\n\t\t\t\tif (vm.fill === 'top') {\n\t\t\t\t\tfillPoint = vm.scaleTop;\n\t\t\t\t} else if (vm.fill === 'bottom') {\n\t\t\t\t\tfillPoint = vm.scaleBottom;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ctx = me._chart.ctx;\n\t\t\tctx.save();\n\n\t\t\t// Helper function to draw a line to a point\n\t\t\tfunction lineToPoint(previousPoint, point) {\n\t\t\t\tvar pointVM = point._view;\n\t\t\t\tif (point._view.steppedLine === true) {\n\t\t\t\t\tctx.lineTo(pointVM.x, previousPoint._view.y);\n\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\n\t\t\t\t} else if (point._view.tension === 0) {\n\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextX,\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextY,\n\t\t\t\t\t\tpointVM.controlPointPreviousX,\n\t\t\t\t\t\tpointVM.controlPointPreviousY,\n\t\t\t\t\t\tpointVM.x,\n\t\t\t\t\t\tpointVM.y\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar points = me._children.slice(); // clone array\n\t\t\tvar lastDrawnIndex = -1;\n\n\t\t\t// If we are looping, adding the first point again\n\t\t\tif (loop && points.length) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\tvar index, current, previous, currentVM;\n\n\t\t\t// Fill Line\n\t\t\tif (points.length && vm.fill) {\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\t\t\tcurrent = points[index];\n\t\t\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\t\t\tcurrentVM = current._view;\n\n\t\t\t\t\t// First point moves to it's starting position no matter what\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\tctx.moveTo(fillPoint.x, fillPoint.y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, fillPoint);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\t\t\tif (currentVM.skip) {\n\t\t\t\t\t\t\t// Only do this if this is the first point that is skipped\n\t\t\t\t\t\t\tif (!spanGaps && lastDrawnIndex === (index - 1)) {\n\t\t\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\t\t\tctx.lineTo(fillPoint.x, fillPoint.y);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tctx.lineTo(previous._view.x, fillPoint);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (lastDrawnIndex !== (index - 1)) {\n\t\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap. If we've never drawn a point, this is a special case.\n\t\t\t\t\t\t\t\t// If the first data point is NaN, then there is no real gap to skip\n\t\t\t\t\t\t\t\tif (spanGaps && lastDrawnIndex !== -1) {\n\t\t\t\t\t\t\t\t\t// We are spanning the gap, so simple draw a line to this point\n\t\t\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t\t\t} else if (loop) {\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, fillPoint);\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!loop && lastDrawnIndex !== -1) {\n\t\t\t\t\tctx.lineTo(points[lastDrawnIndex]._view.x, fillPoint);\n\t\t\t\t}\n\n\t\t\t\tctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t}\n\n\t\t\t// Stroke Line Options\n\t\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t\t// IE 9 and 10 do not support line dash\n\t\t\tif (ctx.setLineDash) {\n\t\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t\t}\n\n\t\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t\t// Stroke Line\n\t\t\tctx.beginPath();\n\t\t\tlastDrawnIndex = -1;\n\n\t\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\t\tcurrent = points[index];\n\t\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\t\tcurrentVM = current._view;\n\n\t\t\t\t// First point moves to it's starting position no matter what\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.stroke();\n\t\t\tctx.restore();\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tglobalOpts = Chart.defaults.global,\n\t\tdefaultColor = globalOpts.defaultColor;\n\n\tglobalOpts.elements.point = {\n\t\tradius: 3,\n\t\tpointStyle: 'circle',\n\t\tbackgroundColor: defaultColor,\n\t\tborderWidth: 1,\n\t\tborderColor: defaultColor,\n\t\t// Hover\n\t\thitRadius: 1,\n\t\thoverRadius: 4,\n\t\thoverBorderWidth: 1\n\t};\n\n\tfunction xRange(mouseX) {\n\t\tvar vm = this._view;\n\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\n\t}\n\n\tfunction yRange(mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? (Math.pow(mouseY - vm.y, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\n\t}\n\n\tChart.elements.Point = Chart.Element.extend({\n\t\tinRange: function(mouseX, mouseY) {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t\t},\n\n\t\tinLabelRange: xRange,\n\t\tinXRange: xRange,\n\t\tinYRange: yRange,\n\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\t\t},\n\t\tgetArea: function() {\n\t\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y,\n\t\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t\t};\n\t\t},\n\t\tdraw: function(chartArea) {\n\t\t\tvar vm = this._view;\n\t\t\tvar model = this._model;\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar pointStyle = vm.pointStyle;\n\t\t\tvar radius = vm.radius;\n\t\t\tvar x = vm.x;\n\t\t\tvar y = vm.y;\n\t\t\tvar color = Chart.helpers.color;\n\t\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\t\tvar ratio = 0;\n\n\t\t\tif (vm.skip) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t\t// Cliping for Points.\n\t\t\t// going out from inner charArea?\n\t\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right*errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom*errMargin < model.y))) {\n\t\t\t\t// Point fade out\n\t\t\t\tif (model.x < chartArea.left) {\n\t\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t\t} else if (chartArea.right*errMargin < model.x) {\n\t\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t\t} else if (chartArea.bottom*errMargin < model.y) {\n\t\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t\t}\n\t\t\t\tratio = Math.round(ratio*100) / 100;\n\t\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t\t}\n\n\t\t\tChart.canvasHelpers.drawPoint(ctx, pointStyle, radius, x, y);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar globalOpts = Chart.defaults.global;\n\n\tglobalOpts.elements.rectangle = {\n\t\tbackgroundColor: globalOpts.defaultColor,\n\t\tborderWidth: 0,\n\t\tborderColor: globalOpts.defaultColor,\n\t\tborderSkipped: 'bottom'\n\t};\n\n\tfunction isVertical(bar) {\n\t\treturn bar._view.width !== undefined;\n\t}\n\n\t/**\n\t * Helper function to get the bounds of the bar regardless of the orientation\n\t * @private\n\t * @param bar {Chart.Element.Rectangle} the bar\n\t * @return {Bounds} bounds of the bar\n\t */\n\tfunction getBarBounds(bar) {\n\t\tvar vm = bar._view;\n\t\tvar x1, x2, y1, y2;\n\n\t\tif (isVertical(bar)) {\n\t\t\t// vertical\n\t\t\tvar halfWidth = vm.width / 2;\n\t\t\tx1 = vm.x - halfWidth;\n\t\t\tx2 = vm.x + halfWidth;\n\t\t\ty1 = Math.min(vm.y, vm.base);\n\t\t\ty2 = Math.max(vm.y, vm.base);\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tvar halfHeight = vm.height / 2;\n\t\t\tx1 = Math.min(vm.x, vm.base);\n\t\t\tx2 = Math.max(vm.x, vm.base);\n\t\t\ty1 = vm.y - halfHeight;\n\t\t\ty2 = vm.y + halfHeight;\n\t\t}\n\n\t\treturn {\n\t\t\tleft: x1,\n\t\t\ttop: y1,\n\t\t\tright: x2,\n\t\t\tbottom: y2\n\t\t};\n\t}\n\n\tChart.elements.Rectangle = Chart.Element.extend({\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\t\tvar borderWidth = vm.borderWidth;\n\n\t\t\tif (!vm.horizontal) {\n\t\t\t\t// bar\n\t\t\t\tleft = vm.x - vm.width / 2;\n\t\t\t\tright = vm.x + vm.width / 2;\n\t\t\t\ttop = vm.y;\n\t\t\t\tbottom = vm.base;\n\t\t\t\tsignX = 1;\n\t\t\t\tsignY = bottom > top? 1: -1;\n\t\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t\t} else {\n\t\t\t\t// horizontal bar\n\t\t\t\tleft = vm.base;\n\t\t\t\tright = vm.x;\n\t\t\t\ttop = vm.y - vm.height / 2;\n\t\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\t\tsignX = right > left? 1: -1;\n\t\t\t\tsignY = 1;\n\t\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t\t}\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (borderWidth) {\n\t\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\t\tborderWidth = borderWidth > barSize? barSize: borderWidth;\n\t\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\t\tvar borderLeft = left + (borderSkipped !== 'left'? halfStroke * signX: 0);\n\t\t\t\tvar borderRight = right + (borderSkipped !== 'right'? -halfStroke * signX: 0);\n\t\t\t\tvar borderTop = top + (borderSkipped !== 'top'? halfStroke * signY: 0);\n\t\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom'? -halfStroke * signY: 0);\n\t\t\t\t// not become a vertical line?\n\t\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\t\ttop = borderTop;\n\t\t\t\t\tbottom = borderBottom;\n\t\t\t\t}\n\t\t\t\t// not become a horizontal line?\n\t\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\t\tleft = borderLeft;\n\t\t\t\t\tright = borderRight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tctx.fillStyle = vm.backgroundColor;\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.lineWidth = borderWidth;\n\n\t\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t\t// | 1 2 |\n\t\t\t// | 0 3 |\n\t\t\tvar corners = [\n\t\t\t\t[left, bottom],\n\t\t\t\t[left, top],\n\t\t\t\t[right, top],\n\t\t\t\t[right, bottom]\n\t\t\t];\n\n\t\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\t\tif (startCorner === -1) {\n\t\t\t\tstartCorner = 0;\n\t\t\t}\n\n\t\t\tfunction cornerAt(index) {\n\t\t\t\treturn corners[(startCorner + index) % 4];\n\t\t\t}\n\n\t\t\t// Draw rectangle from 'startCorner'\n\t\t\tvar corner = cornerAt(0);\n\t\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\t\tfor (var i = 1; i < 4; i++) {\n\t\t\t\tcorner = cornerAt(i);\n\t\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t\t}\n\n\t\t\tctx.fill();\n\t\t\tif (borderWidth) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm.base - vm.y;\n\t\t},\n\t\tinRange: function(mouseX, mouseY) {\n\t\t\tvar inRange = false;\n\n\t\t\tif (this._view) {\n\t\t\t\tvar bounds = getBarBounds(this);\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t\t}\n\n\t\t\treturn inRange;\n\t\t},\n\t\tinLabelRange: function(mouseX, mouseY) {\n\t\t\tvar me = this;\n\t\t\tif (!me._view) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar inRange = false;\n\t\t\tvar bounds = getBarBounds(me);\n\n\t\t\tif (isVertical(me)) {\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t\t} else {\n\t\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t\t}\n\n\t\t\treturn inRange;\n\t\t},\n\t\tinXRange: function(mouseX) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t},\n\t\tinYRange: function(mouseY) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t},\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\tvar x, y;\n\t\t\tif (isVertical(this)) {\n\t\t\t\tx = vm.x;\n\t\t\t\ty = (vm.y + vm.base) / 2;\n\t\t\t} else {\n\t\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\t\ty = vm.y;\n\t\t\t}\n\n\t\t\treturn {x: x, y: y};\n\t\t},\n\t\tgetArea: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\t\t}\n\t});\n\n};\n","'use strict';\n\n// Chart.Platform implementation for targeting a web browser\nmodule.exports = function(Chart) {\n\tvar helpers = Chart.helpers;\n\n\t// DOM event types -> Chart.js event types.\n\t// Note: only events with different types are mapped.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events\n\tvar eventTypeMap = {\n\t\t// Touch events\n\t\ttouchstart: 'mousedown',\n\t\ttouchmove: 'mousemove',\n\t\ttouchend: 'mouseup',\n\n\t\t// Pointer events\n\t\tpointerenter: 'mouseenter',\n\t\tpointerdown: 'mousedown',\n\t\tpointermove: 'mousemove',\n\t\tpointerup: 'mouseup',\n\t\tpointerleave: 'mouseout',\n\t\tpointerout: 'mouseout'\n\t};\n\n\t/**\n\t * The \"used\" size is the final value of a dimension property after all calculations have\n\t * been performed. This method uses the computed style of `element` but returns undefined\n\t * if the computed style is not expressed in pixels. That can happen in some cases where\n\t * `element` has a size relative to its parent and this last one is not yet displayed,\n\t * for example because of `display: none` on a parent node.\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n\t * @returns {Number} Size in pixels or undefined if unknown.\n\t */\n\tfunction readUsedSize(element, property) {\n\t\tvar value = helpers.getStyle(element, property);\n\t\tvar matches = value && value.match(/(\\d+)px/);\n\t\treturn matches? Number(matches[1]) : undefined;\n\t}\n\n\t/**\n\t * Initializes the canvas style and render size without modifying the canvas display size,\n\t * since responsiveness is handled by the controller.resize() method. The config is used\n\t * to determine the aspect ratio to apply in case no explicit height has been specified.\n\t */\n\tfunction initCanvas(canvas, config) {\n\t\tvar style = canvas.style;\n\n\t\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\t\tvar renderHeight = canvas.getAttribute('height');\n\t\tvar renderWidth = canvas.getAttribute('width');\n\n\t\t// Chart.js modifies some canvas values that we want to restore on destroy\n\t\tcanvas._chartjs = {\n\t\t\tinitial: {\n\t\t\t\theight: renderHeight,\n\t\t\t\twidth: renderWidth,\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: style.display,\n\t\t\t\t\theight: style.height,\n\t\t\t\t\twidth: style.width\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Force canvas to display as block to avoid extra space caused by inline\n\t\t// elements, which would interfere with the responsive resize process.\n\t\t// https://github.com/chartjs/Chart.js/issues/2538\n\t\tstyle.display = style.display || 'block';\n\n\t\tif (renderWidth === null || renderWidth === '') {\n\t\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.width = displayWidth;\n\t\t\t}\n\t\t}\n\n\t\tif (renderHeight === null || renderHeight === '') {\n\t\t\tif (canvas.style.height === '') {\n\t\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t\t} else {\n\t\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\t\tif (displayWidth !== undefined) {\n\t\t\t\t\tcanvas.height = displayHeight;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn canvas;\n\t}\n\n\tfunction createEvent(type, chart, x, y, native) {\n\t\treturn {\n\t\t\ttype: type,\n\t\t\tchart: chart,\n\t\t\tnative: native || null,\n\t\t\tx: x !== undefined? x : null,\n\t\t\ty: y !== undefined? y : null,\n\t\t};\n\t}\n\n\tfunction fromNativeEvent(event, chart) {\n\t\tvar type = eventTypeMap[event.type] || event.type;\n\t\tvar pos = helpers.getRelativePosition(event, chart);\n\t\treturn createEvent(type, chart, pos.x, pos.y, event);\n\t}\n\n\tfunction createResizer(handler) {\n\t\tvar iframe = document.createElement('iframe');\n\t\tiframe.className = 'chartjs-hidden-iframe';\n\t\tiframe.style.cssText =\n\t\t\t'display:block;'+\n\t\t\t'overflow:hidden;'+\n\t\t\t'border:0;'+\n\t\t\t'margin:0;'+\n\t\t\t'top:0;'+\n\t\t\t'left:0;'+\n\t\t\t'bottom:0;'+\n\t\t\t'right:0;'+\n\t\t\t'height:100%;'+\n\t\t\t'width:100%;'+\n\t\t\t'position:absolute;'+\n\t\t\t'pointer-events:none;'+\n\t\t\t'z-index:-1;';\n\n\t\t// Prevent the iframe to gain focus on tab.\n\t\t// https://github.com/chartjs/Chart.js/issues/3090\n\t\tiframe.tabIndex = -1;\n\n\t\t// If the iframe is re-attached to the DOM, the resize listener is removed because the\n\t\t// content is reloaded, so make sure to install the handler after the iframe is loaded.\n\t\t// https://github.com/chartjs/Chart.js/issues/3521\n\t\thelpers.addEvent(iframe, 'load', function() {\n\t\t\thelpers.addEvent(iframe.contentWindow || iframe, 'resize', handler);\n\n\t\t\t// The iframe size might have changed while loading, which can also\n\t\t\t// happen if the size has been changed while detached from the DOM.\n\t\t\thandler();\n\t\t});\n\n\t\treturn iframe;\n\t}\n\n\tfunction addResizeListener(node, listener, chart) {\n\t\tvar stub = node._chartjs = {\n\t\t\tticking: false\n\t\t};\n\n\t\t// Throttle the callback notification until the next animation frame.\n\t\tvar notify = function() {\n\t\t\tif (!stub.ticking) {\n\t\t\t\tstub.ticking = true;\n\t\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tif (stub.resizer) {\n\t\t\t\t\t\tstub.ticking = false;\n\t\t\t\t\t\treturn listener(createEvent('resize', chart));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t// Let's keep track of this added iframe and thus avoid DOM query when removing it.\n\t\tstub.resizer = createResizer(notify);\n\n\t\tnode.insertBefore(stub.resizer, node.firstChild);\n\t}\n\n\tfunction removeResizeListener(node) {\n\t\tif (!node || !node._chartjs) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar resizer = node._chartjs.resizer;\n\t\tif (resizer) {\n\t\t\tresizer.parentNode.removeChild(resizer);\n\t\t\tnode._chartjs.resizer = null;\n\t\t}\n\n\t\tdelete node._chartjs;\n\t}\n\n\treturn {\n\t\tacquireContext: function(item, config) {\n\t\t\tif (typeof item === 'string') {\n\t\t\t\titem = document.getElementById(item);\n\t\t\t} else if (item.length) {\n\t\t\t\t// Support for array based queries (such as jQuery)\n\t\t\t\titem = item[0];\n\t\t\t}\n\n\t\t\tif (item && item.canvas) {\n\t\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\t\titem = item.canvas;\n\t\t\t}\n\n\t\t\tif (item instanceof HTMLCanvasElement) {\n\t\t\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tvar context = item.getContext && item.getContext('2d');\n\t\t\t\tif (context instanceof CanvasRenderingContext2D) {\n\t\t\t\t\tinitCanvas(item, config);\n\t\t\t\t\treturn context;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\n\t\treleaseContext: function(context) {\n\t\t\tvar canvas = context.canvas;\n\t\t\tif (!canvas._chartjs) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar initial = canvas._chartjs.initial;\n\t\t\t['height', 'width'].forEach(function(prop) {\n\t\t\t\tvar value = initial[prop];\n\t\t\t\tif (value === undefined || value === null) {\n\t\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t\t} else {\n\t\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\t\tcanvas.style[key] = value;\n\t\t\t});\n\n\t\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t\tcanvas.width = canvas.width;\n\n\t\t\tdelete canvas._chartjs;\n\t\t},\n\n\t\taddEventListener: function(chart, type, listener) {\n\t\t\tvar canvas = chart.chart.canvas;\n\t\t\tif (type === 'resize') {\n\t\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\t\taddResizeListener(canvas.parentNode, listener, chart.chart);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar stub = listener._chartjs || (listener._chartjs = {});\n\t\t\tvar proxies = stub.proxies || (stub.proxies = {});\n\t\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\t\tlistener(fromNativeEvent(event, chart.chart));\n\t\t\t};\n\n\t\t\thelpers.addEvent(canvas, type, proxy);\n\t\t},\n\n\t\tremoveEventListener: function(chart, type, listener) {\n\t\t\tvar canvas = chart.chart.canvas;\n\t\t\tif (type === 'resize') {\n\t\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\t\tremoveResizeListener(canvas.parentNode, listener);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar stub = listener._chartjs || {};\n\t\t\tvar proxies = stub.proxies || {};\n\t\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\t\tif (!proxy) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thelpers.removeEvent(canvas, type, proxy);\n\t\t}\n\t};\n};\n","'use strict';\n\n// By default, select the browser (DOM) platform.\n// @TODO Make possible to select another platform at build time.\nvar implementation = require('./platform.dom.js');\n\nmodule.exports = function(Chart) {\n\t/**\n\t * @namespace Chart.platform\n\t * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n\t * @since 2.4.0\n\t */\n\tChart.platform = {\n\t\t/**\n\t\t * Called at chart construction time, returns a context2d instance implementing\n\t\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t\t * @param {Object} options - The chart options\n\t\t * @returns {CanvasRenderingContext2D} context2d instance\n\t\t */\n\t\tacquireContext: function() {},\n\n\t\t/**\n\t\t * Called at chart destruction time, releases any resources associated to the context\n\t\t * previously returned by the acquireContext() method.\n\t\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t\t * @returns {Boolean} true if the method succeeded, else false\n\t\t */\n\t\treleaseContext: function() {},\n\n\t\t/**\n\t\t * Registers the specified listener on the given chart.\n\t\t * @param {Chart} chart - Chart from which to listen for event\n\t\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t\t * @param {Function} listener - Receives a notification (an object that implements\n\t\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t\t */\n\t\taddEventListener: function() {},\n\n\t\t/**\n\t\t * Removes the specified listener previously registered with addEventListener.\n\t\t * @param {Chart} chart -Chart from which to remove the listener\n\t\t * @param {String} type - The ({@link IEvent}) type to remove\n\t\t * @param {Function} listener - The listener function to remove from the event target.\n\t\t */\n\t\tremoveEventListener: function() {}\n\t};\n\n\t/**\n\t * @interface IPlatform\n\t * Allows abstracting platform dependencies away from the chart\n\t * @borrows Chart.platform.acquireContext as acquireContext\n\t * @borrows Chart.platform.releaseContext as releaseContext\n\t * @borrows Chart.platform.addEventListener as addEventListener\n\t * @borrows Chart.platform.removeEventListener as removeEventListener\n\t */\n\n\t/**\n\t * @interface IEvent\n\t * @prop {String} type - The event type name, possible values are:\n\t * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n\t * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n\t * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n\t * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n\t * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n\t */\n\n\tChart.helpers.extend(Chart.platform, implementation(Chart));\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\t\t// Implement this so that\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\n\t\t\tvar me = this;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\n\t\t\tif (value !== undefined && isNaN(index)) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset || me.maxIndex === me.minIndex && includeOffset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index, includeOffset) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (me.options.gridLines.offsetGridLines) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Chart.Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t\treturn Math.round(pixel);\n\t\t\t}\n\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\treturn Math.round(pixel);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tnoop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.linear(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Chart.Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tvalues[index] = 100;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\n\t\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = getValueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = getValueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = 1;\n\t\t\t\t\tme.max = 10;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.logarithmic(generationOptions, me);\n\n\t\t\tif (!me.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tticks.reverse();\n\t\t\t}\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar innerDimension;\n\t\t\tvar pixel;\n\n\t\t\tvar start = me.start;\n\t\t\tvar newVal = +me.getRightValue(value);\n\t\t\tvar range;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0\n\t\t\t\tif (newVal === 0) {\n\t\t\t\t\tpixel = me.left;\n\t\t\t\t} else {\n\t\t\t\t\tinnerDimension = me.width;\n\t\t\t\t\tpixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Bottom - top since pixels increase downward on a screen\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tif (start === 0 && !tickOpts.reverse) {\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(me.minNotZero);\n\t\t\t\t\tif (newVal === start) {\n\t\t\t\t\t\tpixel = me.bottom;\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\n\t\t\t\t\t\tpixel = me.bottom - innerDimension * 0.02;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpixel = me.bottom - innerDimension * 0.02 - (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\n\t\t\t\t\t}\n\t\t\t\t} else if (me.end === 0 && tickOpts.reverse) {\n\t\t\t\t\trange = helpers.log10(me.start) - helpers.log10(me.minNotZero);\n\t\t\t\t\tif (newVal === me.end) {\n\t\t\t\t\t\tpixel = me.top;\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\n\t\t\t\t\t\tpixel = me.top + innerDimension * 0.02;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpixel = me.top + innerDimension * 0.02 + (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start);\n\t\t\t\t\tinnerDimension = me.height;\n\t\t\t\t\tpixel = me.bottom - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar range = helpers.log10(me.end) - helpers.log10(me.start);\n\t\t\tvar value, innerDimension;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = me.start * Math.pow(10, (pixel - me.left) * range / innerDimension);\n\t\t\t} else {  // todo: if start === 0\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = Math.pow(10, (me.bottom - pixel) * range / innerDimension) / me.start;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar globalDefaults = Chart.defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tlineArc: false,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Chart.Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\treturn !scale.options.lineArc ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.getValueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.getValueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.getValueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tl: scale.width,\n\t\t\tr: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i;\n\t\tvar textSize;\n\t\tvar pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty+= spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\t\t\t// Extra 3px out for some label spacing\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tctx.font = plFont.font;\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.lineArc) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.lineArc) {\n\t\t\t\tfit(this);\n\t\t\t} else {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + me.drawingArea,\n\t\t\t\tmaxTop = topMovement + me.drawingArea,\n\t\t\t\tmaxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero? 0:\n\t\t\t\tmin < 0 && max < 0? max :\n\t\t\t\tmin > 0 && max > 0? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || opts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\t\t\t\t\t\tvar yHeight = me.yCenter - yCenterOffset;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tme.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, me.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (!opts.lineArc) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof(moment) === 'function' ? moment : window.moment;\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar time = {\n\t\tunits: [{\n\t\t\tname: 'millisecond',\n\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t\t}, {\n\t\t\tname: 'second',\n\t\t\tsteps: [1, 2, 5, 10, 30]\n\t\t}, {\n\t\t\tname: 'minute',\n\t\t\tsteps: [1, 2, 5, 10, 30]\n\t\t}, {\n\t\t\tname: 'hour',\n\t\t\tsteps: [1, 2, 3, 6, 12]\n\t\t}, {\n\t\t\tname: 'day',\n\t\t\tsteps: [1, 2, 5]\n\t\t}, {\n\t\t\tname: 'week',\n\t\t\tmaxStep: 4\n\t\t}, {\n\t\t\tname: 'month',\n\t\t\tmaxStep: 3\n\t\t}, {\n\t\t\tname: 'quarter',\n\t\t\tmaxStep: 4\n\t\t}, {\n\t\t\tname: 'year',\n\t\t\tmaxStep: false\n\t\t}]\n\t};\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\thour: 'MMM D, hA', // Sept 4, 5PM\n\t\t\t\tday: 'll', // Sep 4 2015\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t}\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\t\tgetLabelMoment: function(datasetIndex, index) {\n\t\t\tif (datasetIndex === null || index === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (typeof this.labelMoments[datasetIndex] !== 'undefined') {\n\t\t\t\treturn this.labelMoments[datasetIndex][index];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tgetLabelDiff: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tif (datasetIndex === null || index === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (me.labelDiffs === undefined) {\n\t\t\t\tme.buildLabelDiffs();\n\t\t\t}\n\n\t\t\tif (typeof me.labelDiffs[datasetIndex] !== 'undefined') {\n\t\t\t\treturn me.labelDiffs[datasetIndex][index];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tgetMomentStartOf: function(tick) {\n\t\t\tvar me = this;\n\t\t\tif (me.options.time.unit === 'week' && me.options.time.isoWeekday !== false) {\n\t\t\t\treturn tick.clone().startOf('isoWeek').isoWeekday(me.options.time.isoWeekday);\n\t\t\t}\n\t\t\treturn tick.clone().startOf(me.tickUnit);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tme.labelMoments = [];\n\n\t\t\t// Only parse these once. If the dataset does not have data as x,y pairs, we will use\n\t\t\t// these\n\t\t\tvar scaleLabelMoments = [];\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\n\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\n\n\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscaleLabelMoments.push(labelMoment);\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\n\t\t\t\tme.firstTick = moment.min.call(me, scaleLabelMoments);\n\t\t\t\tme.lastTick = moment.max.call(me, scaleLabelMoments);\n\t\t\t} else {\n\t\t\t\tme.firstTick = null;\n\t\t\t\tme.lastTick = null;\n\t\t\t}\n\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar momentsForDataset = [];\n\t\t\t\tvar datasetVisible = me.chart.isDatasetVisible(datasetIndex);\n\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\n\t\t\t\t\thelpers.each(dataset.data, function(value) {\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\n\n\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmomentsForDataset.push(labelMoment);\n\n\t\t\t\t\t\t\tif (datasetVisible) {\n\t\t\t\t\t\t\t\t// May have gone outside the scale ranges, make sure we keep the first and last ticks updated\n\t\t\t\t\t\t\t\tme.firstTick = me.firstTick !== null ? moment.min(me.firstTick, labelMoment) : labelMoment;\n\t\t\t\t\t\t\t\tme.lastTick = me.lastTick !== null ? moment.max(me.lastTick, labelMoment) : labelMoment;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, me);\n\t\t\t\t} else {\n\t\t\t\t\t// We have no labels. Use the ones from the scale\n\t\t\t\t\tmomentsForDataset = scaleLabelMoments;\n\t\t\t\t}\n\n\t\t\t\tme.labelMoments.push(momentsForDataset);\n\t\t\t}, me);\n\n\t\t\t// Set these after we've done all the data\n\t\t\tif (me.options.time.min) {\n\t\t\t\tme.firstTick = me.parseTime(me.options.time.min);\n\t\t\t}\n\n\t\t\tif (me.options.time.max) {\n\t\t\t\tme.lastTick = me.parseTime(me.options.time.max);\n\t\t\t}\n\n\t\t\t// We will modify these, so clone for later\n\t\t\tme.firstTick = (me.firstTick || moment()).clone();\n\t\t\tme.lastTick = (me.lastTick || moment()).clone();\n\t\t},\n\t\tbuildLabelDiffs: function() {\n\t\t\tvar me = this;\n\t\t\tme.labelDiffs = [];\n\t\t\tvar scaleLabelDiffs = [];\n\t\t\t// Parse common labels once\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\n\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\n\n\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscaleLabelDiffs.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\t\t\t}\n\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset) {\n\t\t\t\tvar diffsForDataset = [];\n\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\n\t\t\t\t\thelpers.each(dataset.data, function(value) {\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\n\n\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdiffsForDataset.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, me);\n\t\t\t\t} else {\n\t\t\t\t\t// We have no labels. Use common ones\n\t\t\t\t\tdiffsForDataset = scaleLabelDiffs;\n\t\t\t\t}\n\n\t\t\t\tme.labelDiffs.push(diffsForDataset);\n\t\t\t}, me);\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\n\t\t\tme.ctx.save();\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(me.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(me.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\t\tme.ctx.font = tickLabelFont;\n\n\t\t\tme.ticks = [];\n\t\t\tme.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step\n\t\t\tme.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)\n\n\t\t\t// Set unit override if applicable\n\t\t\tif (me.options.time.unit) {\n\t\t\t\tme.tickUnit = me.options.time.unit || 'day';\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, 1);\n\t\t\t} else {\n\t\t\t\t// Determine the smallest needed unit of the time\n\t\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\t\t// Crude approximation of what the label length might be\n\t\t\t\tvar tempFirstLabel = me.tickFormatFunction(me.firstTick, 0, []);\n\t\t\t\tvar tickLabelWidth = me.ctx.measureText(tempFirstLabel).width;\n\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.options.ticks.maxRotation));\n\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.options.ticks.maxRotation));\n\t\t\t\ttickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t\t\tvar labelCapacity = innerWidth / (tickLabelWidth);\n\n\t\t\t\t// Start as small as possible\n\t\t\t\tme.tickUnit = me.options.time.minUnit;\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\n\n\t\t\t\tvar unitDefinitionIndex = 0;\n\t\t\t\tvar unitDefinition = time.units[unitDefinitionIndex];\n\n\t\t\t\t// While we aren't ideal and we don't have units left\n\t\t\t\twhile (unitDefinitionIndex < time.units.length) {\n\t\t\t\t\t// Can we scale this unit. If `false` we can scale infinitely\n\t\t\t\t\tme.unitScale = 1;\n\n\t\t\t\t\tif (helpers.isArray(unitDefinition.steps) && Math.ceil(me.scaleSizeInUnits / labelCapacity) < helpers.max(unitDefinition.steps)) {\n\t\t\t\t\t\t// Use one of the predefined steps\n\t\t\t\t\t\tfor (var idx = 0; idx < unitDefinition.steps.length; ++idx) {\n\t\t\t\t\t\t\tif (unitDefinition.steps[idx] >= Math.ceil(me.scaleSizeInUnits / labelCapacity)) {\n\t\t\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, unitDefinition.steps[idx]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if ((unitDefinition.maxStep === false) || (Math.ceil(me.scaleSizeInUnits / labelCapacity) < unitDefinition.maxStep)) {\n\t\t\t\t\t\t// We have a max step. Scale this unit\n\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, Math.ceil(me.scaleSizeInUnits / labelCapacity));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Move to the next unit up\n\t\t\t\t\t\t++unitDefinitionIndex;\n\t\t\t\t\t\tunitDefinition = time.units[unitDefinitionIndex];\n\n\t\t\t\t\t\tme.tickUnit = unitDefinition.name;\n\t\t\t\t\t\tvar leadingUnitBuffer = me.firstTick.diff(me.getMomentStartOf(me.firstTick), me.tickUnit, true);\n\t\t\t\t\t\tvar trailingUnitBuffer = me.getMomentStartOf(me.lastTick.clone().add(1, me.tickUnit)).diff(me.lastTick, me.tickUnit, true);\n\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;\n\t\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[unitDefinition.name];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar roundedStart;\n\n\t\t\t// Only round the first tick if we have no hard minimum\n\t\t\tif (!me.options.time.min) {\n\t\t\t\tme.firstTick = me.getMomentStartOf(me.firstTick);\n\t\t\t\troundedStart = me.firstTick;\n\t\t\t} else {\n\t\t\t\troundedStart = me.getMomentStartOf(me.firstTick);\n\t\t\t}\n\n\t\t\t// Only round the last tick if we have no hard maximum\n\t\t\tif (!me.options.time.max) {\n\t\t\t\tvar roundedEnd = me.getMomentStartOf(me.lastTick);\n\t\t\t\tvar delta = roundedEnd.diff(me.lastTick, me.tickUnit, true);\n\t\t\t\tif (delta < 0) {\n\t\t\t\t\t// Do not use end of because we need me to be in the next time unit\n\t\t\t\t\tme.lastTick = me.getMomentStartOf(me.lastTick.add(1, me.tickUnit));\n\t\t\t\t} else if (delta >= 0) {\n\t\t\t\t\tme.lastTick = roundedEnd;\n\t\t\t\t}\n\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t}\n\n\t\t\t// Tick displayFormat override\n\t\t\tif (me.options.time.displayFormat) {\n\t\t\t\tme.displayFormat = me.options.time.displayFormat;\n\t\t\t}\n\n\t\t\t// first tick. will have been rounded correctly if options.time.min is not specified\n\t\t\tme.ticks.push(me.firstTick.clone());\n\n\t\t\t// For every unit in between the first and last moment, create a moment and add it to the ticks tick\n\t\t\tfor (var i = me.unitScale; i <= me.scaleSizeInUnits; i += me.unitScale) {\n\t\t\t\tvar newTick = roundedStart.clone().add(i, me.tickUnit);\n\n\t\t\t\t// Are we greater than the max time\n\t\t\t\tif (me.options.time.max && newTick.diff(me.lastTick, me.tickUnit, true) >= 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tme.ticks.push(newTick);\n\t\t\t}\n\n\t\t\t// Always show the right tick\n\t\t\tvar diff = me.ticks[me.ticks.length - 1].diff(me.lastTick, me.tickUnit);\n\t\t\tif (diff !== 0 || me.scaleSizeInUnits === 0) {\n\t\t\t\t// this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart\n\t\t\t\t// but the last tick was not rounded.\n\t\t\t\tif (me.options.time.max) {\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.ticks[0], me.tickUnit, true);\n\t\t\t\t} else {\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.ctx.restore();\n\n\t\t\t// Invalidate label diffs cache\n\t\t\tme.labelDiffs = undefined;\n\t\t},\n\t\t// Get tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar label = me.chart.data.labels && index < me.chart.data.labels.length ? me.chart.data.labels[index] : '';\n\t\t\tvar value = me.chart.data.datasets[datasetIndex].data[index];\n\n\t\t\tif (value !== null && typeof value === 'object') {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\n\t\t\t// Format nicely\n\t\t\tif (me.options.time.tooltipFormat) {\n\t\t\t\tlabel = me.parseTime(label).format(me.options.time.tooltipFormat);\n\t\t\t}\n\n\t\t\treturn label;\n\t\t},\n\t\t// Function to format an individual tick mark\n\t\ttickFormatFunction: function(tick, index, ticks) {\n\t\t\tvar formattedTick = tick.format(this.displayFormat);\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\tif (callback) {\n\t\t\t\treturn callback(formattedTick, index, ticks);\n\t\t\t}\n\t\t\treturn formattedTick;\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.tickMoments = me.ticks;\n\t\t\tme.ticks = me.ticks.map(me.tickFormatFunction, me);\n\t\t},\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar offset = null;\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\toffset = me.getLabelDiff(datasetIndex, index);\n\t\t\t}\n\n\t\t\tif (offset === null) {\n\t\t\t\tif (!value || !value.isValid) {\n\t\t\t\t\t// not already a moment object\n\t\t\t\t\tvalue = me.parseTime(me.getRightValue(value));\n\t\t\t\t}\n\t\t\t\tif (value && value.isValid && value.isValid()) {\n\t\t\t\t\toffset = value.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (offset !== null) {\n\t\t\t\tvar decimal = offset !== 0 ? offset / me.scaleSizeInUnits : offset;\n\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tvar valueOffset = (me.width * decimal);\n\t\t\t\t\treturn me.left + Math.round(valueOffset);\n\t\t\t\t}\n\n\t\t\t\tvar heightOffset = (me.height * decimal);\n\t\t\t\treturn me.top + Math.round(heightOffset);\n\t\t\t}\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickMoments[index], null, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar innerDimension = me.isHorizontal() ? me.width : me.height;\n\t\t\tvar offset = (pixel - (me.isHorizontal() ? me.left : me.top)) / innerDimension;\n\t\t\toffset *= me.scaleSizeInUnits;\n\t\t\treturn me.firstTick.clone().add(moment.duration(offset, me.tickUnit).asSeconds(), 'seconds');\n\t\t},\n\t\tparseTime: function(label) {\n\t\t\tvar me = this;\n\t\t\tif (typeof me.options.time.parser === 'string') {\n\t\t\t\treturn moment(label, me.options.time.parser);\n\t\t\t}\n\t\t\tif (typeof me.options.time.parser === 'function') {\n\t\t\t\treturn me.options.time.parser(label);\n\t\t\t}\n\t\t\t// Date objects\n\t\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\n\t\t\t\treturn moment(label);\n\t\t\t}\n\t\t\t// Moment support\n\t\t\tif (label.isValid && label.isValid()) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t\t// Custom parsing (return an instance of moment)\n\t\t\tif (typeof me.options.time.format !== 'string' && me.options.time.format.call) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale');\n\t\t\t\treturn me.options.time.format(label);\n\t\t\t}\n\t\t\t// Moment format parsing\n\t\t\treturn moment(label, me.options.time.format);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n\n};\n","/* MIT license */\r\nvar colorNames = require('color-name');\r\n\r\nmodule.exports = {\r\n   getRgba: getRgba,\r\n   getHsla: getHsla,\r\n   getRgb: getRgb,\r\n   getHsl: getHsl,\r\n   getHwb: getHwb,\r\n   getAlpha: getAlpha,\r\n\r\n   hexString: hexString,\r\n   rgbString: rgbString,\r\n   rgbaString: rgbaString,\r\n   percentString: percentString,\r\n   percentaString: percentaString,\r\n   hslString: hslString,\r\n   hslaString: hslaString,\r\n   hwbString: hwbString,\r\n   keyword: keyword\r\n}\r\n\r\nfunction getRgba(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n       hex =  /^#([a-fA-F0-9]{6})$/,\r\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       keyword = /(\\w+)/;\r\n\r\n   var rgb = [0, 0, 0],\r\n       a = 1,\r\n       match = string.match(abbr);\r\n   if (match) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i] + match[i], 16);\r\n      }\r\n   }\r\n   else if (match = string.match(hex)) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n      }\r\n   }\r\n   else if (match = string.match(rgba)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i + 1]);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(per)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(keyword)) {\r\n      if (match[1] == \"transparent\") {\r\n         return [0, 0, 0, 0];\r\n      }\r\n      rgb = colorNames[match[1]];\r\n      if (!rgb) {\r\n         return;\r\n      }\r\n   }\r\n\r\n   for (var i = 0; i < rgb.length; i++) {\r\n      rgb[i] = scale(rgb[i], 0, 255);\r\n   }\r\n   if (!a && a != 0) {\r\n      a = 1;\r\n   }\r\n   else {\r\n      a = scale(a, 0, 1);\r\n   }\r\n   rgb[3] = a;\r\n   return rgb;\r\n}\r\n\r\nfunction getHsla(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hsl);\r\n   if (match) {\r\n      var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          s = scale(parseFloat(match[2]), 0, 100),\r\n          l = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, s, l, a];\r\n   }\r\n}\r\n\r\nfunction getHwb(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hwb);\r\n   if (match) {\r\n    var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          w = scale(parseFloat(match[2]), 0, 100),\r\n          b = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, w, b, a];\r\n   }\r\n}\r\n\r\nfunction getRgb(string) {\r\n   var rgba = getRgba(string);\r\n   return rgba && rgba.slice(0, 3);\r\n}\r\n\r\nfunction getHsl(string) {\r\n  var hsla = getHsla(string);\r\n  return hsla && hsla.slice(0, 3);\r\n}\r\n\r\nfunction getAlpha(string) {\r\n   var vals = getRgba(string);\r\n   if (vals) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHsla(string)) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHwb(string)) {\r\n      return vals[3];\r\n   }\r\n}\r\n\r\n// generators\r\nfunction hexString(rgb) {\r\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n              + hexDouble(rgb[2]);\r\n}\r\n\r\nfunction rgbString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return rgbaString(rgba, alpha);\r\n   }\r\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n}\r\n\r\nfunction rgbaString(rgba, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n   }\r\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n           + \", \" + alpha + \")\";\r\n}\r\n\r\nfunction percentString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return percentaString(rgba, alpha);\r\n   }\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n\r\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n}\r\n\r\nfunction percentaString(rgba, alpha) {\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n}\r\n\r\nfunction hslString(hsla, alpha) {\r\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n      return hslaString(hsla, alpha);\r\n   }\r\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n}\r\n\r\nfunction hslaString(hsla, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n   }\r\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n           + alpha + \")\";\r\n}\r\n\r\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n// (hwb have alpha optional & 1 is default value)\r\nfunction hwbString(hwb, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n   }\r\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n}\r\n\r\nfunction keyword(rgb) {\r\n  return reverseNames[rgb.slice(0, 3)];\r\n}\r\n\r\n// helpers\r\nfunction scale(num, min, max) {\r\n   return Math.min(Math.max(min, num), max);\r\n}\r\n\r\nfunction hexDouble(num) {\r\n  var str = num.toString(16).toUpperCase();\r\n  return (str.length < 2) ? \"0\" + str : str;\r\n}\r\n\r\n\r\n//create a list of reverse color names\r\nvar reverseNames = {};\r\nfor (var name in colorNames) {\r\n   reverseNames[colorNames[name]] = name;\r\n}\r\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","module.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};","//! moment.js\n//! version : 2.18.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    var k;\n    for (k in obj) {\n        // even if its not own property I'd still call it non-empty\n        return false;\n    }\n    return true;\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nvar some$1 = some;\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar keys$1 = keys;\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid()) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nvar indexOf$1 = indexOf;\n\nfunction daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            require('./locale/' + name);\n            // because defineLocale currently also sets the global locale, we\n            // want to undo that for lazy loaded locales\n            getSetGlobalLocale(oldLocale);\n        } catch (e) { }\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, parentConfig = baseConfig;\n        // MERGE\n        if (locales[name] != null) {\n            parentConfig = locales[name]._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys$1(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var string, match, dayFormat,\n        dateFormat, timeFormat, tzFormat;\n    var timezones = {\n        ' GMT': ' +0000',\n        ' EDT': ' -0400',\n        ' EST': ' -0500',\n        ' CDT': ' -0500',\n        ' CST': ' -0600',\n        ' MDT': ' -0600',\n        ' MST': ' -0700',\n        ' PDT': ' -0700',\n        ' PST': ' -0800'\n    };\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n    var timezone, timezoneIndex;\n\n    string = config._i\n        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n    match = basicRfcRegex.exec(string);\n\n    if (match) {\n        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        if (match[1]) { // day of week given\n            var momentDate = new Date(match[2]);\n            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\n            if (match[1].substr(0,3) !== momentDay) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return;\n            }\n        }\n\n        switch (match[5].length) {\n            case 2: // military\n                if (timezoneIndex === 0) {\n                    timezone = ' +0000';\n                } else {\n                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n                }\n                break;\n            case 4: // Zone\n                timezone = timezones[match[5]];\n                break;\n            default: // UT or +/-9999\n                timezone = timezones[' GMT'];\n        }\n        match[5] = timezone;\n        config._i = match.splice(1).join('');\n        tzFormat = ' ZZ';\n        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n        configFromStringAndFormat(config);\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString() {\n    if (!this.isValid()) {\n        return null;\n    }\n    var m = this.clone().utc();\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        return this.toDate().toISOString();\n    }\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds;\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    return (total < 0 ? '-' : '') +\n        'P' +\n        (Y ? Y + 'Y' : '') +\n        (M ? M + 'M' : '') +\n        (D ? D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? h + 'H' : '') +\n        (m ? m + 'M' : '') +\n        (s ? s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.18.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\nreturn hooks;\n\n})));\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n","// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import uuid from 'uuid';\r\nimport Chart from 'chart.js'\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyA5p1Hl_sxOPsvcsSJQ9Ja5POe6HtyudOk\",\r\n    authDomain: \"test-d75f6.firebaseapp.com\",\r\n    databaseURL: \"https://test-d75f6.firebaseio.com\",\r\n    storageBucket: \"test-d75f6.appspot.com\",\r\n    messagingSenderId: \"389657327548\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nconst database = firebase.database();\r\n\r\n// var provider = new firebase.auth.GoogleAuthProvider(); \r\n// firebase.auth().signInWithPopup(provider).then(function(result) {      \r\n//   var token         = result.credential.accessToken;      \r\n//   var user          = result.user;      // 使用者資訊\r\n// }).catch(function(error) {\r\n//   // 處理錯誤\r\n//   var errorCode     = error.code;\r\n//   var errorMessage  = error.message;     \r\n//   var email         = error.email;      // 使用者所使用的 Email\r\n//   var credential    = error.credential;      \r\n// });\r\n\r\nfunction writeAccountData(id, title, type, number, date) {\r\n    const accountRef = database.ref('skyran/' + id);\r\n    accountRef.set({\r\n        title: title,\r\n        type: type,\r\n        number: number,\r\n        date: date\r\n    });\r\n    accountRef.on('value', function(snapshot) {\r\n        console.log('success');\r\n        window.location = './index.html';\r\n    });\r\n}\r\n\r\nfunction readAccountData() {\r\n    let str = `\r\n    <thead>\r\n      <tr>\r\n        <th class=\"col-md-1\"></th>\r\n        <th class=\"col-md-2\">Title</th>\r\n        <th class=\"col-md-2\">Type</th>\r\n        <th class=\"col-md-2\">Number</th>\r\n        <th class=\"col-md-2\">Time</th>\r\n        <th class=\"col-md-2\">Edit</th>\r\n        <th class=\"col-md-1\"></th>\r\n      </tr>\r\n    </thead>  \r\n  `;\r\n    const accountRef = database.ref('skyran/');\r\n    const infoRef = document.querySelector('#data-chart-info');\r\n    const dataTableRef = document.querySelector('#data-table');\r\n\r\n    accountRef.once('value').then(function(snapshot) {\r\n        const data = snapshot.val();\r\n        console.log(data);\r\n        if (data === null) {\r\n            // str += '<h4>目前沒有資料喔！</h4>';\r\n            dataTableRef.innerHTML = '<h4>Creat New Expense</h4>';\r\n            infoRef.innerHTML = '<h4>Have no data</h4>';\r\n        } else {\r\n\r\n            loadChart(data);\r\n            Object.keys(data).forEach(function(key, index) {\r\n                str +=\r\n                    `\r\n          <tr>\r\n            <td></td>\r\n            <td>${data[key].title}</td>\r\n            <td>${data[key].type}</td>\r\n            <td>$ ${data[key].number}</td>\r\n            <td>${data[key].date}</td>\r\n            <td>  \r\n              <button type=\"button\" class=\"btn btn-primary update-btn\" data-id=\"${key}\">Update</button>\r\n              <button type=\"button\" class=\"btn btn-danger delete-btn\" data-id=\"${key}\">Delete</button>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n        `;\r\n            });\r\n            document.querySelector('#data-table').innerHTML = str;\r\n            updateBtnListener();\r\n            deleteBtnListener();\r\n        }\r\n    });\r\n}\r\n\r\nfunction readFormData() {\r\n    const params = window.location.search.replace('?', '').split('&');\r\n    console.log(params);\r\n    const addFormRef = document.querySelector(\"#add-form\");\r\n    addFormRef.title.value = decodeURI(params[1].split('=')[1]);\r\n    addFormRef.type.value = params[2].split('=')[1];\r\n    addFormRef.number.value = params[3].split('=')[1];\r\n    addFormRef.date.value = params[4].split('=')[1];\r\n}\r\n\r\nfunction updateData(id, title, type, number, date) {\r\n    const accountRef = database.ref('skyran/' + id);\r\n    accountRef.update({\r\n        title: title,\r\n        type: type,\r\n        number: number,\r\n        date: date\r\n    });\r\n    accountRef.on('value', function(snapshot) {\r\n        // console.log('success');\r\n        window.location = './index.html';\r\n    });\r\n}\r\n\r\nfunction deleteData(id) {\r\n    const accountRef = database.ref('skyran/' + id);\r\n    accountRef.remove();\r\n    accountRef.on('value', function(snapshot) {\r\n        // console.log('success');\r\n        // let str =\r\n        //             `\r\n        //     <div class=\"alert alert-warning alert-dismissible\" role=\"alert\">\r\n        //         <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n        //         <strong>Warning!</strong> Better check yourself, you're not looking too good.\r\n        //     </div>  \r\n        // `;\r\n        // document.querySelector('#messenge').innerHTML = str;\r\n        window.location = './index.html';\r\n    });\r\n}\r\n\r\nfunction submitListener(submitType) {\r\n    const addFormRef = document.querySelector(\"#add-form\");\r\n    addFormRef.addEventListener('submit', function(e) {\r\n        e.preventDefault();\r\n        const id = uuid.v1(); //random\r\n        const title = addFormRef.title.value;\r\n        const type = addFormRef.type.value;\r\n        const number = addFormRef.number.value;\r\n        const date = addFormRef.date.value;\r\n        if (submitType === 'create') {\r\n            writeAccountData(id, title, type, number, date);\r\n        } else {\r\n            const params = window.location.search.replace('?', '').split('&');\r\n            const id = params[0].split('=')[1];\r\n            updateData(id, title, type, number, date);\r\n        }\r\n    });\r\n}\r\n\r\nfunction updateBtnListener() {\r\n    const updateBtns = document.querySelectorAll(\".update-btn\");\r\n    console.log(updateBtns);\r\n    for (let i = 0; i < updateBtns.length; i++) {\r\n        updateBtns[i].addEventListener('click', function(e) {\r\n            const id = updateBtns[i].getAttribute('data-id');\r\n            e.preventDefault();\r\n            const accountRef = database.ref('skyran/' + id);\r\n            accountRef.on('value', function(snapshot) {\r\n                window.location = '/update.html?id=' + id + '&title=' + snapshot.val().title + '&type=' + snapshot.val().type + '&number=' + snapshot.val().number + '&date=' + snapshot.val().date;\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nfunction deleteBtnListener() {\r\n    const deleteBtns = document.querySelectorAll(\".delete-btn\");\r\n    console.log(deleteBtns);\r\n    for (let i = 0; i < deleteBtns.length; i++) {\r\n        deleteBtns[i].addEventListener('click', function(e) {\r\n            const id = deleteBtns[i].getAttribute('data-id');\r\n            e.preventDefault();\r\n            // if (confirm('確認刪除？')) {\r\n            //     deleteData(id);\r\n            // } else {\r\n            //     alert('你按下取消');\r\n            // }\r\n            deleteData(id);\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadChart(rawData) {\r\n    let Meal = 0;\r\n    let Life = 0;\r\n    let Entertainment = 0;\r\n    let edu = 0;\r\n    let Traffic = 0;\r\n    let Others = 0;\r\n    let total = 0;\r\n    const ctxRef = document.querySelector('#data-chart');\r\n    const infoRef = document.querySelector('#data-chart-info');\r\n    const totalRef = document.querySelector('#total-number');\r\n    for (const key in rawData) {\r\n        if (rawData.hasOwnProperty(key)) {\r\n            const type = rawData[key].type;\r\n            const number = rawData[key].number;\r\n            total += parseInt(number);\r\n            switch (type) {\r\n                case 'Meal':\r\n                    Meal += parseInt(number);\r\n                    break;\r\n                case 'Life':\r\n                    Life += parseInt(number);\r\n                    break;\r\n                case 'Entertainment':\r\n                    Entertainment += parseInt(number);\r\n                    break;\r\n                case 'edu':\r\n                    edu += parseInt(number);\r\n                    break;\r\n                case 'Traffic':\r\n                    Traffic += parseInt(number);\r\n                    break;\r\n                case 'Others':\r\n                    Others += parseInt(number);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // totalRef.innerHTML = `$ ${total}`;\r\n    const data = {\r\n        labels: [\r\n            'Meal',\r\n            'Life',\r\n            'Entertainment',\r\n            'Traffic',\r\n            'Others'\r\n        ],\r\n        datasets: [{\r\n            label: \"\",\r\n            data: [Meal, Life, Entertainment, Traffic, Others],\r\n            backgroundColor: [\r\n                'rgba(91, 192, 235, 0.9)',\r\n                'rgba(253, 231, 76, 0.9)',\r\n                'rgba(155, 197, 61, 0.9)',\r\n                'rgba(229, 89, 52, 0.9)',\r\n                'rgba(250, 121, 33, 0.9)'\r\n            ],\r\n            borderColor: [\r\n                'rgba(91, 192, 235, 1)',\r\n                'rgba(253, 231, 76,1)',\r\n                'rgba(155, 197, 61,1)',\r\n                'rgba(229, 89, 52,1)',\r\n                'rgba(250, 121, 33,1)'\r\n            ],\r\n            borderWidth: 1\r\n        }],\r\n        // options: {\r\n        //     legend: {\r\n        //         display: false,\r\n        //     },\r\n        //     scales: {\r\n        //         xAxes: [{\r\n        //             stacked: true\r\n        //         }],\r\n        //         yAxes: [{\r\n        //             stacked: true\r\n        //         }]\r\n        //     }\r\n        // }\r\n    };\r\n    const myPieChart = new Chart(ctxRef, {\r\n        type: 'bar',\r\n        data: data,\r\n        options: {\r\n            legend: {\r\n                display: false\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nconst path = window.location.pathname;\r\n\r\nswitch (path) {\r\n    case '/create.html':\r\n        submitListener('create');\r\n        break;\r\n    case '/update.html':\r\n        readFormData();\r\n        submitListener('update');\r\n        break;\r\n    default:\r\n        readAccountData();\r\n}\r\n"]}